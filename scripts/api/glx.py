import Api
from Api import Api
from Api import Function, Typedef, Enum
from Api import Return, Parameter, Input, Output, InputOutput
from Api import Enumerant
from Api import Extension
from Api import StateType, State

glx = Api()

XID = Typedef('XID','unsigned long')
XID.default = '0'

Display = Typedef('Display','struct _XDisplay')
Display.default = '0'

Font = Typedef('Font','XID')
Font.default = '0'

GLXContext = Typedef('GLXContext','struct __GLXcontextRec *')
GLXContext.category = 'GLX_VERSION_1_0'
GLXContext.default = '0'

GLXContextID = Typedef('GLXContextID','XID')
GLXContextID.category = 'GLX_EXT_import_context'
GLXContextID.default = '0'

GLXDrawable = Typedef('GLXDrawable','XID')
GLXDrawable.category = 'GLX_VERSION_1_0'
GLXDrawable.default = '0'

GLXFBConfig = Typedef('GLXFBConfig','struct __GLXFBConfigRec *')
GLXFBConfig.category = 'GLX_VERSION_1_3'
GLXFBConfig.default = '0'

GLXFBConfigID = Typedef('GLXFBConfigID','XID')
GLXFBConfigID.category = 'GLX_VERSION_1_3'
GLXFBConfigID.default = '0'

GLXFBConfigIDSGIX = Typedef('GLXFBConfigIDSGIX','XID')
GLXFBConfigIDSGIX.category = 'GLX_SGIX_fbconfig'
GLXFBConfigIDSGIX.default = '0'

GLXFBConfigSGIX = Typedef('GLXFBConfigSGIX','struct __GLXFBConfigRec *')
GLXFBConfigSGIX.category = 'GLX_SGIX_fbconfig'
GLXFBConfigSGIX.default = '0'

GLXPbuffer = Typedef('GLXPbuffer','XID')
GLXPbuffer.category = 'GLX_VERSION_1_3'
GLXPbuffer.default = '0'

GLXPbufferSGIX = Typedef('GLXPbufferSGIX','XID')
GLXPbufferSGIX.default = '0'

GLXPixmap = Typedef('GLXPixmap','XID')
GLXPixmap.category = 'GLX_VERSION_1_0'
GLXPixmap.default = '0'

GLXVideoCaptureDeviceNV = Typedef('GLXVideoCaptureDeviceNV','XID')
GLXVideoCaptureDeviceNV.category = 'GLX_NV_video_capture'
GLXVideoCaptureDeviceNV.default = '0'

GLXVideoDeviceNV = Typedef('GLXVideoDeviceNV','unsigned int')
GLXVideoDeviceNV.category = 'GLX_VERSION_1_0'
GLXVideoDeviceNV.default = '0'

GLXWindow = Typedef('GLXWindow','XID')
GLXWindow.category = 'GLX_VERSION_1_3'
GLXWindow.default = '0'

Pixmap = Typedef('Pixmap','XID')
Pixmap.default = '0'

glx.add(XID)
glx.add(Display)
glx.add(Font)
glx.add(GLXContext)
glx.add(GLXContextID)
glx.add(GLXDrawable)
glx.add(GLXFBConfig)
glx.add(GLXFBConfigID)
glx.add(GLXFBConfigIDSGIX)
glx.add(GLXFBConfigSGIX)
glx.add(GLXPbuffer)
glx.add(GLXPbufferSGIX)
glx.add(GLXPixmap)
glx.add(GLXVideoCaptureDeviceNV)
glx.add(GLXVideoDeviceNV)
glx.add(GLXWindow)
glx.add(Pixmap)


defines = Enum('defines')
glx.add(defines)

# GLX_3DFX_multisample

GLX_SAMPLES_3DFX = Enumerant('GLX_SAMPLES_3DFX', 0x8051, 'GLX_3DFX_multisample')
GLX_SAMPLE_BUFFERS_3DFX = Enumerant('GLX_SAMPLE_BUFFERS_3DFX', 0x8050, 'GLX_3DFX_multisample')

defines.add(GLX_SAMPLES_3DFX)
defines.add(GLX_SAMPLE_BUFFERS_3DFX)

# GLX_AMD_gpu_association

GLX_GPU_CLOCK_AMD = Enumerant('GLX_GPU_CLOCK_AMD', 0x21a4, 'GLX_AMD_gpu_association')
GLX_GPU_FASTEST_TARGET_GPUS_AMD = Enumerant('GLX_GPU_FASTEST_TARGET_GPUS_AMD', 0x21a2, 'GLX_AMD_gpu_association')
GLX_GPU_NUM_PIPES_AMD = Enumerant('GLX_GPU_NUM_PIPES_AMD', 0x21a5, 'GLX_AMD_gpu_association')
GLX_GPU_NUM_RB_AMD = Enumerant('GLX_GPU_NUM_RB_AMD', 0x21a7, 'GLX_AMD_gpu_association')
GLX_GPU_NUM_SIMD_AMD = Enumerant('GLX_GPU_NUM_SIMD_AMD', 0x21a6, 'GLX_AMD_gpu_association')
GLX_GPU_NUM_SPI_AMD = Enumerant('GLX_GPU_NUM_SPI_AMD', 0x21a8, 'GLX_AMD_gpu_association')
GLX_GPU_OPENGL_VERSION_STRING_AMD = Enumerant('GLX_GPU_OPENGL_VERSION_STRING_AMD', 0x1f02, 'GLX_AMD_gpu_association')
GLX_GPU_RAM_AMD = Enumerant('GLX_GPU_RAM_AMD', 0x21a3, 'GLX_AMD_gpu_association')
GLX_GPU_RENDERER_STRING_AMD = Enumerant('GLX_GPU_RENDERER_STRING_AMD', 0x1f01, 'GLX_AMD_gpu_association')
GLX_GPU_VENDOR_AMD = Enumerant('GLX_GPU_VENDOR_AMD', 0x1f00, 'GLX_AMD_gpu_association')

defines.add(GLX_GPU_CLOCK_AMD)
defines.add(GLX_GPU_FASTEST_TARGET_GPUS_AMD)
defines.add(GLX_GPU_NUM_PIPES_AMD)
defines.add(GLX_GPU_NUM_RB_AMD)
defines.add(GLX_GPU_NUM_SIMD_AMD)
defines.add(GLX_GPU_NUM_SPI_AMD)
defines.add(GLX_GPU_OPENGL_VERSION_STRING_AMD)
defines.add(GLX_GPU_RAM_AMD)
defines.add(GLX_GPU_RENDERER_STRING_AMD)
defines.add(GLX_GPU_VENDOR_AMD)

# GLX_ARB_create_context

GLX_CONTEXT_DEBUG_BIT_ARB = Enumerant('GLX_CONTEXT_DEBUG_BIT_ARB', 0x0001, 'GLX_ARB_create_context')
GLX_CONTEXT_FLAGS_ARB = Enumerant('GLX_CONTEXT_FLAGS_ARB', 0x2094, 'GLX_ARB_create_context')
GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB = Enumerant('GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB', 0x0002, 'GLX_ARB_create_context')
GLX_CONTEXT_MAJOR_VERSION_ARB = Enumerant('GLX_CONTEXT_MAJOR_VERSION_ARB', 0x2091, 'GLX_ARB_create_context')
GLX_CONTEXT_MINOR_VERSION_ARB = Enumerant('GLX_CONTEXT_MINOR_VERSION_ARB', 0x2092, 'GLX_ARB_create_context')

defines.add(GLX_CONTEXT_DEBUG_BIT_ARB)
defines.add(GLX_CONTEXT_FLAGS_ARB)
defines.add(GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB)
defines.add(GLX_CONTEXT_MAJOR_VERSION_ARB)
defines.add(GLX_CONTEXT_MINOR_VERSION_ARB)

# GLX_ARB_create_context_profile

GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB = Enumerant('GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB', 0x0002, 'GLX_ARB_create_context_profile')
GLX_CONTEXT_CORE_PROFILE_BIT_ARB = Enumerant('GLX_CONTEXT_CORE_PROFILE_BIT_ARB', 0x0001, 'GLX_ARB_create_context_profile')
GLX_CONTEXT_PROFILE_MASK_ARB = Enumerant('GLX_CONTEXT_PROFILE_MASK_ARB', 0x9126, 'GLX_ARB_create_context_profile')

defines.add(GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB)
defines.add(GLX_CONTEXT_CORE_PROFILE_BIT_ARB)
defines.add(GLX_CONTEXT_PROFILE_MASK_ARB)

# GLX_ARB_create_context_robustness

GLX_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB = Enumerant('GLX_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB', 0x8256, 'GLX_ARB_create_context_robustness')
GLX_CONTEXT_ROBUST_ACCESS_BIT_ARB = Enumerant('GLX_CONTEXT_ROBUST_ACCESS_BIT_ARB', 0x0004, 'GLX_ARB_create_context_robustness')
GLX_LOSE_CONTEXT_ON_RESET_ARB = Enumerant('GLX_LOSE_CONTEXT_ON_RESET_ARB', 0x8252, 'GLX_ARB_create_context_robustness')
GLX_NO_RESET_NOTIFICATION_ARB = Enumerant('GLX_NO_RESET_NOTIFICATION_ARB', 0x8261, 'GLX_ARB_create_context_robustness')

defines.add(GLX_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB)
defines.add(GLX_CONTEXT_ROBUST_ACCESS_BIT_ARB)
defines.add(GLX_LOSE_CONTEXT_ON_RESET_ARB)
defines.add(GLX_NO_RESET_NOTIFICATION_ARB)

# GLX_ARB_fbconfig_float

GLX_RGBA_FLOAT_BIT = Enumerant('GLX_RGBA_FLOAT_BIT', 0x0004, 'GLX_ARB_fbconfig_float')
GLX_RGBA_FLOAT_TYPE = Enumerant('GLX_RGBA_FLOAT_TYPE', 0x20b9, 'GLX_ARB_fbconfig_float')

defines.add(GLX_RGBA_FLOAT_BIT)
defines.add(GLX_RGBA_FLOAT_TYPE)

# GLX_ARB_framebuffer_sRGB

GLX_FRAMEBUFFER_SRGB_CAPABLE_ARB = Enumerant('GLX_FRAMEBUFFER_SRGB_CAPABLE_ARB', 0x20b2, 'GLX_ARB_framebuffer_sRGB')

defines.add(GLX_FRAMEBUFFER_SRGB_CAPABLE_ARB)

# GLX_ARB_multisample

GLX_SAMPLES_ARB = Enumerant('GLX_SAMPLES_ARB', 0x186a1, 'GLX_ARB_multisample')
GLX_SAMPLE_BUFFERS_ARB = Enumerant('GLX_SAMPLE_BUFFERS_ARB', 0x186a0, 'GLX_ARB_multisample')

defines.add(GLX_SAMPLES_ARB)
defines.add(GLX_SAMPLE_BUFFERS_ARB)

# GLX_ARB_robustness_share_group_isolation

GLX_CONTEXT_RESET_ISOLATION_BIT_ARB = Enumerant('GLX_CONTEXT_RESET_ISOLATION_BIT_ARB', 0x0008, 'GLX_ARB_robustness_share_group_isolation')

defines.add(GLX_CONTEXT_RESET_ISOLATION_BIT_ARB)

# GLX_ARB_vertex_buffer_object

GLX_CONTEXT_ALLOW_BUFFER_BYTE_ORDER_MISMATCH_ARB = Enumerant('GLX_CONTEXT_ALLOW_BUFFER_BYTE_ORDER_MISMATCH_ARB', 0x2095, 'GLX_ARB_vertex_buffer_object')

defines.add(GLX_CONTEXT_ALLOW_BUFFER_BYTE_ORDER_MISMATCH_ARB)

# GLX_ATI_pixel_format_float

GLX_RGBA_FLOAT_ATI_BIT = Enumerant('GLX_RGBA_FLOAT_ATI_BIT', 0x0100, 'GLX_ATI_pixel_format_float')

defines.add(GLX_RGBA_FLOAT_ATI_BIT)

# GLX_ATI_render_texture

GLX_AUX0_ATI = Enumerant('GLX_AUX0_ATI', 0x9817, 'GLX_ATI_render_texture')
GLX_AUX1_ATI = Enumerant('GLX_AUX1_ATI', 0x9818, 'GLX_ATI_render_texture')
GLX_AUX2_ATI = Enumerant('GLX_AUX2_ATI', 0x9819, 'GLX_ATI_render_texture')
GLX_AUX3_ATI = Enumerant('GLX_AUX3_ATI', 0x981a, 'GLX_ATI_render_texture')
GLX_AUX4_ATI = Enumerant('GLX_AUX4_ATI', 0x981b, 'GLX_ATI_render_texture')
GLX_AUX5_ATI = Enumerant('GLX_AUX5_ATI', 0x981c, 'GLX_ATI_render_texture')
GLX_AUX6_ATI = Enumerant('GLX_AUX6_ATI', 0x981d, 'GLX_ATI_render_texture')
GLX_AUX7_ATI = Enumerant('GLX_AUX7_ATI', 0x981e, 'GLX_ATI_render_texture')
GLX_AUX8_ATI = Enumerant('GLX_AUX8_ATI', 0x981f, 'GLX_ATI_render_texture')
GLX_AUX9_ATI = Enumerant('GLX_AUX9_ATI', 0x9820, 'GLX_ATI_render_texture')
GLX_BACK_LEFT_ATI = Enumerant('GLX_BACK_LEFT_ATI', 0x9815, 'GLX_ATI_render_texture')
GLX_BACK_RIGHT_ATI = Enumerant('GLX_BACK_RIGHT_ATI', 0x9816, 'GLX_ATI_render_texture')
GLX_BIND_TO_TEXTURE_INTENSITY_ATI = Enumerant('GLX_BIND_TO_TEXTURE_INTENSITY_ATI', 0x9822, 'GLX_ATI_render_texture')
GLX_BIND_TO_TEXTURE_LUMINANCE_ATI = Enumerant('GLX_BIND_TO_TEXTURE_LUMINANCE_ATI', 0x9821, 'GLX_ATI_render_texture')
GLX_BIND_TO_TEXTURE_RGBA_ATI = Enumerant('GLX_BIND_TO_TEXTURE_RGBA_ATI', 0x9801, 'GLX_ATI_render_texture')
GLX_BIND_TO_TEXTURE_RGB_ATI = Enumerant('GLX_BIND_TO_TEXTURE_RGB_ATI', 0x9800, 'GLX_ATI_render_texture')
GLX_CUBE_MAP_FACE_ATI = Enumerant('GLX_CUBE_MAP_FACE_ATI', 0x980c, 'GLX_ATI_render_texture')
GLX_FRONT_LEFT_ATI = Enumerant('GLX_FRONT_LEFT_ATI', 0x9813, 'GLX_ATI_render_texture')
GLX_FRONT_RIGHT_ATI = Enumerant('GLX_FRONT_RIGHT_ATI', 0x9814, 'GLX_ATI_render_texture')
GLX_MIPMAP_LEVEL_ATI = Enumerant('GLX_MIPMAP_LEVEL_ATI', 0x980b, 'GLX_ATI_render_texture')
GLX_MIPMAP_TEXTURE_ATI = Enumerant('GLX_MIPMAP_TEXTURE_ATI', 0x9804, 'GLX_ATI_render_texture')
GLX_NO_TEXTURE_ATI = Enumerant('GLX_NO_TEXTURE_ATI', 0x9807, 'GLX_ATI_render_texture')
GLX_TEXTURE_1D_ATI = Enumerant('GLX_TEXTURE_1D_ATI', 0x9809, 'GLX_ATI_render_texture')
GLX_TEXTURE_2D_ATI = Enumerant('GLX_TEXTURE_2D_ATI', 0x980a, 'GLX_ATI_render_texture')
GLX_TEXTURE_CUBE_MAP_ATI = Enumerant('GLX_TEXTURE_CUBE_MAP_ATI', 0x9808, 'GLX_ATI_render_texture')
GLX_TEXTURE_CUBE_MAP_NEGATIVE_X_ATI = Enumerant('GLX_TEXTURE_CUBE_MAP_NEGATIVE_X_ATI', 0x980e, 'GLX_ATI_render_texture')
GLX_TEXTURE_CUBE_MAP_NEGATIVE_Y_ATI = Enumerant('GLX_TEXTURE_CUBE_MAP_NEGATIVE_Y_ATI', 0x9810, 'GLX_ATI_render_texture')
GLX_TEXTURE_CUBE_MAP_NEGATIVE_Z_ATI = Enumerant('GLX_TEXTURE_CUBE_MAP_NEGATIVE_Z_ATI', 0x9812, 'GLX_ATI_render_texture')
GLX_TEXTURE_CUBE_MAP_POSITIVE_X_ATI = Enumerant('GLX_TEXTURE_CUBE_MAP_POSITIVE_X_ATI', 0x980d, 'GLX_ATI_render_texture')
GLX_TEXTURE_CUBE_MAP_POSITIVE_Y_ATI = Enumerant('GLX_TEXTURE_CUBE_MAP_POSITIVE_Y_ATI', 0x980f, 'GLX_ATI_render_texture')
GLX_TEXTURE_CUBE_MAP_POSITIVE_Z_ATI = Enumerant('GLX_TEXTURE_CUBE_MAP_POSITIVE_Z_ATI', 0x9811, 'GLX_ATI_render_texture')
GLX_TEXTURE_FORMAT_ATI = Enumerant('GLX_TEXTURE_FORMAT_ATI', 0x9802, 'GLX_ATI_render_texture')
GLX_TEXTURE_RGBA_ATI = Enumerant('GLX_TEXTURE_RGBA_ATI', 0x9806, 'GLX_ATI_render_texture')
GLX_TEXTURE_RGB_ATI = Enumerant('GLX_TEXTURE_RGB_ATI', 0x9805, 'GLX_ATI_render_texture')
GLX_TEXTURE_TARGET_ATI = Enumerant('GLX_TEXTURE_TARGET_ATI', 0x9803, 'GLX_ATI_render_texture')

defines.add(GLX_AUX0_ATI)
defines.add(GLX_AUX1_ATI)
defines.add(GLX_AUX2_ATI)
defines.add(GLX_AUX3_ATI)
defines.add(GLX_AUX4_ATI)
defines.add(GLX_AUX5_ATI)
defines.add(GLX_AUX6_ATI)
defines.add(GLX_AUX7_ATI)
defines.add(GLX_AUX8_ATI)
defines.add(GLX_AUX9_ATI)
defines.add(GLX_BACK_LEFT_ATI)
defines.add(GLX_BACK_RIGHT_ATI)
defines.add(GLX_BIND_TO_TEXTURE_INTENSITY_ATI)
defines.add(GLX_BIND_TO_TEXTURE_LUMINANCE_ATI)
defines.add(GLX_BIND_TO_TEXTURE_RGBA_ATI)
defines.add(GLX_BIND_TO_TEXTURE_RGB_ATI)
defines.add(GLX_CUBE_MAP_FACE_ATI)
defines.add(GLX_FRONT_LEFT_ATI)
defines.add(GLX_FRONT_RIGHT_ATI)
defines.add(GLX_MIPMAP_LEVEL_ATI)
defines.add(GLX_MIPMAP_TEXTURE_ATI)
defines.add(GLX_NO_TEXTURE_ATI)
defines.add(GLX_TEXTURE_1D_ATI)
defines.add(GLX_TEXTURE_2D_ATI)
defines.add(GLX_TEXTURE_CUBE_MAP_ATI)
defines.add(GLX_TEXTURE_CUBE_MAP_NEGATIVE_X_ATI)
defines.add(GLX_TEXTURE_CUBE_MAP_NEGATIVE_Y_ATI)
defines.add(GLX_TEXTURE_CUBE_MAP_NEGATIVE_Z_ATI)
defines.add(GLX_TEXTURE_CUBE_MAP_POSITIVE_X_ATI)
defines.add(GLX_TEXTURE_CUBE_MAP_POSITIVE_Y_ATI)
defines.add(GLX_TEXTURE_CUBE_MAP_POSITIVE_Z_ATI)
defines.add(GLX_TEXTURE_FORMAT_ATI)
defines.add(GLX_TEXTURE_RGBA_ATI)
defines.add(GLX_TEXTURE_RGB_ATI)
defines.add(GLX_TEXTURE_TARGET_ATI)

# GLX_EXT_create_context_es2_profile

GLX_CONTEXT_ES2_PROFILE_BIT_EXT = Enumerant('GLX_CONTEXT_ES2_PROFILE_BIT_EXT', 0x0004, 'GLX_EXT_create_context_es2_profile')

defines.add(GLX_CONTEXT_ES2_PROFILE_BIT_EXT)

# GLX_EXT_create_context_es_profile

GLX_CONTEXT_ES_PROFILE_BIT_EXT = Enumerant('GLX_CONTEXT_ES_PROFILE_BIT_EXT', 0x0004, 'GLX_EXT_create_context_es_profile')

defines.add(GLX_CONTEXT_ES_PROFILE_BIT_EXT)

# GLX_EXT_fbconfig_packed_float

GLX_RGBA_UNSIGNED_FLOAT_BIT_EXT = Enumerant('GLX_RGBA_UNSIGNED_FLOAT_BIT_EXT', 0x0008, 'GLX_EXT_fbconfig_packed_float')
GLX_RGBA_UNSIGNED_FLOAT_TYPE_EXT = Enumerant('GLX_RGBA_UNSIGNED_FLOAT_TYPE_EXT', 0x20b1, 'GLX_EXT_fbconfig_packed_float')

defines.add(GLX_RGBA_UNSIGNED_FLOAT_BIT_EXT)
defines.add(GLX_RGBA_UNSIGNED_FLOAT_TYPE_EXT)

# GLX_EXT_framebuffer_sRGB

GLX_FRAMEBUFFER_SRGB_CAPABLE_EXT = Enumerant('GLX_FRAMEBUFFER_SRGB_CAPABLE_EXT', 0x20b2, 'GLX_EXT_framebuffer_sRGB')

defines.add(GLX_FRAMEBUFFER_SRGB_CAPABLE_EXT)

# GLX_EXT_import_context

GLX_SHARE_CONTEXT_EXT = Enumerant('GLX_SHARE_CONTEXT_EXT', 0x800a, 'GLX_EXT_import_context')
GLX_VISUAL_ID_EXT = Enumerant('GLX_VISUAL_ID_EXT', 0x800b, 'GLX_EXT_import_context')

defines.add(GLX_SHARE_CONTEXT_EXT)
defines.add(GLX_VISUAL_ID_EXT)

# GLX_EXT_swap_control

GLX_MAX_SWAP_INTERVAL_EXT = Enumerant('GLX_MAX_SWAP_INTERVAL_EXT', 0x20f2, 'GLX_EXT_swap_control')
GLX_SWAP_INTERVAL_EXT = Enumerant('GLX_SWAP_INTERVAL_EXT', 0x20f1, 'GLX_EXT_swap_control')

defines.add(GLX_MAX_SWAP_INTERVAL_EXT)
defines.add(GLX_SWAP_INTERVAL_EXT)

# GLX_EXT_swap_control_tear

GLX_LATE_SWAPS_TEAR_EXT = Enumerant('GLX_LATE_SWAPS_TEAR_EXT', 0x20f3, 'GLX_EXT_swap_control_tear')

defines.add(GLX_LATE_SWAPS_TEAR_EXT)

# GLX_EXT_texture_from_pixmap

GLX_AUX0_EXT = Enumerant('GLX_AUX0_EXT', 0x20e2, 'GLX_EXT_texture_from_pixmap')
GLX_AUX1_EXT = Enumerant('GLX_AUX1_EXT', 0x20e3, 'GLX_EXT_texture_from_pixmap')
GLX_AUX2_EXT = Enumerant('GLX_AUX2_EXT', 0x20e4, 'GLX_EXT_texture_from_pixmap')
GLX_AUX3_EXT = Enumerant('GLX_AUX3_EXT', 0x20e5, 'GLX_EXT_texture_from_pixmap')
GLX_AUX4_EXT = Enumerant('GLX_AUX4_EXT', 0x20e6, 'GLX_EXT_texture_from_pixmap')
GLX_AUX5_EXT = Enumerant('GLX_AUX5_EXT', 0x20e7, 'GLX_EXT_texture_from_pixmap')
GLX_AUX6_EXT = Enumerant('GLX_AUX6_EXT', 0x20e8, 'GLX_EXT_texture_from_pixmap')
GLX_AUX7_EXT = Enumerant('GLX_AUX7_EXT', 0x20e9, 'GLX_EXT_texture_from_pixmap')
GLX_AUX8_EXT = Enumerant('GLX_AUX8_EXT', 0x20ea, 'GLX_EXT_texture_from_pixmap')
GLX_AUX9_EXT = Enumerant('GLX_AUX9_EXT', 0x20eb, 'GLX_EXT_texture_from_pixmap')
GLX_BACK_LEFT_EXT = Enumerant('GLX_BACK_LEFT_EXT', 0x20e0, 'GLX_EXT_texture_from_pixmap')
GLX_BACK_RIGHT_EXT = Enumerant('GLX_BACK_RIGHT_EXT', 0x20e1, 'GLX_EXT_texture_from_pixmap')
GLX_BIND_TO_MIPMAP_TEXTURE_EXT = Enumerant('GLX_BIND_TO_MIPMAP_TEXTURE_EXT', 0x20d2, 'GLX_EXT_texture_from_pixmap')
GLX_BIND_TO_TEXTURE_RGBA_EXT = Enumerant('GLX_BIND_TO_TEXTURE_RGBA_EXT', 0x20d1, 'GLX_EXT_texture_from_pixmap')
GLX_BIND_TO_TEXTURE_RGB_EXT = Enumerant('GLX_BIND_TO_TEXTURE_RGB_EXT', 0x20d0, 'GLX_EXT_texture_from_pixmap')
GLX_BIND_TO_TEXTURE_TARGETS_EXT = Enumerant('GLX_BIND_TO_TEXTURE_TARGETS_EXT', 0x20d3, 'GLX_EXT_texture_from_pixmap')
GLX_FRONT_LEFT_EXT = Enumerant('GLX_FRONT_LEFT_EXT', 0x20de, 'GLX_EXT_texture_from_pixmap')
GLX_FRONT_RIGHT_EXT = Enumerant('GLX_FRONT_RIGHT_EXT', 0x20df, 'GLX_EXT_texture_from_pixmap')
GLX_MIPMAP_TEXTURE_EXT = Enumerant('GLX_MIPMAP_TEXTURE_EXT', 0x20d7, 'GLX_EXT_texture_from_pixmap')
GLX_TEXTURE_1D_BIT_EXT = Enumerant('GLX_TEXTURE_1D_BIT_EXT', 0x0001, 'GLX_EXT_texture_from_pixmap')
GLX_TEXTURE_1D_EXT = Enumerant('GLX_TEXTURE_1D_EXT', 0x20db, 'GLX_EXT_texture_from_pixmap')
GLX_TEXTURE_2D_BIT_EXT = Enumerant('GLX_TEXTURE_2D_BIT_EXT', 0x0002, 'GLX_EXT_texture_from_pixmap')
GLX_TEXTURE_2D_EXT = Enumerant('GLX_TEXTURE_2D_EXT', 0x20dc, 'GLX_EXT_texture_from_pixmap')
GLX_TEXTURE_FORMAT_EXT = Enumerant('GLX_TEXTURE_FORMAT_EXT', 0x20d5, 'GLX_EXT_texture_from_pixmap')
GLX_TEXTURE_FORMAT_NONE_EXT = Enumerant('GLX_TEXTURE_FORMAT_NONE_EXT', 0x20d8, 'GLX_EXT_texture_from_pixmap')
GLX_TEXTURE_FORMAT_RGBA_EXT = Enumerant('GLX_TEXTURE_FORMAT_RGBA_EXT', 0x20da, 'GLX_EXT_texture_from_pixmap')
GLX_TEXTURE_FORMAT_RGB_EXT = Enumerant('GLX_TEXTURE_FORMAT_RGB_EXT', 0x20d9, 'GLX_EXT_texture_from_pixmap')
GLX_TEXTURE_RECTANGLE_BIT_EXT = Enumerant('GLX_TEXTURE_RECTANGLE_BIT_EXT', 0x0004, 'GLX_EXT_texture_from_pixmap')
GLX_TEXTURE_RECTANGLE_EXT = Enumerant('GLX_TEXTURE_RECTANGLE_EXT', 0x20dd, 'GLX_EXT_texture_from_pixmap')
GLX_TEXTURE_TARGET_EXT = Enumerant('GLX_TEXTURE_TARGET_EXT', 0x20d6, 'GLX_EXT_texture_from_pixmap')
GLX_Y_INVERTED_EXT = Enumerant('GLX_Y_INVERTED_EXT', 0x20d4, 'GLX_EXT_texture_from_pixmap')

defines.add(GLX_AUX0_EXT)
defines.add(GLX_AUX1_EXT)
defines.add(GLX_AUX2_EXT)
defines.add(GLX_AUX3_EXT)
defines.add(GLX_AUX4_EXT)
defines.add(GLX_AUX5_EXT)
defines.add(GLX_AUX6_EXT)
defines.add(GLX_AUX7_EXT)
defines.add(GLX_AUX8_EXT)
defines.add(GLX_AUX9_EXT)
defines.add(GLX_BACK_LEFT_EXT)
defines.add(GLX_BACK_RIGHT_EXT)
defines.add(GLX_BIND_TO_MIPMAP_TEXTURE_EXT)
defines.add(GLX_BIND_TO_TEXTURE_RGBA_EXT)
defines.add(GLX_BIND_TO_TEXTURE_RGB_EXT)
defines.add(GLX_BIND_TO_TEXTURE_TARGETS_EXT)
defines.add(GLX_FRONT_LEFT_EXT)
defines.add(GLX_FRONT_RIGHT_EXT)
defines.add(GLX_MIPMAP_TEXTURE_EXT)
defines.add(GLX_TEXTURE_1D_BIT_EXT)
defines.add(GLX_TEXTURE_1D_EXT)
defines.add(GLX_TEXTURE_2D_BIT_EXT)
defines.add(GLX_TEXTURE_2D_EXT)
defines.add(GLX_TEXTURE_FORMAT_EXT)
defines.add(GLX_TEXTURE_FORMAT_NONE_EXT)
defines.add(GLX_TEXTURE_FORMAT_RGBA_EXT)
defines.add(GLX_TEXTURE_FORMAT_RGB_EXT)
defines.add(GLX_TEXTURE_RECTANGLE_BIT_EXT)
defines.add(GLX_TEXTURE_RECTANGLE_EXT)
defines.add(GLX_TEXTURE_TARGET_EXT)
defines.add(GLX_Y_INVERTED_EXT)

# GLX_EXT_visual_info

GLX_DIRECT_COLOR_EXT = Enumerant('GLX_DIRECT_COLOR_EXT', 0x8003, 'GLX_EXT_visual_info')
GLX_GRAY_SCALE_EXT = Enumerant('GLX_GRAY_SCALE_EXT', 0x8006, 'GLX_EXT_visual_info')
GLX_NONE_EXT = Enumerant('GLX_NONE_EXT', 0x8000, 'GLX_EXT_visual_info')
GLX_PSEUDO_COLOR_EXT = Enumerant('GLX_PSEUDO_COLOR_EXT', 0x8004, 'GLX_EXT_visual_info')
GLX_STATIC_COLOR_EXT = Enumerant('GLX_STATIC_COLOR_EXT', 0x8005, 'GLX_EXT_visual_info')
GLX_STATIC_GRAY_EXT = Enumerant('GLX_STATIC_GRAY_EXT', 0x8007, 'GLX_EXT_visual_info')
GLX_TRANSPARENT_ALPHA_VALUE_EXT = Enumerant('GLX_TRANSPARENT_ALPHA_VALUE_EXT', 0x0028, 'GLX_EXT_visual_info')
GLX_TRANSPARENT_BLUE_VALUE_EXT = Enumerant('GLX_TRANSPARENT_BLUE_VALUE_EXT', 0x0027, 'GLX_EXT_visual_info')
GLX_TRANSPARENT_GREEN_VALUE_EXT = Enumerant('GLX_TRANSPARENT_GREEN_VALUE_EXT', 0x0026, 'GLX_EXT_visual_info')
GLX_TRANSPARENT_INDEX_EXT = Enumerant('GLX_TRANSPARENT_INDEX_EXT', 0x8009, 'GLX_EXT_visual_info')
GLX_TRANSPARENT_INDEX_VALUE_EXT = Enumerant('GLX_TRANSPARENT_INDEX_VALUE_EXT', 0x0024, 'GLX_EXT_visual_info')
GLX_TRANSPARENT_RED_VALUE_EXT = Enumerant('GLX_TRANSPARENT_RED_VALUE_EXT', 0x0025, 'GLX_EXT_visual_info')
GLX_TRANSPARENT_RGB_EXT = Enumerant('GLX_TRANSPARENT_RGB_EXT', 0x8008, 'GLX_EXT_visual_info')
GLX_TRANSPARENT_TYPE_EXT = Enumerant('GLX_TRANSPARENT_TYPE_EXT', 0x0023, 'GLX_EXT_visual_info')
GLX_TRUE_COLOR_EXT = Enumerant('GLX_TRUE_COLOR_EXT', 0x8002, 'GLX_EXT_visual_info')
GLX_X_VISUAL_TYPE_EXT = Enumerant('GLX_X_VISUAL_TYPE_EXT', 0x0022, 'GLX_EXT_visual_info')

defines.add(GLX_DIRECT_COLOR_EXT)
defines.add(GLX_GRAY_SCALE_EXT)
defines.add(GLX_NONE_EXT)
defines.add(GLX_PSEUDO_COLOR_EXT)
defines.add(GLX_STATIC_COLOR_EXT)
defines.add(GLX_STATIC_GRAY_EXT)
defines.add(GLX_TRANSPARENT_ALPHA_VALUE_EXT)
defines.add(GLX_TRANSPARENT_BLUE_VALUE_EXT)
defines.add(GLX_TRANSPARENT_GREEN_VALUE_EXT)
defines.add(GLX_TRANSPARENT_INDEX_EXT)
defines.add(GLX_TRANSPARENT_INDEX_VALUE_EXT)
defines.add(GLX_TRANSPARENT_RED_VALUE_EXT)
defines.add(GLX_TRANSPARENT_RGB_EXT)
defines.add(GLX_TRANSPARENT_TYPE_EXT)
defines.add(GLX_TRUE_COLOR_EXT)
defines.add(GLX_X_VISUAL_TYPE_EXT)

# GLX_EXT_visual_rating

GLX_NON_CONFORMANT_VISUAL_EXT = Enumerant('GLX_NON_CONFORMANT_VISUAL_EXT', 0x800d, 'GLX_EXT_visual_rating')
GLX_SLOW_VISUAL_EXT = Enumerant('GLX_SLOW_VISUAL_EXT', 0x8001, 'GLX_EXT_visual_rating')
GLX_VISUAL_CAVEAT_EXT = Enumerant('GLX_VISUAL_CAVEAT_EXT', 0x0020, 'GLX_EXT_visual_rating')

defines.add(GLX_NON_CONFORMANT_VISUAL_EXT)
defines.add(GLX_SLOW_VISUAL_EXT)
defines.add(GLX_VISUAL_CAVEAT_EXT)

# GLX_INTEL_swap_event

GLX_BUFFER_SWAP_COMPLETE_INTEL_MASK = Enumerant('GLX_BUFFER_SWAP_COMPLETE_INTEL_MASK', 0x4000000, 'GLX_INTEL_swap_event')
GLX_COPY_COMPLETE_INTEL = Enumerant('GLX_COPY_COMPLETE_INTEL', 0x8181, 'GLX_INTEL_swap_event')
GLX_EXCHANGE_COMPLETE_INTEL = Enumerant('GLX_EXCHANGE_COMPLETE_INTEL', 0x8180, 'GLX_INTEL_swap_event')
GLX_FLIP_COMPLETE_INTEL = Enumerant('GLX_FLIP_COMPLETE_INTEL', 0x8182, 'GLX_INTEL_swap_event')

defines.add(GLX_BUFFER_SWAP_COMPLETE_INTEL_MASK)
defines.add(GLX_COPY_COMPLETE_INTEL)
defines.add(GLX_EXCHANGE_COMPLETE_INTEL)
defines.add(GLX_FLIP_COMPLETE_INTEL)

# GLX_MESA_set_3dfx_mode

GLX_3DFX_FULLSCREEN_MODE_MESA = Enumerant('GLX_3DFX_FULLSCREEN_MODE_MESA', 0x0002, 'GLX_MESA_set_3dfx_mode')
GLX_3DFX_WINDOW_MODE_MESA = Enumerant('GLX_3DFX_WINDOW_MODE_MESA', 0x0001, 'GLX_MESA_set_3dfx_mode')

defines.add(GLX_3DFX_FULLSCREEN_MODE_MESA)
defines.add(GLX_3DFX_WINDOW_MODE_MESA)

# GLX_NV_float_buffer

GLX_FLOAT_COMPONENTS_NV = Enumerant('GLX_FLOAT_COMPONENTS_NV', 0x20b0, 'GLX_NV_float_buffer')

defines.add(GLX_FLOAT_COMPONENTS_NV)

# GLX_NV_multisample_coverage

GLX_COLOR_SAMPLES_NV = Enumerant('GLX_COLOR_SAMPLES_NV', 0x20b3, 'GLX_NV_multisample_coverage')
GLX_COVERAGE_SAMPLES_NV = Enumerant('GLX_COVERAGE_SAMPLES_NV', 0x186a1, 'GLX_NV_multisample_coverage')

defines.add(GLX_COLOR_SAMPLES_NV)
defines.add(GLX_COVERAGE_SAMPLES_NV)

# GLX_NV_present_video

GLX_NUM_VIDEO_SLOTS_NV = Enumerant('GLX_NUM_VIDEO_SLOTS_NV', 0x20f0, 'GLX_NV_present_video')

defines.add(GLX_NUM_VIDEO_SLOTS_NV)

# GLX_NV_video_capture

GLX_DEVICE_ID_NV = Enumerant('GLX_DEVICE_ID_NV', 0x20cd, 'GLX_NV_video_capture')
GLX_NUM_VIDEO_CAPTURE_SLOTS_NV = Enumerant('GLX_NUM_VIDEO_CAPTURE_SLOTS_NV', 0x20cf, 'GLX_NV_video_capture')
GLX_UNIQUE_ID_NV = Enumerant('GLX_UNIQUE_ID_NV', 0x20ce, 'GLX_NV_video_capture')

defines.add(GLX_DEVICE_ID_NV)
defines.add(GLX_NUM_VIDEO_CAPTURE_SLOTS_NV)
defines.add(GLX_UNIQUE_ID_NV)

# GLX_NV_video_output

GLX_VIDEO_OUT_ALPHA_NV = Enumerant('GLX_VIDEO_OUT_ALPHA_NV', 0x20c4, 'GLX_NV_video_output')
GLX_VIDEO_OUT_COLOR_AND_ALPHA_NV = Enumerant('GLX_VIDEO_OUT_COLOR_AND_ALPHA_NV', 0x20c6, 'GLX_NV_video_output')
GLX_VIDEO_OUT_COLOR_AND_DEPTH_NV = Enumerant('GLX_VIDEO_OUT_COLOR_AND_DEPTH_NV', 0x20c7, 'GLX_NV_video_output')
GLX_VIDEO_OUT_COLOR_NV = Enumerant('GLX_VIDEO_OUT_COLOR_NV', 0x20c3, 'GLX_NV_video_output')
GLX_VIDEO_OUT_DEPTH_NV = Enumerant('GLX_VIDEO_OUT_DEPTH_NV', 0x20c5, 'GLX_NV_video_output')
GLX_VIDEO_OUT_FIELD_1_NV = Enumerant('GLX_VIDEO_OUT_FIELD_1_NV', 0x20c9, 'GLX_NV_video_output')
GLX_VIDEO_OUT_FIELD_2_NV = Enumerant('GLX_VIDEO_OUT_FIELD_2_NV', 0x20ca, 'GLX_NV_video_output')
GLX_VIDEO_OUT_FRAME_NV = Enumerant('GLX_VIDEO_OUT_FRAME_NV', 0x20c8, 'GLX_NV_video_output')
GLX_VIDEO_OUT_STACKED_FIELDS_1_2_NV = Enumerant('GLX_VIDEO_OUT_STACKED_FIELDS_1_2_NV', 0x20cb, 'GLX_NV_video_output')
GLX_VIDEO_OUT_STACKED_FIELDS_2_1_NV = Enumerant('GLX_VIDEO_OUT_STACKED_FIELDS_2_1_NV', 0x20cc, 'GLX_NV_video_output')

defines.add(GLX_VIDEO_OUT_ALPHA_NV)
defines.add(GLX_VIDEO_OUT_COLOR_AND_ALPHA_NV)
defines.add(GLX_VIDEO_OUT_COLOR_AND_DEPTH_NV)
defines.add(GLX_VIDEO_OUT_COLOR_NV)
defines.add(GLX_VIDEO_OUT_DEPTH_NV)
defines.add(GLX_VIDEO_OUT_FIELD_1_NV)
defines.add(GLX_VIDEO_OUT_FIELD_2_NV)
defines.add(GLX_VIDEO_OUT_FRAME_NV)
defines.add(GLX_VIDEO_OUT_STACKED_FIELDS_1_2_NV)
defines.add(GLX_VIDEO_OUT_STACKED_FIELDS_2_1_NV)

# GLX_OML_swap_method

GLX_SWAP_COPY_OML = Enumerant('GLX_SWAP_COPY_OML', 0x8062, 'GLX_OML_swap_method')
GLX_SWAP_EXCHANGE_OML = Enumerant('GLX_SWAP_EXCHANGE_OML', 0x8061, 'GLX_OML_swap_method')
GLX_SWAP_METHOD_OML = Enumerant('GLX_SWAP_METHOD_OML', 0x8060, 'GLX_OML_swap_method')
GLX_SWAP_UNDEFINED_OML = Enumerant('GLX_SWAP_UNDEFINED_OML', 0x8063, 'GLX_OML_swap_method')

defines.add(GLX_SWAP_COPY_OML)
defines.add(GLX_SWAP_EXCHANGE_OML)
defines.add(GLX_SWAP_METHOD_OML)
defines.add(GLX_SWAP_UNDEFINED_OML)

# GLX_SGIS_blended_overlay

GLX_BLENDED_RGBA_SGIS = Enumerant('GLX_BLENDED_RGBA_SGIS', 0x8025, 'GLX_SGIS_blended_overlay')

defines.add(GLX_BLENDED_RGBA_SGIS)

# GLX_SGIS_color_range

GLX_EXTENDED_RANGE_SGIS = Enumerant('GLX_EXTENDED_RANGE_SGIS', 0x0000, 'GLX_SGIS_color_range')
GLX_MAX_ALPHA_SGIS = Enumerant('GLX_MAX_ALPHA_SGIS', 0x0000, 'GLX_SGIS_color_range')
GLX_MAX_BLUE_SGIS = Enumerant('GLX_MAX_BLUE_SGIS', 0x0000, 'GLX_SGIS_color_range')
GLX_MAX_GREEN_SGIS = Enumerant('GLX_MAX_GREEN_SGIS', 0x0000, 'GLX_SGIS_color_range')
GLX_MAX_RED_SGIS = Enumerant('GLX_MAX_RED_SGIS', 0x0000, 'GLX_SGIS_color_range')
GLX_MIN_ALPHA_SGIS = Enumerant('GLX_MIN_ALPHA_SGIS', 0x0000, 'GLX_SGIS_color_range')
GLX_MIN_BLUE_SGIS = Enumerant('GLX_MIN_BLUE_SGIS', 0x0000, 'GLX_SGIS_color_range')
GLX_MIN_GREEN_SGIS = Enumerant('GLX_MIN_GREEN_SGIS', 0x0000, 'GLX_SGIS_color_range')
GLX_MIN_RED_SGIS = Enumerant('GLX_MIN_RED_SGIS', 0x0000, 'GLX_SGIS_color_range')

defines.add(GLX_EXTENDED_RANGE_SGIS)
defines.add(GLX_MAX_ALPHA_SGIS)
defines.add(GLX_MAX_BLUE_SGIS)
defines.add(GLX_MAX_GREEN_SGIS)
defines.add(GLX_MAX_RED_SGIS)
defines.add(GLX_MIN_ALPHA_SGIS)
defines.add(GLX_MIN_BLUE_SGIS)
defines.add(GLX_MIN_GREEN_SGIS)
defines.add(GLX_MIN_RED_SGIS)

# GLX_SGIS_multisample

GLX_SAMPLES_SGIS = Enumerant('GLX_SAMPLES_SGIS', 0x186a1, 'GLX_SGIS_multisample')
GLX_SAMPLE_BUFFERS_SGIS = Enumerant('GLX_SAMPLE_BUFFERS_SGIS', 0x186a0, 'GLX_SGIS_multisample')

defines.add(GLX_SAMPLES_SGIS)
defines.add(GLX_SAMPLE_BUFFERS_SGIS)

# GLX_SGIS_shared_multisample

GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS = Enumerant('GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS', 0x8027, 'GLX_SGIS_shared_multisample')
GLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS = Enumerant('GLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS', 0x8026, 'GLX_SGIS_shared_multisample')

defines.add(GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS)
defines.add(GLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS)

# GLX_SGIX_fbconfig

GLX_COLOR_INDEX_BIT_SGIX = Enumerant('GLX_COLOR_INDEX_BIT_SGIX', 0x0002, 'GLX_SGIX_fbconfig')
GLX_COLOR_INDEX_TYPE_SGIX = Enumerant('GLX_COLOR_INDEX_TYPE_SGIX', 0x8015, 'GLX_SGIX_fbconfig')
GLX_DRAWABLE_TYPE_SGIX = Enumerant('GLX_DRAWABLE_TYPE_SGIX', 0x8010, 'GLX_SGIX_fbconfig')
GLX_FBCONFIG_ID_SGIX = Enumerant('GLX_FBCONFIG_ID_SGIX', 0x8013, 'GLX_SGIX_fbconfig')
GLX_PIXMAP_BIT_SGIX = Enumerant('GLX_PIXMAP_BIT_SGIX', 0x0002, 'GLX_SGIX_fbconfig')
GLX_RENDER_TYPE_SGIX = Enumerant('GLX_RENDER_TYPE_SGIX', 0x8011, 'GLX_SGIX_fbconfig')
GLX_RGBA_BIT_SGIX = Enumerant('GLX_RGBA_BIT_SGIX', 0x0001, 'GLX_SGIX_fbconfig')
GLX_RGBA_TYPE_SGIX = Enumerant('GLX_RGBA_TYPE_SGIX', 0x8014, 'GLX_SGIX_fbconfig')
GLX_SCREEN_EXT = Enumerant('GLX_SCREEN_EXT', 0x800c, 'GLX_SGIX_fbconfig')
GLX_WINDOW_BIT_SGIX = Enumerant('GLX_WINDOW_BIT_SGIX', 0x0001, 'GLX_SGIX_fbconfig')
GLX_X_RENDERABLE_SGIX = Enumerant('GLX_X_RENDERABLE_SGIX', 0x8012, 'GLX_SGIX_fbconfig')

defines.add(GLX_COLOR_INDEX_BIT_SGIX)
defines.add(GLX_COLOR_INDEX_TYPE_SGIX)
defines.add(GLX_DRAWABLE_TYPE_SGIX)
defines.add(GLX_FBCONFIG_ID_SGIX)
defines.add(GLX_PIXMAP_BIT_SGIX)
defines.add(GLX_RENDER_TYPE_SGIX)
defines.add(GLX_RGBA_BIT_SGIX)
defines.add(GLX_RGBA_TYPE_SGIX)
defines.add(GLX_SCREEN_EXT)
defines.add(GLX_WINDOW_BIT_SGIX)
defines.add(GLX_X_RENDERABLE_SGIX)

# GLX_SGIX_hyperpipe

GLX_BAD_HYPERPIPE_CONFIG_SGIX = Enumerant('GLX_BAD_HYPERPIPE_CONFIG_SGIX', 0x005b, 'GLX_SGIX_hyperpipe')
GLX_BAD_HYPERPIPE_SGIX = Enumerant('GLX_BAD_HYPERPIPE_SGIX', 0x005c, 'GLX_SGIX_hyperpipe')
GLX_HYPERPIPE_DISPLAY_PIPE_SGIX = Enumerant('GLX_HYPERPIPE_DISPLAY_PIPE_SGIX', 0x0001, 'GLX_SGIX_hyperpipe')
GLX_HYPERPIPE_ID_SGIX = Enumerant('GLX_HYPERPIPE_ID_SGIX', 0x8030, 'GLX_SGIX_hyperpipe')
GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX = Enumerant('GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX', 0x0050, 'GLX_SGIX_hyperpipe')
GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX = Enumerant('GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX', 0x0004, 'GLX_SGIX_hyperpipe')
GLX_HYPERPIPE_RENDER_PIPE_SGIX = Enumerant('GLX_HYPERPIPE_RENDER_PIPE_SGIX', 0x0002, 'GLX_SGIX_hyperpipe')
GLX_HYPERPIPE_STEREO_SGIX = Enumerant('GLX_HYPERPIPE_STEREO_SGIX', 0x0003, 'GLX_SGIX_hyperpipe')
GLX_PIPE_RECT_LIMITS_SGIX = Enumerant('GLX_PIPE_RECT_LIMITS_SGIX', 0x0002, 'GLX_SGIX_hyperpipe')
GLX_PIPE_RECT_SGIX = Enumerant('GLX_PIPE_RECT_SGIX', 0x0001, 'GLX_SGIX_hyperpipe')

defines.add(GLX_BAD_HYPERPIPE_CONFIG_SGIX)
defines.add(GLX_BAD_HYPERPIPE_SGIX)
defines.add(GLX_HYPERPIPE_DISPLAY_PIPE_SGIX)
defines.add(GLX_HYPERPIPE_ID_SGIX)
defines.add(GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX)
defines.add(GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX)
defines.add(GLX_HYPERPIPE_RENDER_PIPE_SGIX)
defines.add(GLX_HYPERPIPE_STEREO_SGIX)
defines.add(GLX_PIPE_RECT_LIMITS_SGIX)
defines.add(GLX_PIPE_RECT_SGIX)

# GLX_SGIX_pbuffer

GLX_ACCUM_BUFFER_BIT_SGIX = Enumerant('GLX_ACCUM_BUFFER_BIT_SGIX', 0x0080, 'GLX_SGIX_pbuffer')
GLX_AUX_BUFFERS_BIT_SGIX = Enumerant('GLX_AUX_BUFFERS_BIT_SGIX', 0x0010, 'GLX_SGIX_pbuffer')
GLX_BACK_LEFT_BUFFER_BIT_SGIX = Enumerant('GLX_BACK_LEFT_BUFFER_BIT_SGIX', 0x0004, 'GLX_SGIX_pbuffer')
GLX_BACK_RIGHT_BUFFER_BIT_SGIX = Enumerant('GLX_BACK_RIGHT_BUFFER_BIT_SGIX', 0x0008, 'GLX_SGIX_pbuffer')
GLX_BUFFER_CLOBBER_MASK_SGIX = Enumerant('GLX_BUFFER_CLOBBER_MASK_SGIX', 0x8000000, 'GLX_SGIX_pbuffer')
GLX_DAMAGED_SGIX = Enumerant('GLX_DAMAGED_SGIX', 0x8020, 'GLX_SGIX_pbuffer')
GLX_DEPTH_BUFFER_BIT_SGIX = Enumerant('GLX_DEPTH_BUFFER_BIT_SGIX', 0x0020, 'GLX_SGIX_pbuffer')
GLX_EVENT_MASK_SGIX = Enumerant('GLX_EVENT_MASK_SGIX', 0x801f, 'GLX_SGIX_pbuffer')
GLX_FRONT_LEFT_BUFFER_BIT_SGIX = Enumerant('GLX_FRONT_LEFT_BUFFER_BIT_SGIX', 0x0001, 'GLX_SGIX_pbuffer')
GLX_FRONT_RIGHT_BUFFER_BIT_SGIX = Enumerant('GLX_FRONT_RIGHT_BUFFER_BIT_SGIX', 0x0002, 'GLX_SGIX_pbuffer')
GLX_HEIGHT_SGIX = Enumerant('GLX_HEIGHT_SGIX', 0x801e, 'GLX_SGIX_pbuffer')
GLX_LARGEST_PBUFFER_SGIX = Enumerant('GLX_LARGEST_PBUFFER_SGIX', 0x801c, 'GLX_SGIX_pbuffer')
GLX_MAX_PBUFFER_HEIGHT_SGIX = Enumerant('GLX_MAX_PBUFFER_HEIGHT_SGIX', 0x8017, 'GLX_SGIX_pbuffer')
GLX_MAX_PBUFFER_PIXELS_SGIX = Enumerant('GLX_MAX_PBUFFER_PIXELS_SGIX', 0x8018, 'GLX_SGIX_pbuffer')
GLX_MAX_PBUFFER_WIDTH_SGIX = Enumerant('GLX_MAX_PBUFFER_WIDTH_SGIX', 0x8016, 'GLX_SGIX_pbuffer')
GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX = Enumerant('GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX', 0x801a, 'GLX_SGIX_pbuffer')
GLX_OPTIMAL_PBUFFER_WIDTH_SGIX = Enumerant('GLX_OPTIMAL_PBUFFER_WIDTH_SGIX', 0x8019, 'GLX_SGIX_pbuffer')
GLX_PBUFFER_BIT_SGIX = Enumerant('GLX_PBUFFER_BIT_SGIX', 0x0004, 'GLX_SGIX_pbuffer')
GLX_PBUFFER_SGIX = Enumerant('GLX_PBUFFER_SGIX', 0x8023, 'GLX_SGIX_pbuffer')
GLX_PRESERVED_CONTENTS_SGIX = Enumerant('GLX_PRESERVED_CONTENTS_SGIX', 0x801b, 'GLX_SGIX_pbuffer')
GLX_SAMPLE_BUFFERS_BIT_SGIX = Enumerant('GLX_SAMPLE_BUFFERS_BIT_SGIX', 0x0100, 'GLX_SGIX_pbuffer')
GLX_SAVED_SGIX = Enumerant('GLX_SAVED_SGIX', 0x8021, 'GLX_SGIX_pbuffer')
GLX_STENCIL_BUFFER_BIT_SGIX = Enumerant('GLX_STENCIL_BUFFER_BIT_SGIX', 0x0040, 'GLX_SGIX_pbuffer')
GLX_WIDTH_SGIX = Enumerant('GLX_WIDTH_SGIX', 0x801d, 'GLX_SGIX_pbuffer')
GLX_WINDOW_SGIX = Enumerant('GLX_WINDOW_SGIX', 0x8022, 'GLX_SGIX_pbuffer')

defines.add(GLX_ACCUM_BUFFER_BIT_SGIX)
defines.add(GLX_AUX_BUFFERS_BIT_SGIX)
defines.add(GLX_BACK_LEFT_BUFFER_BIT_SGIX)
defines.add(GLX_BACK_RIGHT_BUFFER_BIT_SGIX)
defines.add(GLX_BUFFER_CLOBBER_MASK_SGIX)
defines.add(GLX_DAMAGED_SGIX)
defines.add(GLX_DEPTH_BUFFER_BIT_SGIX)
defines.add(GLX_EVENT_MASK_SGIX)
defines.add(GLX_FRONT_LEFT_BUFFER_BIT_SGIX)
defines.add(GLX_FRONT_RIGHT_BUFFER_BIT_SGIX)
defines.add(GLX_HEIGHT_SGIX)
defines.add(GLX_LARGEST_PBUFFER_SGIX)
defines.add(GLX_MAX_PBUFFER_HEIGHT_SGIX)
defines.add(GLX_MAX_PBUFFER_PIXELS_SGIX)
defines.add(GLX_MAX_PBUFFER_WIDTH_SGIX)
defines.add(GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX)
defines.add(GLX_OPTIMAL_PBUFFER_WIDTH_SGIX)
defines.add(GLX_PBUFFER_BIT_SGIX)
defines.add(GLX_PBUFFER_SGIX)
defines.add(GLX_PRESERVED_CONTENTS_SGIX)
defines.add(GLX_SAMPLE_BUFFERS_BIT_SGIX)
defines.add(GLX_SAVED_SGIX)
defines.add(GLX_STENCIL_BUFFER_BIT_SGIX)
defines.add(GLX_WIDTH_SGIX)
defines.add(GLX_WINDOW_SGIX)

# GLX_SGIX_video_resize

GLX_SYNC_FRAME_SGIX = Enumerant('GLX_SYNC_FRAME_SGIX', 0x0000, 'GLX_SGIX_video_resize')
GLX_SYNC_SWAP_SGIX = Enumerant('GLX_SYNC_SWAP_SGIX', 0x0001, 'GLX_SGIX_video_resize')

defines.add(GLX_SYNC_FRAME_SGIX)
defines.add(GLX_SYNC_SWAP_SGIX)

# GLX_SGIX_visual_select_group

GLX_VISUAL_SELECT_GROUP_SGIX = Enumerant('GLX_VISUAL_SELECT_GROUP_SGIX', 0x8028, 'GLX_SGIX_visual_select_group')

defines.add(GLX_VISUAL_SELECT_GROUP_SGIX)

# GLX_SUN_video_resize

GLX_VIDEO_RESIZE_SUN = Enumerant('GLX_VIDEO_RESIZE_SUN', 0x8171, 'GLX_SUN_video_resize')
GL_VIDEO_RESIZE_COMPENSATION_SUN = Enumerant('GL_VIDEO_RESIZE_COMPENSATION_SUN', 0x85cd, 'GLX_SUN_video_resize')

defines.add(GLX_VIDEO_RESIZE_SUN)
defines.add(GL_VIDEO_RESIZE_COMPENSATION_SUN)

# GLX_VERSION_1_0

GLX_ACCUM_ALPHA_SIZE = Enumerant('GLX_ACCUM_ALPHA_SIZE', 0x0011, 'GLX_VERSION_1_0')
GLX_ACCUM_BLUE_SIZE = Enumerant('GLX_ACCUM_BLUE_SIZE', 0x0010, 'GLX_VERSION_1_0')
GLX_ACCUM_GREEN_SIZE = Enumerant('GLX_ACCUM_GREEN_SIZE', 0x000f, 'GLX_VERSION_1_0')
GLX_ACCUM_RED_SIZE = Enumerant('GLX_ACCUM_RED_SIZE', 0x000e, 'GLX_VERSION_1_0')
GLX_ALPHA_SIZE = Enumerant('GLX_ALPHA_SIZE', 0x000b, 'GLX_VERSION_1_0')
GLX_AUX_BUFFERS = Enumerant('GLX_AUX_BUFFERS', 0x0007, 'GLX_VERSION_1_0')
GLX_BAD_ATTRIBUTE = Enumerant('GLX_BAD_ATTRIBUTE', 0x0002, 'GLX_VERSION_1_0')
GLX_BAD_CONTEXT = Enumerant('GLX_BAD_CONTEXT', 0x0005, 'GLX_VERSION_1_0')
GLX_BAD_ENUM = Enumerant('GLX_BAD_ENUM', 0x0007, 'GLX_VERSION_1_0')
GLX_BAD_SCREEN = Enumerant('GLX_BAD_SCREEN', 0x0001, 'GLX_VERSION_1_0')
GLX_BAD_VALUE = Enumerant('GLX_BAD_VALUE', 0x0006, 'GLX_VERSION_1_0')
GLX_BAD_VISUAL = Enumerant('GLX_BAD_VISUAL', 0x0004, 'GLX_VERSION_1_0')
GLX_BLUE_SIZE = Enumerant('GLX_BLUE_SIZE', 0x000a, 'GLX_VERSION_1_0')
GLX_BUFFER_SIZE = Enumerant('GLX_BUFFER_SIZE', 0x0002, 'GLX_VERSION_1_0')
GLX_DEPTH_SIZE = Enumerant('GLX_DEPTH_SIZE', 0x000c, 'GLX_VERSION_1_0')
GLX_DOUBLEBUFFER = Enumerant('GLX_DOUBLEBUFFER', 0x0005, 'GLX_VERSION_1_0')
GLX_GREEN_SIZE = Enumerant('GLX_GREEN_SIZE', 0x0009, 'GLX_VERSION_1_0')
GLX_LEVEL = Enumerant('GLX_LEVEL', 0x0003, 'GLX_VERSION_1_0')
GLX_NO_EXTENSION = Enumerant('GLX_NO_EXTENSION', 0x0003, 'GLX_VERSION_1_0')
GLX_RED_SIZE = Enumerant('GLX_RED_SIZE', 0x0008, 'GLX_VERSION_1_0')
GLX_RGBA = Enumerant('GLX_RGBA', 0x0004, 'GLX_VERSION_1_0')
GLX_STENCIL_SIZE = Enumerant('GLX_STENCIL_SIZE', 0x000d, 'GLX_VERSION_1_0')
GLX_STEREO = Enumerant('GLX_STEREO', 0x0006, 'GLX_VERSION_1_0')
GLX_USE_GL = Enumerant('GLX_USE_GL', 0x0001, 'GLX_VERSION_1_0')

defines.add(GLX_ACCUM_ALPHA_SIZE)
defines.add(GLX_ACCUM_BLUE_SIZE)
defines.add(GLX_ACCUM_GREEN_SIZE)
defines.add(GLX_ACCUM_RED_SIZE)
defines.add(GLX_ALPHA_SIZE)
defines.add(GLX_AUX_BUFFERS)
defines.add(GLX_BAD_ATTRIBUTE)
defines.add(GLX_BAD_CONTEXT)
defines.add(GLX_BAD_ENUM)
defines.add(GLX_BAD_SCREEN)
defines.add(GLX_BAD_VALUE)
defines.add(GLX_BAD_VISUAL)
defines.add(GLX_BLUE_SIZE)
defines.add(GLX_BUFFER_SIZE)
defines.add(GLX_DEPTH_SIZE)
defines.add(GLX_DOUBLEBUFFER)
defines.add(GLX_GREEN_SIZE)
defines.add(GLX_LEVEL)
defines.add(GLX_NO_EXTENSION)
defines.add(GLX_RED_SIZE)
defines.add(GLX_RGBA)
defines.add(GLX_STENCIL_SIZE)
defines.add(GLX_STEREO)
defines.add(GLX_USE_GL)

# GLX_VERSION_1_1

GLX_EXTENSIONS = Enumerant('GLX_EXTENSIONS', 0x0003, 'GLX_VERSION_1_1')
GLX_VENDOR = Enumerant('GLX_VENDOR', 0x0001, 'GLX_VERSION_1_1')
GLX_VERSION = Enumerant('GLX_VERSION', 0x0002, 'GLX_VERSION_1_1')

defines.add(GLX_EXTENSIONS)
defines.add(GLX_VENDOR)
defines.add(GLX_VERSION)

# GLX_VERSION_1_3

GLX_ACCUM_BUFFER_BIT = Enumerant('GLX_ACCUM_BUFFER_BIT', 0x0080, 'GLX_VERSION_1_3')
GLX_AUX_BUFFERS_BIT = Enumerant('GLX_AUX_BUFFERS_BIT', 0x0010, 'GLX_VERSION_1_3')
GLX_BACK_LEFT_BUFFER_BIT = Enumerant('GLX_BACK_LEFT_BUFFER_BIT', 0x0004, 'GLX_VERSION_1_3')
GLX_BACK_RIGHT_BUFFER_BIT = Enumerant('GLX_BACK_RIGHT_BUFFER_BIT', 0x0008, 'GLX_VERSION_1_3')
GLX_COLOR_INDEX_BIT = Enumerant('GLX_COLOR_INDEX_BIT', 0x0002, 'GLX_VERSION_1_3')
GLX_COLOR_INDEX_TYPE = Enumerant('GLX_COLOR_INDEX_TYPE', 0x8015, 'GLX_VERSION_1_3')
GLX_CONFIG_CAVEAT = Enumerant('GLX_CONFIG_CAVEAT', 0x0020, 'GLX_VERSION_1_3')
GLX_DAMAGED = Enumerant('GLX_DAMAGED', 0x8020, 'GLX_VERSION_1_3')
GLX_DEPTH_BUFFER_BIT = Enumerant('GLX_DEPTH_BUFFER_BIT', 0x0020, 'GLX_VERSION_1_3')
GLX_DIRECT_COLOR = Enumerant('GLX_DIRECT_COLOR', 0x8003, 'GLX_VERSION_1_3')
GLX_DONT_CARE = Enumerant('GLX_DONT_CARE', 0xffffffff, 'GLX_VERSION_1_3')
GLX_DRAWABLE_TYPE = Enumerant('GLX_DRAWABLE_TYPE', 0x8010, 'GLX_VERSION_1_3')
GLX_EVENT_MASK = Enumerant('GLX_EVENT_MASK', 0x801f, 'GLX_VERSION_1_3')
GLX_FBCONFIG_ID = Enumerant('GLX_FBCONFIG_ID', 0x8013, 'GLX_VERSION_1_3')
GLX_FRONT_LEFT_BUFFER_BIT = Enumerant('GLX_FRONT_LEFT_BUFFER_BIT', 0x0001, 'GLX_VERSION_1_3')
GLX_FRONT_RIGHT_BUFFER_BIT = Enumerant('GLX_FRONT_RIGHT_BUFFER_BIT', 0x0002, 'GLX_VERSION_1_3')
GLX_GRAY_SCALE = Enumerant('GLX_GRAY_SCALE', 0x8006, 'GLX_VERSION_1_3')
GLX_HEIGHT = Enumerant('GLX_HEIGHT', 0x801e, 'GLX_VERSION_1_3')
GLX_LARGEST_PBUFFER = Enumerant('GLX_LARGEST_PBUFFER', 0x801c, 'GLX_VERSION_1_3')
GLX_MAX_PBUFFER_HEIGHT = Enumerant('GLX_MAX_PBUFFER_HEIGHT', 0x8017, 'GLX_VERSION_1_3')
GLX_MAX_PBUFFER_PIXELS = Enumerant('GLX_MAX_PBUFFER_PIXELS', 0x8018, 'GLX_VERSION_1_3')
GLX_MAX_PBUFFER_WIDTH = Enumerant('GLX_MAX_PBUFFER_WIDTH', 0x8016, 'GLX_VERSION_1_3')
GLX_NONE = Enumerant('GLX_NONE', 0x8000, 'GLX_VERSION_1_3')
GLX_NON_CONFORMANT_CONFIG = Enumerant('GLX_NON_CONFORMANT_CONFIG', 0x800d, 'GLX_VERSION_1_3')
GLX_PBUFFER = Enumerant('GLX_PBUFFER', 0x8023, 'GLX_VERSION_1_3')
GLX_PBUFFER_BIT = Enumerant('GLX_PBUFFER_BIT', 0x0004, 'GLX_VERSION_1_3')
GLX_PBUFFER_CLOBBER_MASK = Enumerant('GLX_PBUFFER_CLOBBER_MASK', 0x8000000, 'GLX_VERSION_1_3')
GLX_PBUFFER_HEIGHT = Enumerant('GLX_PBUFFER_HEIGHT', 0x8040, 'GLX_VERSION_1_3')
GLX_PBUFFER_WIDTH = Enumerant('GLX_PBUFFER_WIDTH', 0x8041, 'GLX_VERSION_1_3')
GLX_PIXMAP_BIT = Enumerant('GLX_PIXMAP_BIT', 0x0002, 'GLX_VERSION_1_3')
GLX_PRESERVED_CONTENTS = Enumerant('GLX_PRESERVED_CONTENTS', 0x801b, 'GLX_VERSION_1_3')
GLX_PSEUDO_COLOR = Enumerant('GLX_PSEUDO_COLOR', 0x8004, 'GLX_VERSION_1_3')
GLX_RENDER_TYPE = Enumerant('GLX_RENDER_TYPE', 0x8011, 'GLX_VERSION_1_3')
GLX_RGBA_BIT = Enumerant('GLX_RGBA_BIT', 0x0001, 'GLX_VERSION_1_3')
GLX_RGBA_TYPE = Enumerant('GLX_RGBA_TYPE', 0x8014, 'GLX_VERSION_1_3')
GLX_SAVED = Enumerant('GLX_SAVED', 0x8021, 'GLX_VERSION_1_3')
GLX_SCREEN = Enumerant('GLX_SCREEN', 0x800c, 'GLX_VERSION_1_3')
GLX_SLOW_CONFIG = Enumerant('GLX_SLOW_CONFIG', 0x8001, 'GLX_VERSION_1_3')
GLX_STATIC_COLOR = Enumerant('GLX_STATIC_COLOR', 0x8005, 'GLX_VERSION_1_3')
GLX_STATIC_GRAY = Enumerant('GLX_STATIC_GRAY', 0x8007, 'GLX_VERSION_1_3')
GLX_STENCIL_BUFFER_BIT = Enumerant('GLX_STENCIL_BUFFER_BIT', 0x0040, 'GLX_VERSION_1_3')
GLX_TRANSPARENT_ALPHA_VALUE = Enumerant('GLX_TRANSPARENT_ALPHA_VALUE', 0x0028, 'GLX_VERSION_1_3')
GLX_TRANSPARENT_BLUE_VALUE = Enumerant('GLX_TRANSPARENT_BLUE_VALUE', 0x0027, 'GLX_VERSION_1_3')
GLX_TRANSPARENT_GREEN_VALUE = Enumerant('GLX_TRANSPARENT_GREEN_VALUE', 0x0026, 'GLX_VERSION_1_3')
GLX_TRANSPARENT_INDEX = Enumerant('GLX_TRANSPARENT_INDEX', 0x8009, 'GLX_VERSION_1_3')
GLX_TRANSPARENT_INDEX_VALUE = Enumerant('GLX_TRANSPARENT_INDEX_VALUE', 0x0024, 'GLX_VERSION_1_3')
GLX_TRANSPARENT_RED_VALUE = Enumerant('GLX_TRANSPARENT_RED_VALUE', 0x0025, 'GLX_VERSION_1_3')
GLX_TRANSPARENT_RGB = Enumerant('GLX_TRANSPARENT_RGB', 0x8008, 'GLX_VERSION_1_3')
GLX_TRANSPARENT_TYPE = Enumerant('GLX_TRANSPARENT_TYPE', 0x0023, 'GLX_VERSION_1_3')
GLX_TRUE_COLOR = Enumerant('GLX_TRUE_COLOR', 0x8002, 'GLX_VERSION_1_3')
GLX_VISUAL_ID = Enumerant('GLX_VISUAL_ID', 0x800b, 'GLX_VERSION_1_3')
GLX_WIDTH = Enumerant('GLX_WIDTH', 0x801d, 'GLX_VERSION_1_3')
GLX_WINDOW = Enumerant('GLX_WINDOW', 0x8022, 'GLX_VERSION_1_3')
GLX_WINDOW_BIT = Enumerant('GLX_WINDOW_BIT', 0x0001, 'GLX_VERSION_1_3')
GLX_X_RENDERABLE = Enumerant('GLX_X_RENDERABLE', 0x8012, 'GLX_VERSION_1_3')
GLX_X_VISUAL_TYPE = Enumerant('GLX_X_VISUAL_TYPE', 0x0022, 'GLX_VERSION_1_3')

defines.add(GLX_ACCUM_BUFFER_BIT)
defines.add(GLX_AUX_BUFFERS_BIT)
defines.add(GLX_BACK_LEFT_BUFFER_BIT)
defines.add(GLX_BACK_RIGHT_BUFFER_BIT)
defines.add(GLX_COLOR_INDEX_BIT)
defines.add(GLX_COLOR_INDEX_TYPE)
defines.add(GLX_CONFIG_CAVEAT)
defines.add(GLX_DAMAGED)
defines.add(GLX_DEPTH_BUFFER_BIT)
defines.add(GLX_DIRECT_COLOR)
defines.add(GLX_DONT_CARE)
defines.add(GLX_DRAWABLE_TYPE)
defines.add(GLX_EVENT_MASK)
defines.add(GLX_FBCONFIG_ID)
defines.add(GLX_FRONT_LEFT_BUFFER_BIT)
defines.add(GLX_FRONT_RIGHT_BUFFER_BIT)
defines.add(GLX_GRAY_SCALE)
defines.add(GLX_HEIGHT)
defines.add(GLX_LARGEST_PBUFFER)
defines.add(GLX_MAX_PBUFFER_HEIGHT)
defines.add(GLX_MAX_PBUFFER_PIXELS)
defines.add(GLX_MAX_PBUFFER_WIDTH)
defines.add(GLX_NONE)
defines.add(GLX_NON_CONFORMANT_CONFIG)
defines.add(GLX_PBUFFER)
defines.add(GLX_PBUFFER_BIT)
defines.add(GLX_PBUFFER_CLOBBER_MASK)
defines.add(GLX_PBUFFER_HEIGHT)
defines.add(GLX_PBUFFER_WIDTH)
defines.add(GLX_PIXMAP_BIT)
defines.add(GLX_PRESERVED_CONTENTS)
defines.add(GLX_PSEUDO_COLOR)
defines.add(GLX_RENDER_TYPE)
defines.add(GLX_RGBA_BIT)
defines.add(GLX_RGBA_TYPE)
defines.add(GLX_SAVED)
defines.add(GLX_SCREEN)
defines.add(GLX_SLOW_CONFIG)
defines.add(GLX_STATIC_COLOR)
defines.add(GLX_STATIC_GRAY)
defines.add(GLX_STENCIL_BUFFER_BIT)
defines.add(GLX_TRANSPARENT_ALPHA_VALUE)
defines.add(GLX_TRANSPARENT_BLUE_VALUE)
defines.add(GLX_TRANSPARENT_GREEN_VALUE)
defines.add(GLX_TRANSPARENT_INDEX)
defines.add(GLX_TRANSPARENT_INDEX_VALUE)
defines.add(GLX_TRANSPARENT_RED_VALUE)
defines.add(GLX_TRANSPARENT_RGB)
defines.add(GLX_TRANSPARENT_TYPE)
defines.add(GLX_TRUE_COLOR)
defines.add(GLX_VISUAL_ID)
defines.add(GLX_WIDTH)
defines.add(GLX_WINDOW)
defines.add(GLX_WINDOW_BIT)
defines.add(GLX_X_RENDERABLE)
defines.add(GLX_X_VISUAL_TYPE)

# GLX_VERSION_1_4

GLX_SAMPLES = Enumerant('GLX_SAMPLES', 0x186a1, 'GLX_VERSION_1_4')
GLX_SAMPLE_BUFFERS = Enumerant('GLX_SAMPLE_BUFFERS', 0x186a0, 'GLX_VERSION_1_4')

defines.add(GLX_SAMPLES)
defines.add(GLX_SAMPLE_BUFFERS)

# GLX_AMD_gpu_association

glXBlitContextFramebufferAMD = Function('glXBlitContextFramebufferAMD')
glXBlitContextFramebufferAMD.ret = Return('void')
glXBlitContextFramebufferAMD.add( Input( 'dstCtx','GLXContext' ))
glXBlitContextFramebufferAMD.add( Input( 'srcX0','GLint' ))
glXBlitContextFramebufferAMD.add( Input( 'srcY0','GLint' ))
glXBlitContextFramebufferAMD.add( Input( 'srcX1','GLint' ))
glXBlitContextFramebufferAMD.add( Input( 'srcY1','GLint' ))
glXBlitContextFramebufferAMD.add( Input( 'dstX0','GLint' ))
glXBlitContextFramebufferAMD.add( Input( 'dstY0','GLint' ))
glXBlitContextFramebufferAMD.add( Input( 'dstX1','GLint' ))
glXBlitContextFramebufferAMD.add( Input( 'dstY1','GLint' ))
glXBlitContextFramebufferAMD.add( Input( 'mask','GLbitfield' ,regalLog = 'GLblitFramebufferToString(mask)' ))
glXBlitContextFramebufferAMD.add( Input( 'filter','GLenum' ))
glXBlitContextFramebufferAMD.version = ''
glXBlitContextFramebufferAMD.category = 'GLX_AMD_gpu_association'
glXBlitContextFramebufferAMD.trace = True
glXBlitContextFramebufferAMD.play = True
glx.add(glXBlitContextFramebufferAMD)

glXCreateAssociatedContextAMD = Function('glXCreateAssociatedContextAMD')
glXCreateAssociatedContextAMD.ret = Return('GLXContext')
glXCreateAssociatedContextAMD.add( Input( 'id','unsigned int' ))
glXCreateAssociatedContextAMD.add( Input( 'share_list','GLXContext' ))
glXCreateAssociatedContextAMD.version = ''
glXCreateAssociatedContextAMD.category = 'GLX_AMD_gpu_association'
glXCreateAssociatedContextAMD.trace = True
glXCreateAssociatedContextAMD.play = True
glx.add(glXCreateAssociatedContextAMD)

glXCreateAssociatedContextAttribsAMD = Function('glXCreateAssociatedContextAttribsAMD')
glXCreateAssociatedContextAttribsAMD.ret = Return('GLXContext')
glXCreateAssociatedContextAttribsAMD.add( Input( 'id','unsigned int' ))
glXCreateAssociatedContextAttribsAMD.add( Input( 'share_context','GLXContext' ))
glXCreateAssociatedContextAttribsAMD.add( Input( 'attribList','const int *' ))
glXCreateAssociatedContextAttribsAMD.version = ''
glXCreateAssociatedContextAttribsAMD.category = 'GLX_AMD_gpu_association'
glXCreateAssociatedContextAttribsAMD.trace = True
glXCreateAssociatedContextAttribsAMD.play = True
glx.add(glXCreateAssociatedContextAttribsAMD)

glXDeleteAssociatedContextAMD = Function('glXDeleteAssociatedContextAMD')
glXDeleteAssociatedContextAMD.ret = Return('Bool')
glXDeleteAssociatedContextAMD.add( Input( 'ctx','GLXContext' ))
glXDeleteAssociatedContextAMD.version = ''
glXDeleteAssociatedContextAMD.category = 'GLX_AMD_gpu_association'
glXDeleteAssociatedContextAMD.trace = True
glXDeleteAssociatedContextAMD.play = True
glx.add(glXDeleteAssociatedContextAMD)

glXGetContextGPUIDAMD = Function('glXGetContextGPUIDAMD')
glXGetContextGPUIDAMD.ret = Return('unsigned int')
glXGetContextGPUIDAMD.add( Input( 'ctx','GLXContext' ))
glXGetContextGPUIDAMD.version = ''
glXGetContextGPUIDAMD.category = 'GLX_AMD_gpu_association'
glXGetContextGPUIDAMD.trace = True
glXGetContextGPUIDAMD.play = True
glx.add(glXGetContextGPUIDAMD)

glXGetCurrentAssociatedContextAMD = Function('glXGetCurrentAssociatedContextAMD')
glXGetCurrentAssociatedContextAMD.ret = Return('GLXContext')
glXGetCurrentAssociatedContextAMD.version = ''
glXGetCurrentAssociatedContextAMD.category = 'GLX_AMD_gpu_association'
glXGetCurrentAssociatedContextAMD.trace = True
glXGetCurrentAssociatedContextAMD.play = True
glx.add(glXGetCurrentAssociatedContextAMD)

glXGetGPUIDsAMD = Function('glXGetGPUIDsAMD')
glXGetGPUIDsAMD.ret = Return('unsigned int')
glXGetGPUIDsAMD.add( Input( 'maxCount','unsigned int' ))
glXGetGPUIDsAMD.add( Input( 'ids','unsigned int *' ))
glXGetGPUIDsAMD.version = ''
glXGetGPUIDsAMD.category = 'GLX_AMD_gpu_association'
glXGetGPUIDsAMD.trace = True
glXGetGPUIDsAMD.play = True
glx.add(glXGetGPUIDsAMD)

glXGetGPUInfoAMD = Function('glXGetGPUInfoAMD')
glXGetGPUInfoAMD.ret = Return('int')
glXGetGPUInfoAMD.add( Input( 'id','unsigned int' ))
glXGetGPUInfoAMD.add( Input( 'property','int' ))
glXGetGPUInfoAMD.add( Input( 'dataType','GLenum' ))
glXGetGPUInfoAMD.add( Input( 'size','unsigned int' ))
glXGetGPUInfoAMD.add( Input( 'data','GLvoid *' ))
glXGetGPUInfoAMD.version = ''
glXGetGPUInfoAMD.category = 'GLX_AMD_gpu_association'
glXGetGPUInfoAMD.trace = True
glXGetGPUInfoAMD.play = True
glx.add(glXGetGPUInfoAMD)

glXMakeAssociatedContextCurrentAMD = Function('glXMakeAssociatedContextCurrentAMD')
glXMakeAssociatedContextCurrentAMD.ret = Return('Bool')
glXMakeAssociatedContextCurrentAMD.add( Input( 'ctx','GLXContext' ))
glXMakeAssociatedContextCurrentAMD.version = ''
glXMakeAssociatedContextCurrentAMD.category = 'GLX_AMD_gpu_association'
glXMakeAssociatedContextCurrentAMD.trace = True
glXMakeAssociatedContextCurrentAMD.play = True
glx.add(glXMakeAssociatedContextCurrentAMD)

# GLX_ARB_create_context

glXCreateContextAttribsARB = Function('glXCreateContextAttribsARB')
glXCreateContextAttribsARB.ret = Return('GLXContext')
glXCreateContextAttribsARB.add( Input( 'dpy','Display *' ))
glXCreateContextAttribsARB.add( Input( 'config','GLXFBConfig' ))
glXCreateContextAttribsARB.add( Input( 'share_context','GLXContext' ))
glXCreateContextAttribsARB.add( Input( 'direct','Bool' ))
glXCreateContextAttribsARB.add( Input( 'attrib_list','const int *' ))
glXCreateContextAttribsARB.version = ''
glXCreateContextAttribsARB.category = 'GLX_ARB_create_context'
glXCreateContextAttribsARB.trace = True
glXCreateContextAttribsARB.play = True
glx.add(glXCreateContextAttribsARB)

# GLX_ARB_get_proc_address

glXGetProcAddressARB = Function('glXGetProcAddressARB')
glXGetProcAddressARB.ret = Return('__GLXextFuncPtr')
glXGetProcAddressARB.add( Input( 'procName','const GLubyte *' ,cast = 'const char *' ))
glXGetProcAddressARB.version = ''
glXGetProcAddressARB.category = 'GLX_ARB_get_proc_address'
glXGetProcAddressARB.trace = True
glXGetProcAddressARB.play = True
glx.add(glXGetProcAddressARB)

# GLX_ATI_render_texture

glXBindTexImageATI = Function('glXBindTexImageATI')
glXBindTexImageATI.ret = Return('void')
glXBindTexImageATI.add( Input( 'dpy','Display *' ))
glXBindTexImageATI.add( Input( 'pbuf','GLXPbuffer' ))
glXBindTexImageATI.add( Input( 'buffer','int' ))
glXBindTexImageATI.version = ''
glXBindTexImageATI.category = 'GLX_ATI_render_texture'
glXBindTexImageATI.trace = True
glXBindTexImageATI.play = True
glx.add(glXBindTexImageATI)

glXDrawableAttribATI = Function('glXDrawableAttribATI')
glXDrawableAttribATI.ret = Return('void')
glXDrawableAttribATI.add( Input( 'dpy','Display *' ))
glXDrawableAttribATI.add( Input( 'draw','GLXDrawable' ))
glXDrawableAttribATI.add( Input( 'attrib_list','const int *' ))
glXDrawableAttribATI.version = ''
glXDrawableAttribATI.category = 'GLX_ATI_render_texture'
glXDrawableAttribATI.trace = True
glXDrawableAttribATI.play = True
glx.add(glXDrawableAttribATI)

glXReleaseTexImageATI = Function('glXReleaseTexImageATI')
glXReleaseTexImageATI.ret = Return('void')
glXReleaseTexImageATI.add( Input( 'dpy','Display *' ))
glXReleaseTexImageATI.add( Input( 'pbuf','GLXPbuffer' ))
glXReleaseTexImageATI.add( Input( 'buffer','int' ))
glXReleaseTexImageATI.version = ''
glXReleaseTexImageATI.category = 'GLX_ATI_render_texture'
glXReleaseTexImageATI.trace = True
glXReleaseTexImageATI.play = True
glx.add(glXReleaseTexImageATI)

# GLX_EXT_import_context

glXFreeContextEXT = Function('glXFreeContextEXT')
glXFreeContextEXT.ret = Return('void')
glXFreeContextEXT.add( Input( 'dpy','Display *' ))
glXFreeContextEXT.add( Input( 'context','GLXContext' ))
glXFreeContextEXT.version = ''
glXFreeContextEXT.category = 'GLX_EXT_import_context'
glXFreeContextEXT.trace = True
glXFreeContextEXT.play = True
glx.add(glXFreeContextEXT)

glXGetContextIDEXT = Function('glXGetContextIDEXT')
glXGetContextIDEXT.ret = Return('GLXContextID')
glXGetContextIDEXT.add( Input( 'context','const GLXContext' ))
glXGetContextIDEXT.version = ''
glXGetContextIDEXT.category = 'GLX_EXT_import_context'
glXGetContextIDEXT.trace = True
glXGetContextIDEXT.play = True
glx.add(glXGetContextIDEXT)

glXImportContextEXT = Function('glXImportContextEXT')
glXImportContextEXT.ret = Return('GLXContext')
glXImportContextEXT.add( Input( 'dpy','Display *' ))
glXImportContextEXT.add( Input( 'contextID','GLXContextID' ))
glXImportContextEXT.version = ''
glXImportContextEXT.category = 'GLX_EXT_import_context'
glXImportContextEXT.trace = True
glXImportContextEXT.play = True
glx.add(glXImportContextEXT)

glXQueryContextInfoEXT = Function('glXQueryContextInfoEXT')
glXQueryContextInfoEXT.ret = Return('int')
glXQueryContextInfoEXT.add( Input( 'dpy','Display *' ))
glXQueryContextInfoEXT.add( Input( 'context','GLXContext' ))
glXQueryContextInfoEXT.add( Input( 'attribute','int' ))
glXQueryContextInfoEXT.add( Output( 'value','int *' ,size = 1 ))
glXQueryContextInfoEXT.version = ''
glXQueryContextInfoEXT.category = 'GLX_EXT_import_context'
glXQueryContextInfoEXT.trace = True
glXQueryContextInfoEXT.play = True
glx.add(glXQueryContextInfoEXT)

# GLX_EXT_swap_control

glXSwapIntervalEXT = Function('glXSwapIntervalEXT')
glXSwapIntervalEXT.ret = Return('void')
glXSwapIntervalEXT.add( Input( 'dpy','Display *' ))
glXSwapIntervalEXT.add( Input( 'drawable','GLXDrawable' ))
glXSwapIntervalEXT.add( Input( 'interval','int' ))
glXSwapIntervalEXT.version = ''
glXSwapIntervalEXT.category = 'GLX_EXT_swap_control'
glXSwapIntervalEXT.trace = True
glXSwapIntervalEXT.play = True
glx.add(glXSwapIntervalEXT)

# GLX_EXT_texture_from_pixmap

glXBindTexImageEXT = Function('glXBindTexImageEXT')
glXBindTexImageEXT.ret = Return('void')
glXBindTexImageEXT.add( Input( 'display','Display *' ))
glXBindTexImageEXT.add( Input( 'drawable','GLXDrawable' ))
glXBindTexImageEXT.add( Input( 'buffer','int' ))
glXBindTexImageEXT.add( Input( 'attrib_list','const int *' ))
glXBindTexImageEXT.version = ''
glXBindTexImageEXT.category = 'GLX_EXT_texture_from_pixmap'
glXBindTexImageEXT.trace = True
glXBindTexImageEXT.play = True
glx.add(glXBindTexImageEXT)

glXReleaseTexImageEXT = Function('glXReleaseTexImageEXT')
glXReleaseTexImageEXT.ret = Return('void')
glXReleaseTexImageEXT.add( Input( 'display','Display *' ))
glXReleaseTexImageEXT.add( Input( 'drawable','GLXDrawable' ))
glXReleaseTexImageEXT.add( Input( 'buffer','int' ))
glXReleaseTexImageEXT.version = ''
glXReleaseTexImageEXT.category = 'GLX_EXT_texture_from_pixmap'
glXReleaseTexImageEXT.trace = True
glXReleaseTexImageEXT.play = True
glx.add(glXReleaseTexImageEXT)

# GLX_MESA_agp_offset

glXGetAGPOffsetMESA = Function('glXGetAGPOffsetMESA')
glXGetAGPOffsetMESA.ret = Return('unsigned int')
glXGetAGPOffsetMESA.add( Input( 'pointer','const void *' ,size = 1 ))
glXGetAGPOffsetMESA.version = ''
glXGetAGPOffsetMESA.category = 'GLX_MESA_agp_offset'
glXGetAGPOffsetMESA.trace = True
glXGetAGPOffsetMESA.play = True
glx.add(glXGetAGPOffsetMESA)

# GLX_MESA_copy_sub_buffer

glXCopySubBufferMESA = Function('glXCopySubBufferMESA')
glXCopySubBufferMESA.ret = Return('void')
glXCopySubBufferMESA.add( Input( 'dpy','Display *' ))
glXCopySubBufferMESA.add( Input( 'drawable','GLXDrawable' ))
glXCopySubBufferMESA.add( Input( 'x','int' ))
glXCopySubBufferMESA.add( Input( 'y','int' ))
glXCopySubBufferMESA.add( Input( 'width','int' ))
glXCopySubBufferMESA.add( Input( 'height','int' ))
glXCopySubBufferMESA.version = ''
glXCopySubBufferMESA.category = 'GLX_MESA_copy_sub_buffer'
glXCopySubBufferMESA.trace = True
glXCopySubBufferMESA.play = True
glx.add(glXCopySubBufferMESA)

# GLX_MESA_pixmap_colormap

glXCreateGLXPixmapMESA = Function('glXCreateGLXPixmapMESA')
glXCreateGLXPixmapMESA.ret = Return('GLXPixmap')
glXCreateGLXPixmapMESA.add( Input( 'dpy','Display *' ))
glXCreateGLXPixmapMESA.add( Input( 'visual','XVisualInfo *' ))
glXCreateGLXPixmapMESA.add( Input( 'pixmap','Pixmap' ))
glXCreateGLXPixmapMESA.add( Input( 'cmap','Colormap' ))
glXCreateGLXPixmapMESA.version = ''
glXCreateGLXPixmapMESA.category = 'GLX_MESA_pixmap_colormap'
glXCreateGLXPixmapMESA.trace = True
glXCreateGLXPixmapMESA.play = True
glx.add(glXCreateGLXPixmapMESA)

# GLX_MESA_release_buffers

glXReleaseBuffersMESA = Function('glXReleaseBuffersMESA')
glXReleaseBuffersMESA.ret = Return('Bool')
glXReleaseBuffersMESA.add( Input( 'dpy','Display *' ))
glXReleaseBuffersMESA.add( Input( 'd','GLXDrawable' ))
glXReleaseBuffersMESA.version = ''
glXReleaseBuffersMESA.category = 'GLX_MESA_release_buffers'
glXReleaseBuffersMESA.trace = True
glXReleaseBuffersMESA.play = True
glx.add(glXReleaseBuffersMESA)

# GLX_MESA_set_3dfx_mode

glXSet3DfxModeMESA = Function('glXSet3DfxModeMESA')
glXSet3DfxModeMESA.ret = Return('GLboolean')
glXSet3DfxModeMESA.add( Input( 'mode','GLint' ))
glXSet3DfxModeMESA.version = ''
glXSet3DfxModeMESA.category = 'GLX_MESA_set_3dfx_mode'
glXSet3DfxModeMESA.trace = True
glXSet3DfxModeMESA.play = True
glx.add(glXSet3DfxModeMESA)

# GLX_MESA_swap_control

glXGetSwapIntervalMESA = Function('glXGetSwapIntervalMESA')
glXGetSwapIntervalMESA.ret = Return('int')
glXGetSwapIntervalMESA.version = ''
glXGetSwapIntervalMESA.category = 'GLX_MESA_swap_control'
glXGetSwapIntervalMESA.trace = True
glXGetSwapIntervalMESA.play = True
glx.add(glXGetSwapIntervalMESA)

glXSwapIntervalMESA = Function('glXSwapIntervalMESA')
glXSwapIntervalMESA.ret = Return('int')
glXSwapIntervalMESA.add( Input( 'interval','unsigned int' ))
glXSwapIntervalMESA.version = ''
glXSwapIntervalMESA.category = 'GLX_MESA_swap_control'
glXSwapIntervalMESA.trace = True
glXSwapIntervalMESA.play = True
glx.add(glXSwapIntervalMESA)

# GLX_NV_copy_image

glXCopyImageSubDataNV = Function('glXCopyImageSubDataNV')
glXCopyImageSubDataNV.ret = Return('void')
glXCopyImageSubDataNV.add( Input( 'dpy','Display *' ))
glXCopyImageSubDataNV.add( Input( 'srcCtx','GLXContext' ))
glXCopyImageSubDataNV.add( Input( 'srcName','GLuint' ))
glXCopyImageSubDataNV.add( Input( 'srcTarget','GLenum' ))
glXCopyImageSubDataNV.add( Input( 'srcLevel','GLint' ))
glXCopyImageSubDataNV.add( Input( 'srcX','GLint' ))
glXCopyImageSubDataNV.add( Input( 'srcY','GLint' ))
glXCopyImageSubDataNV.add( Input( 'srcZ','GLint' ))
glXCopyImageSubDataNV.add( Input( 'dstCtx','GLXContext' ))
glXCopyImageSubDataNV.add( Input( 'dstName','GLuint' ))
glXCopyImageSubDataNV.add( Input( 'dstTarget','GLenum' ))
glXCopyImageSubDataNV.add( Input( 'dstLevel','GLint' ))
glXCopyImageSubDataNV.add( Input( 'dstX','GLint' ))
glXCopyImageSubDataNV.add( Input( 'dstY','GLint' ))
glXCopyImageSubDataNV.add( Input( 'dstZ','GLint' ))
glXCopyImageSubDataNV.add( Input( 'width','GLsizei' ))
glXCopyImageSubDataNV.add( Input( 'height','GLsizei' ))
glXCopyImageSubDataNV.add( Input( 'depth','GLsizei' ))
glXCopyImageSubDataNV.version = ''
glXCopyImageSubDataNV.category = 'GLX_NV_copy_image'
glXCopyImageSubDataNV.trace = True
glXCopyImageSubDataNV.play = True
glx.add(glXCopyImageSubDataNV)

# GLX_NV_present_video

glXBindVideoDeviceNV = Function('glXBindVideoDeviceNV')
glXBindVideoDeviceNV.ret = Return('int')
glXBindVideoDeviceNV.add( Input( 'dpy','Display *' ))
glXBindVideoDeviceNV.add( Input( 'video_slot','unsigned int' ))
glXBindVideoDeviceNV.add( Input( 'video_device','unsigned int' ))
glXBindVideoDeviceNV.add( Input( 'attrib_list','const int *' ))
glXBindVideoDeviceNV.version = ''
glXBindVideoDeviceNV.category = 'GLX_NV_present_video'
glXBindVideoDeviceNV.trace = True
glXBindVideoDeviceNV.play = True
glx.add(glXBindVideoDeviceNV)

glXEnumerateVideoDevicesNV = Function('glXEnumerateVideoDevicesNV')
glXEnumerateVideoDevicesNV.ret = Return('unsigned int *')
glXEnumerateVideoDevicesNV.add( Input( 'dpy','Display *' ))
glXEnumerateVideoDevicesNV.add( Input( 'screen','int' ))
glXEnumerateVideoDevicesNV.add( Output( 'nelements','int *' ,size = 1 ))
glXEnumerateVideoDevicesNV.version = ''
glXEnumerateVideoDevicesNV.category = 'GLX_NV_present_video'
glXEnumerateVideoDevicesNV.trace = True
glXEnumerateVideoDevicesNV.play = True
glx.add(glXEnumerateVideoDevicesNV)

# GLX_NV_swap_group

glXBindSwapBarrierNV = Function('glXBindSwapBarrierNV')
glXBindSwapBarrierNV.ret = Return('Bool')
glXBindSwapBarrierNV.add( Input( 'dpy','Display *' ))
glXBindSwapBarrierNV.add( Input( 'group','GLuint' ))
glXBindSwapBarrierNV.add( Input( 'barrier','GLuint' ))
glXBindSwapBarrierNV.version = ''
glXBindSwapBarrierNV.category = 'GLX_NV_swap_group'
glXBindSwapBarrierNV.trace = True
glXBindSwapBarrierNV.play = True
glx.add(glXBindSwapBarrierNV)

glXJoinSwapGroupNV = Function('glXJoinSwapGroupNV')
glXJoinSwapGroupNV.ret = Return('Bool')
glXJoinSwapGroupNV.add( Input( 'dpy','Display *' ))
glXJoinSwapGroupNV.add( Input( 'drawable','GLXDrawable' ))
glXJoinSwapGroupNV.add( Input( 'group','GLuint' ))
glXJoinSwapGroupNV.version = ''
glXJoinSwapGroupNV.category = 'GLX_NV_swap_group'
glXJoinSwapGroupNV.trace = True
glXJoinSwapGroupNV.play = True
glx.add(glXJoinSwapGroupNV)

glXQueryFrameCountNV = Function('glXQueryFrameCountNV')
glXQueryFrameCountNV.ret = Return('Bool')
glXQueryFrameCountNV.add( Input( 'dpy','Display *' ))
glXQueryFrameCountNV.add( Input( 'screen','int' ))
glXQueryFrameCountNV.add( Output( 'count','GLuint *' ,size = 1 ))
glXQueryFrameCountNV.version = ''
glXQueryFrameCountNV.category = 'GLX_NV_swap_group'
glXQueryFrameCountNV.trace = True
glXQueryFrameCountNV.play = True
glx.add(glXQueryFrameCountNV)

glXQueryMaxSwapGroupsNV = Function('glXQueryMaxSwapGroupsNV')
glXQueryMaxSwapGroupsNV.ret = Return('Bool')
glXQueryMaxSwapGroupsNV.add( Input( 'dpy','Display *' ))
glXQueryMaxSwapGroupsNV.add( Input( 'screen','int' ))
glXQueryMaxSwapGroupsNV.add( Output( 'maxGroups','GLuint *' ,size = 1 ))
glXQueryMaxSwapGroupsNV.add( Output( 'maxBarriers','GLuint *' ,size = 1 ))
glXQueryMaxSwapGroupsNV.version = ''
glXQueryMaxSwapGroupsNV.category = 'GLX_NV_swap_group'
glXQueryMaxSwapGroupsNV.trace = True
glXQueryMaxSwapGroupsNV.play = True
glx.add(glXQueryMaxSwapGroupsNV)

glXQuerySwapGroupNV = Function('glXQuerySwapGroupNV')
glXQuerySwapGroupNV.ret = Return('Bool')
glXQuerySwapGroupNV.add( Input( 'dpy','Display *' ))
glXQuerySwapGroupNV.add( Input( 'drawable','GLXDrawable' ))
glXQuerySwapGroupNV.add( Output( 'group','GLuint *' ,size = 1 ))
glXQuerySwapGroupNV.add( Output( 'barrier','GLuint *' ,size = 1 ))
glXQuerySwapGroupNV.version = ''
glXQuerySwapGroupNV.category = 'GLX_NV_swap_group'
glXQuerySwapGroupNV.trace = True
glXQuerySwapGroupNV.play = True
glx.add(glXQuerySwapGroupNV)

glXResetFrameCountNV = Function('glXResetFrameCountNV')
glXResetFrameCountNV.ret = Return('Bool')
glXResetFrameCountNV.add( Input( 'dpy','Display *' ))
glXResetFrameCountNV.add( Input( 'screen','int' ))
glXResetFrameCountNV.version = ''
glXResetFrameCountNV.category = 'GLX_NV_swap_group'
glXResetFrameCountNV.trace = True
glXResetFrameCountNV.play = True
glx.add(glXResetFrameCountNV)

# GLX_NV_vertex_array_range

glXAllocateMemoryNV = Function('glXAllocateMemoryNV')
glXAllocateMemoryNV.ret = Return('void *')
glXAllocateMemoryNV.add( Input( 'size','GLsizei' ))
glXAllocateMemoryNV.add( Input( 'readFrequency','GLfloat' ))
glXAllocateMemoryNV.add( Input( 'writeFrequency','GLfloat' ))
glXAllocateMemoryNV.add( Input( 'priority','GLfloat' ))
glXAllocateMemoryNV.version = ''
glXAllocateMemoryNV.category = 'GLX_NV_vertex_array_range'
glXAllocateMemoryNV.trace = True
glXAllocateMemoryNV.play = True
glx.add(glXAllocateMemoryNV)

glXFreeMemoryNV = Function('glXFreeMemoryNV')
glXFreeMemoryNV.ret = Return('void')
glXFreeMemoryNV.add( Input( 'pointer','void *' ))
glXFreeMemoryNV.version = ''
glXFreeMemoryNV.category = 'GLX_NV_vertex_array_range'
glXFreeMemoryNV.trace = True
glXFreeMemoryNV.play = True
glx.add(glXFreeMemoryNV)

# GLX_NV_video_capture

glXBindVideoCaptureDeviceNV = Function('glXBindVideoCaptureDeviceNV')
glXBindVideoCaptureDeviceNV.ret = Return('int')
glXBindVideoCaptureDeviceNV.add( Input( 'dpy','Display *' ))
glXBindVideoCaptureDeviceNV.add( Input( 'video_capture_slot','unsigned int' ))
glXBindVideoCaptureDeviceNV.add( Input( 'device','GLXVideoCaptureDeviceNV' ))
glXBindVideoCaptureDeviceNV.version = ''
glXBindVideoCaptureDeviceNV.category = 'GLX_NV_video_capture'
glXBindVideoCaptureDeviceNV.trace = True
glXBindVideoCaptureDeviceNV.play = True
glx.add(glXBindVideoCaptureDeviceNV)

glXEnumerateVideoCaptureDevicesNV = Function('glXEnumerateVideoCaptureDevicesNV')
glXEnumerateVideoCaptureDevicesNV.ret = Return('GLXVideoCaptureDeviceNV *')
glXEnumerateVideoCaptureDevicesNV.add( Input( 'dpy','Display *' ))
glXEnumerateVideoCaptureDevicesNV.add( Input( 'screen','int' ))
glXEnumerateVideoCaptureDevicesNV.add( Input( 'nelements','int *' ))
glXEnumerateVideoCaptureDevicesNV.version = ''
glXEnumerateVideoCaptureDevicesNV.category = 'GLX_NV_video_capture'
glXEnumerateVideoCaptureDevicesNV.trace = True
glXEnumerateVideoCaptureDevicesNV.play = True
glx.add(glXEnumerateVideoCaptureDevicesNV)

glXLockVideoCaptureDeviceNV = Function('glXLockVideoCaptureDeviceNV')
glXLockVideoCaptureDeviceNV.ret = Return('void')
glXLockVideoCaptureDeviceNV.add( Input( 'dpy','Display *' ))
glXLockVideoCaptureDeviceNV.add( Input( 'device','GLXVideoCaptureDeviceNV' ))
glXLockVideoCaptureDeviceNV.version = ''
glXLockVideoCaptureDeviceNV.category = 'GLX_NV_video_capture'
glXLockVideoCaptureDeviceNV.trace = True
glXLockVideoCaptureDeviceNV.play = True
glx.add(glXLockVideoCaptureDeviceNV)

glXQueryVideoCaptureDeviceNV = Function('glXQueryVideoCaptureDeviceNV')
glXQueryVideoCaptureDeviceNV.ret = Return('int')
glXQueryVideoCaptureDeviceNV.add( Input( 'dpy','Display *' ))
glXQueryVideoCaptureDeviceNV.add( Input( 'device','GLXVideoCaptureDeviceNV' ))
glXQueryVideoCaptureDeviceNV.add( Input( 'attribute','int' ))
glXQueryVideoCaptureDeviceNV.add( Input( 'value','int *' ))
glXQueryVideoCaptureDeviceNV.version = ''
glXQueryVideoCaptureDeviceNV.category = 'GLX_NV_video_capture'
glXQueryVideoCaptureDeviceNV.trace = True
glXQueryVideoCaptureDeviceNV.play = True
glx.add(glXQueryVideoCaptureDeviceNV)

glXReleaseVideoCaptureDeviceNV = Function('glXReleaseVideoCaptureDeviceNV')
glXReleaseVideoCaptureDeviceNV.ret = Return('void')
glXReleaseVideoCaptureDeviceNV.add( Input( 'dpy','Display *' ))
glXReleaseVideoCaptureDeviceNV.add( Input( 'device','GLXVideoCaptureDeviceNV' ))
glXReleaseVideoCaptureDeviceNV.version = ''
glXReleaseVideoCaptureDeviceNV.category = 'GLX_NV_video_capture'
glXReleaseVideoCaptureDeviceNV.trace = True
glXReleaseVideoCaptureDeviceNV.play = True
glx.add(glXReleaseVideoCaptureDeviceNV)

# GLX_NV_video_output

glXBindVideoImageNV = Function('glXBindVideoImageNV')
glXBindVideoImageNV.ret = Return('int')
glXBindVideoImageNV.add( Input( 'dpy','Display *' ))
glXBindVideoImageNV.add( Input( 'VideoDevice','GLXVideoDeviceNV' ))
glXBindVideoImageNV.add( Input( 'pbuf','GLXPbuffer' ))
glXBindVideoImageNV.add( Input( 'iVideoBuffer','int' ))
glXBindVideoImageNV.version = ''
glXBindVideoImageNV.category = 'GLX_NV_video_output'
glXBindVideoImageNV.trace = True
glXBindVideoImageNV.play = True
glx.add(glXBindVideoImageNV)

glXGetVideoDeviceNV = Function('glXGetVideoDeviceNV')
glXGetVideoDeviceNV.ret = Return('int')
glXGetVideoDeviceNV.add( Input( 'dpy','Display *' ))
glXGetVideoDeviceNV.add( Input( 'screen','int' ))
glXGetVideoDeviceNV.add( Input( 'numVideoDevices','int' ))
glXGetVideoDeviceNV.add( Output( 'pVideoDevice','GLXVideoDeviceNV *' ,size = 'numVideoDevices' ))
glXGetVideoDeviceNV.version = ''
glXGetVideoDeviceNV.category = 'GLX_NV_video_output'
glXGetVideoDeviceNV.trace = True
glXGetVideoDeviceNV.play = True
glx.add(glXGetVideoDeviceNV)

glXGetVideoInfoNV = Function('glXGetVideoInfoNV')
glXGetVideoInfoNV.ret = Return('int')
glXGetVideoInfoNV.add( Input( 'dpy','Display *' ))
glXGetVideoInfoNV.add( Input( 'screen','int' ))
glXGetVideoInfoNV.add( Input( 'VideoDevice','GLXVideoDeviceNV' ))
glXGetVideoInfoNV.add( Output( 'pulCounterOutputPbuffer','unsigned long *' ,size = 1 ))
glXGetVideoInfoNV.add( Output( 'pulCounterOutputVideo','unsigned long *' ,size = 1 ))
glXGetVideoInfoNV.version = ''
glXGetVideoInfoNV.category = 'GLX_NV_video_output'
glXGetVideoInfoNV.trace = True
glXGetVideoInfoNV.play = True
glx.add(glXGetVideoInfoNV)

glXReleaseVideoDeviceNV = Function('glXReleaseVideoDeviceNV')
glXReleaseVideoDeviceNV.ret = Return('int')
glXReleaseVideoDeviceNV.add( Input( 'dpy','Display *' ))
glXReleaseVideoDeviceNV.add( Input( 'screen','int' ))
glXReleaseVideoDeviceNV.add( Input( 'VideoDevice','GLXVideoDeviceNV' ))
glXReleaseVideoDeviceNV.version = ''
glXReleaseVideoDeviceNV.category = 'GLX_NV_video_output'
glXReleaseVideoDeviceNV.trace = True
glXReleaseVideoDeviceNV.play = True
glx.add(glXReleaseVideoDeviceNV)

glXReleaseVideoImageNV = Function('glXReleaseVideoImageNV')
glXReleaseVideoImageNV.ret = Return('int')
glXReleaseVideoImageNV.add( Input( 'dpy','Display *' ))
glXReleaseVideoImageNV.add( Input( 'pbuf','GLXPbuffer' ))
glXReleaseVideoImageNV.version = ''
glXReleaseVideoImageNV.category = 'GLX_NV_video_output'
glXReleaseVideoImageNV.trace = True
glXReleaseVideoImageNV.play = True
glx.add(glXReleaseVideoImageNV)

glXSendPbufferToVideoNV = Function('glXSendPbufferToVideoNV')
glXSendPbufferToVideoNV.ret = Return('int')
glXSendPbufferToVideoNV.add( Input( 'dpy','Display *' ))
glXSendPbufferToVideoNV.add( Input( 'pbuf','GLXPbuffer' ))
glXSendPbufferToVideoNV.add( Input( 'iBufferType','int' ))
glXSendPbufferToVideoNV.add( Output( 'pulCounterPbuffer','unsigned long *' ,size = 1 ))
glXSendPbufferToVideoNV.add( Input( 'bBlock','GLboolean' ))
glXSendPbufferToVideoNV.version = ''
glXSendPbufferToVideoNV.category = 'GLX_NV_video_output'
glXSendPbufferToVideoNV.trace = True
glXSendPbufferToVideoNV.play = True
glx.add(glXSendPbufferToVideoNV)

# GLX_OML_sync_control

glXGetMscRateOML = Function('glXGetMscRateOML')
glXGetMscRateOML.ret = Return('Bool')
glXGetMscRateOML.add( Input( 'dpy','Display *' ))
glXGetMscRateOML.add( Input( 'drawable','GLXDrawable' ))
glXGetMscRateOML.add( Output( 'numerator','int32_t *' ,size = 1 ))
glXGetMscRateOML.add( Output( 'denominator','int32_t *' ,size = 1 ))
glXGetMscRateOML.version = ''
glXGetMscRateOML.category = 'GLX_OML_sync_control'
glXGetMscRateOML.trace = True
glXGetMscRateOML.play = True
glx.add(glXGetMscRateOML)

glXGetSyncValuesOML = Function('glXGetSyncValuesOML')
glXGetSyncValuesOML.ret = Return('Bool')
glXGetSyncValuesOML.add( Input( 'dpy','Display *' ))
glXGetSyncValuesOML.add( Input( 'drawable','GLXDrawable' ))
glXGetSyncValuesOML.add( Output( 'ust','int64_t *' ,size = 1 ))
glXGetSyncValuesOML.add( Output( 'msc','int64_t *' ,size = 1 ))
glXGetSyncValuesOML.add( Output( 'sbc','int64_t *' ,size = 1 ))
glXGetSyncValuesOML.version = ''
glXGetSyncValuesOML.category = 'GLX_OML_sync_control'
glXGetSyncValuesOML.trace = True
glXGetSyncValuesOML.play = True
glx.add(glXGetSyncValuesOML)

glXSwapBuffersMscOML = Function('glXSwapBuffersMscOML')
glXSwapBuffersMscOML.ret = Return('int64_t')
glXSwapBuffersMscOML.add( Input( 'dpy','Display *' ))
glXSwapBuffersMscOML.add( Input( 'drawable','GLXDrawable' ))
glXSwapBuffersMscOML.add( Input( 'target_msc','int64_t' ))
glXSwapBuffersMscOML.add( Input( 'divisor','int64_t' ))
glXSwapBuffersMscOML.add( Input( 'remainder','int64_t' ))
glXSwapBuffersMscOML.version = ''
glXSwapBuffersMscOML.category = 'GLX_OML_sync_control'
glXSwapBuffersMscOML.trace = True
glXSwapBuffersMscOML.play = True
glx.add(glXSwapBuffersMscOML)

glXWaitForMscOML = Function('glXWaitForMscOML')
glXWaitForMscOML.ret = Return('Bool')
glXWaitForMscOML.add( Input( 'dpy','Display *' ))
glXWaitForMscOML.add( Input( 'drawable','GLXDrawable' ))
glXWaitForMscOML.add( Input( 'target_msc','int64_t' ))
glXWaitForMscOML.add( Input( 'divisor','int64_t' ))
glXWaitForMscOML.add( Input( 'remainder','int64_t' ))
glXWaitForMscOML.add( Output( 'ust','int64_t *' ,size = 1 ))
glXWaitForMscOML.add( Output( 'msc','int64_t *' ,size = 1 ))
glXWaitForMscOML.add( Output( 'sbc','int64_t *' ,size = 1 ))
glXWaitForMscOML.version = ''
glXWaitForMscOML.category = 'GLX_OML_sync_control'
glXWaitForMscOML.trace = True
glXWaitForMscOML.play = True
glx.add(glXWaitForMscOML)

glXWaitForSbcOML = Function('glXWaitForSbcOML')
glXWaitForSbcOML.ret = Return('Bool')
glXWaitForSbcOML.add( Input( 'dpy','Display *' ))
glXWaitForSbcOML.add( Input( 'drawable','GLXDrawable' ))
glXWaitForSbcOML.add( Input( 'target_sbc','int64_t' ))
glXWaitForSbcOML.add( Input( 'ust','int64_t *' ,size = 1 ))
glXWaitForSbcOML.add( Input( 'msc','int64_t *' ,size = 1 ))
glXWaitForSbcOML.add( Input( 'sbc','int64_t *' ,size = 1 ))
glXWaitForSbcOML.version = ''
glXWaitForSbcOML.category = 'GLX_OML_sync_control'
glXWaitForSbcOML.trace = True
glXWaitForSbcOML.play = False
glx.add(glXWaitForSbcOML)

# GLX_SGIX_fbconfig

glXChooseFBConfigSGIX = Function('glXChooseFBConfigSGIX')
glXChooseFBConfigSGIX.ret = Return('GLXFBConfigSGIX *')
glXChooseFBConfigSGIX.add( Input( 'dpy','Display *' ))
glXChooseFBConfigSGIX.add( Input( 'screen','int' ))
glXChooseFBConfigSGIX.add( Input( 'attrib_list','const int *' ))
glXChooseFBConfigSGIX.add( Input( 'nelements','int *' ))
glXChooseFBConfigSGIX.version = ''
glXChooseFBConfigSGIX.category = 'GLX_SGIX_fbconfig'
glXChooseFBConfigSGIX.trace = True
glXChooseFBConfigSGIX.play = True
glx.add(glXChooseFBConfigSGIX)

glXCreateContextWithConfigSGIX = Function('glXCreateContextWithConfigSGIX')
glXCreateContextWithConfigSGIX.ret = Return('GLXContext')
glXCreateContextWithConfigSGIX.add( Input( 'dpy','Display *' ))
glXCreateContextWithConfigSGIX.add( Input( 'config','GLXFBConfig' ))
glXCreateContextWithConfigSGIX.add( Input( 'render_type','int' ))
glXCreateContextWithConfigSGIX.add( Input( 'share_list','GLXContext' ))
glXCreateContextWithConfigSGIX.add( Input( 'direct','Bool' ))
glXCreateContextWithConfigSGIX.version = ''
glXCreateContextWithConfigSGIX.category = 'GLX_SGIX_fbconfig'
glXCreateContextWithConfigSGIX.trace = True
glXCreateContextWithConfigSGIX.play = True
glx.add(glXCreateContextWithConfigSGIX)

glXCreateGLXPixmapWithConfigSGIX = Function('glXCreateGLXPixmapWithConfigSGIX')
glXCreateGLXPixmapWithConfigSGIX.ret = Return('GLXPixmap')
glXCreateGLXPixmapWithConfigSGIX.add( Input( 'dpy','Display *' ))
glXCreateGLXPixmapWithConfigSGIX.add( Input( 'config','GLXFBConfig' ))
glXCreateGLXPixmapWithConfigSGIX.add( Input( 'pixmap','Pixmap' ))
glXCreateGLXPixmapWithConfigSGIX.version = ''
glXCreateGLXPixmapWithConfigSGIX.category = 'GLX_SGIX_fbconfig'
glXCreateGLXPixmapWithConfigSGIX.trace = True
glXCreateGLXPixmapWithConfigSGIX.play = True
glx.add(glXCreateGLXPixmapWithConfigSGIX)

glXGetFBConfigAttribSGIX = Function('glXGetFBConfigAttribSGIX')
glXGetFBConfigAttribSGIX.ret = Return('int')
glXGetFBConfigAttribSGIX.add( Input( 'dpy','Display *' ))
glXGetFBConfigAttribSGIX.add( Input( 'config','GLXFBConfigSGIX' ))
glXGetFBConfigAttribSGIX.add( Input( 'attribute','int' ))
glXGetFBConfigAttribSGIX.add( Input( 'value','int *' ,size = 1 ))
glXGetFBConfigAttribSGIX.version = ''
glXGetFBConfigAttribSGIX.category = 'GLX_SGIX_fbconfig'
glXGetFBConfigAttribSGIX.trace = True
glXGetFBConfigAttribSGIX.play = False
glx.add(glXGetFBConfigAttribSGIX)

glXGetFBConfigFromVisualSGIX = Function('glXGetFBConfigFromVisualSGIX')
glXGetFBConfigFromVisualSGIX.ret = Return('GLXFBConfigSGIX')
glXGetFBConfigFromVisualSGIX.add( Input( 'dpy','Display *' ))
glXGetFBConfigFromVisualSGIX.add( Input( 'vis','XVisualInfo *' ))
glXGetFBConfigFromVisualSGIX.version = ''
glXGetFBConfigFromVisualSGIX.category = 'GLX_SGIX_fbconfig'
glXGetFBConfigFromVisualSGIX.trace = True
glXGetFBConfigFromVisualSGIX.play = True
glx.add(glXGetFBConfigFromVisualSGIX)

glXGetVisualFromFBConfigSGIX = Function('glXGetVisualFromFBConfigSGIX')
glXGetVisualFromFBConfigSGIX.ret = Return('XVisualInfo *')
glXGetVisualFromFBConfigSGIX.add( Input( 'dpy','Display *' ))
glXGetVisualFromFBConfigSGIX.add( Input( 'config','GLXFBConfig' ))
glXGetVisualFromFBConfigSGIX.version = ''
glXGetVisualFromFBConfigSGIX.category = 'GLX_SGIX_fbconfig'
glXGetVisualFromFBConfigSGIX.trace = True
glXGetVisualFromFBConfigSGIX.play = True
glx.add(glXGetVisualFromFBConfigSGIX)

# GLX_SGIX_hyperpipe

glXBindHyperpipeSGIX = Function('glXBindHyperpipeSGIX')
glXBindHyperpipeSGIX.ret = Return('int')
glXBindHyperpipeSGIX.add( Input( 'dpy','Display *' ))
glXBindHyperpipeSGIX.add( Input( 'hpId','int' ))
glXBindHyperpipeSGIX.version = ''
glXBindHyperpipeSGIX.category = 'GLX_SGIX_hyperpipe'
glXBindHyperpipeSGIX.regal = False
glXBindHyperpipeSGIX.trace = True
glXBindHyperpipeSGIX.play = True
glx.add(glXBindHyperpipeSGIX)

glXDestroyHyperpipeConfigSGIX = Function('glXDestroyHyperpipeConfigSGIX')
glXDestroyHyperpipeConfigSGIX.ret = Return('int')
glXDestroyHyperpipeConfigSGIX.add( Input( 'dpy','Display *' ))
glXDestroyHyperpipeConfigSGIX.add( Input( 'hpId','int' ))
glXDestroyHyperpipeConfigSGIX.version = ''
glXDestroyHyperpipeConfigSGIX.category = 'GLX_SGIX_hyperpipe'
glXDestroyHyperpipeConfigSGIX.regal = False
glXDestroyHyperpipeConfigSGIX.trace = True
glXDestroyHyperpipeConfigSGIX.play = True
glx.add(glXDestroyHyperpipeConfigSGIX)

glXHyperpipeAttribSGIX = Function('glXHyperpipeAttribSGIX')
glXHyperpipeAttribSGIX.ret = Return('int')
glXHyperpipeAttribSGIX.add( Input( 'dpy','Display *' ))
glXHyperpipeAttribSGIX.add( Input( 'timeSlice','int' ))
glXHyperpipeAttribSGIX.add( Input( 'attrib','int' ))
glXHyperpipeAttribSGIX.add( Input( 'size','int' ))
glXHyperpipeAttribSGIX.add( Input( 'attribList','void *' ))
glXHyperpipeAttribSGIX.version = ''
glXHyperpipeAttribSGIX.category = 'GLX_SGIX_hyperpipe'
glXHyperpipeAttribSGIX.regal = False
glXHyperpipeAttribSGIX.trace = True
glXHyperpipeAttribSGIX.play = True
glx.add(glXHyperpipeAttribSGIX)

glXHyperpipeConfigSGIX = Function('glXHyperpipeConfigSGIX')
glXHyperpipeConfigSGIX.ret = Return('int')
glXHyperpipeConfigSGIX.add( Input( 'dpy','Display *' ))
glXHyperpipeConfigSGIX.add( Input( 'networkId','int' ))
glXHyperpipeConfigSGIX.add( Input( 'npipes','int' ))
glXHyperpipeConfigSGIX.add( Input( 'cfg','GLXHyperpipeConfigSGIX *' ))
glXHyperpipeConfigSGIX.add( Output( 'hpId','int *' ,size = 1 ))
glXHyperpipeConfigSGIX.version = ''
glXHyperpipeConfigSGIX.category = 'GLX_SGIX_hyperpipe'
glXHyperpipeConfigSGIX.regal = False
glXHyperpipeConfigSGIX.trace = True
glXHyperpipeConfigSGIX.play = True
glx.add(glXHyperpipeConfigSGIX)

glXQueryHyperpipeAttribSGIX = Function('glXQueryHyperpipeAttribSGIX')
glXQueryHyperpipeAttribSGIX.ret = Return('int')
glXQueryHyperpipeAttribSGIX.add( Input( 'dpy','Display *' ))
glXQueryHyperpipeAttribSGIX.add( Input( 'timeSlice','int' ))
glXQueryHyperpipeAttribSGIX.add( Input( 'attrib','int' ))
glXQueryHyperpipeAttribSGIX.add( Input( 'size','int' ))
glXQueryHyperpipeAttribSGIX.add( Output( 'returnAttribList','void *' ))
glXQueryHyperpipeAttribSGIX.version = ''
glXQueryHyperpipeAttribSGIX.category = 'GLX_SGIX_hyperpipe'
glXQueryHyperpipeAttribSGIX.regal = False
glXQueryHyperpipeAttribSGIX.trace = True
glXQueryHyperpipeAttribSGIX.play = True
glx.add(glXQueryHyperpipeAttribSGIX)

glXQueryHyperpipeBestAttribSGIX = Function('glXQueryHyperpipeBestAttribSGIX')
glXQueryHyperpipeBestAttribSGIX.ret = Return('int')
glXQueryHyperpipeBestAttribSGIX.add( Input( 'dpy','Display *' ))
glXQueryHyperpipeBestAttribSGIX.add( Input( 'timeSlice','int' ))
glXQueryHyperpipeBestAttribSGIX.add( Input( 'attrib','int' ))
glXQueryHyperpipeBestAttribSGIX.add( Input( 'size','int' ))
glXQueryHyperpipeBestAttribSGIX.add( Input( 'attribList','void *' ))
glXQueryHyperpipeBestAttribSGIX.add( Output( 'returnAttribList','void *' ))
glXQueryHyperpipeBestAttribSGIX.version = ''
glXQueryHyperpipeBestAttribSGIX.category = 'GLX_SGIX_hyperpipe'
glXQueryHyperpipeBestAttribSGIX.regal = False
glXQueryHyperpipeBestAttribSGIX.trace = True
glXQueryHyperpipeBestAttribSGIX.play = True
glx.add(glXQueryHyperpipeBestAttribSGIX)

glXQueryHyperpipeConfigSGIX = Function('glXQueryHyperpipeConfigSGIX')
glXQueryHyperpipeConfigSGIX.ret = Return('GLXHyperpipeConfigSGIX *')
glXQueryHyperpipeConfigSGIX.add( Input( 'dpy','Display *' ))
glXQueryHyperpipeConfigSGIX.add( Input( 'hpId','int' ))
glXQueryHyperpipeConfigSGIX.add( Input( 'npipes','int *' ,size = 1 ))
glXQueryHyperpipeConfigSGIX.version = ''
glXQueryHyperpipeConfigSGIX.category = 'GLX_SGIX_hyperpipe'
glXQueryHyperpipeConfigSGIX.regal = False
glXQueryHyperpipeConfigSGIX.trace = True
glXQueryHyperpipeConfigSGIX.play = False
glx.add(glXQueryHyperpipeConfigSGIX)

glXQueryHyperpipeNetworkSGIX = Function('glXQueryHyperpipeNetworkSGIX')
glXQueryHyperpipeNetworkSGIX.ret = Return('GLXHyperpipeNetworkSGIX *')
glXQueryHyperpipeNetworkSGIX.add( Input( 'dpy','Display *' ))
glXQueryHyperpipeNetworkSGIX.add( Output( 'npipes','int *' ,size = 1 ))
glXQueryHyperpipeNetworkSGIX.version = ''
glXQueryHyperpipeNetworkSGIX.category = 'GLX_SGIX_hyperpipe'
glXQueryHyperpipeNetworkSGIX.regal = False
glXQueryHyperpipeNetworkSGIX.trace = True
glXQueryHyperpipeNetworkSGIX.play = True
glx.add(glXQueryHyperpipeNetworkSGIX)

# GLX_SGIX_pbuffer

glXCreateGLXPbufferSGIX = Function('glXCreateGLXPbufferSGIX')
glXCreateGLXPbufferSGIX.ret = Return('GLXPbuffer')
glXCreateGLXPbufferSGIX.add( Input( 'dpy','Display *' ))
glXCreateGLXPbufferSGIX.add( Input( 'config','GLXFBConfig' ))
glXCreateGLXPbufferSGIX.add( Input( 'width','unsigned int' ))
glXCreateGLXPbufferSGIX.add( Input( 'height','unsigned int' ))
glXCreateGLXPbufferSGIX.add( Input( 'attrib_list','int *' ))
glXCreateGLXPbufferSGIX.version = ''
glXCreateGLXPbufferSGIX.category = 'GLX_SGIX_pbuffer'
glXCreateGLXPbufferSGIX.trace = True
glXCreateGLXPbufferSGIX.play = True
glx.add(glXCreateGLXPbufferSGIX)

glXDestroyGLXPbufferSGIX = Function('glXDestroyGLXPbufferSGIX')
glXDestroyGLXPbufferSGIX.ret = Return('void')
glXDestroyGLXPbufferSGIX.add( Input( 'dpy','Display *' ))
glXDestroyGLXPbufferSGIX.add( Input( 'pbuf','GLXPbuffer' ))
glXDestroyGLXPbufferSGIX.version = ''
glXDestroyGLXPbufferSGIX.category = 'GLX_SGIX_pbuffer'
glXDestroyGLXPbufferSGIX.trace = True
glXDestroyGLXPbufferSGIX.play = True
glx.add(glXDestroyGLXPbufferSGIX)

glXGetSelectedEventSGIX = Function('glXGetSelectedEventSGIX')
glXGetSelectedEventSGIX.ret = Return('void')
glXGetSelectedEventSGIX.add( Input( 'dpy','Display *' ))
glXGetSelectedEventSGIX.add( Input( 'drawable','GLXDrawable' ))
glXGetSelectedEventSGIX.add( Input( 'mask','unsigned long *' ,size = 1 ))
glXGetSelectedEventSGIX.version = ''
glXGetSelectedEventSGIX.category = 'GLX_SGIX_pbuffer'
glXGetSelectedEventSGIX.trace = True
glXGetSelectedEventSGIX.play = False
glx.add(glXGetSelectedEventSGIX)

glXQueryGLXPbufferSGIX = Function('glXQueryGLXPbufferSGIX')
glXQueryGLXPbufferSGIX.ret = Return('void')
glXQueryGLXPbufferSGIX.add( Input( 'dpy','Display *' ))
glXQueryGLXPbufferSGIX.add( Input( 'pbuf','GLXPbuffer' ))
glXQueryGLXPbufferSGIX.add( Input( 'attribute','int' ))
glXQueryGLXPbufferSGIX.add( Input( 'value','unsigned int *' ,size = 1 ))
glXQueryGLXPbufferSGIX.version = ''
glXQueryGLXPbufferSGIX.category = 'GLX_SGIX_pbuffer'
glXQueryGLXPbufferSGIX.trace = True
glXQueryGLXPbufferSGIX.play = False
glx.add(glXQueryGLXPbufferSGIX)

glXSelectEventSGIX = Function('glXSelectEventSGIX')
glXSelectEventSGIX.ret = Return('void')
glXSelectEventSGIX.add( Input( 'dpy','Display *' ))
glXSelectEventSGIX.add( Input( 'drawable','GLXDrawable' ))
glXSelectEventSGIX.add( Input( 'mask','unsigned long' ))
glXSelectEventSGIX.version = ''
glXSelectEventSGIX.category = 'GLX_SGIX_pbuffer'
glXSelectEventSGIX.trace = True
glXSelectEventSGIX.play = True
glx.add(glXSelectEventSGIX)

# GLX_SGIX_swap_barrier

glXBindSwapBarrierSGIX = Function('glXBindSwapBarrierSGIX')
glXBindSwapBarrierSGIX.ret = Return('void')
glXBindSwapBarrierSGIX.add( Input( 'dpy','Display *' ))
glXBindSwapBarrierSGIX.add( Input( 'drawable','GLXDrawable' ))
glXBindSwapBarrierSGIX.add( Input( 'barrier','int' ))
glXBindSwapBarrierSGIX.version = ''
glXBindSwapBarrierSGIX.category = 'GLX_SGIX_swap_barrier'
glXBindSwapBarrierSGIX.trace = True
glXBindSwapBarrierSGIX.play = True
glx.add(glXBindSwapBarrierSGIX)

glXQueryMaxSwapBarriersSGIX = Function('glXQueryMaxSwapBarriersSGIX')
glXQueryMaxSwapBarriersSGIX.ret = Return('Bool')
glXQueryMaxSwapBarriersSGIX.add( Input( 'dpy','Display *' ))
glXQueryMaxSwapBarriersSGIX.add( Input( 'screen','int' ))
glXQueryMaxSwapBarriersSGIX.add( Output( 'max','int *' ,size = 1 ))
glXQueryMaxSwapBarriersSGIX.version = ''
glXQueryMaxSwapBarriersSGIX.category = 'GLX_SGIX_swap_barrier'
glXQueryMaxSwapBarriersSGIX.trace = True
glXQueryMaxSwapBarriersSGIX.play = True
glx.add(glXQueryMaxSwapBarriersSGIX)

# GLX_SGIX_swap_group

glXJoinSwapGroupSGIX = Function('glXJoinSwapGroupSGIX')
glXJoinSwapGroupSGIX.ret = Return('void')
glXJoinSwapGroupSGIX.add( Input( 'dpy','Display *' ))
glXJoinSwapGroupSGIX.add( Input( 'drawable','GLXDrawable' ))
glXJoinSwapGroupSGIX.add( Input( 'member','GLXDrawable' ))
glXJoinSwapGroupSGIX.version = ''
glXJoinSwapGroupSGIX.category = 'GLX_SGIX_swap_group'
glXJoinSwapGroupSGIX.trace = True
glXJoinSwapGroupSGIX.play = True
glx.add(glXJoinSwapGroupSGIX)

# GLX_SGIX_video_resize

glXBindChannelToWindowSGIX = Function('glXBindChannelToWindowSGIX')
glXBindChannelToWindowSGIX.ret = Return('int')
glXBindChannelToWindowSGIX.add( Input( 'display','Display *' ))
glXBindChannelToWindowSGIX.add( Input( 'screen','int' ))
glXBindChannelToWindowSGIX.add( Input( 'channel','int' ))
glXBindChannelToWindowSGIX.add( Input( 'window','Window' ))
glXBindChannelToWindowSGIX.version = ''
glXBindChannelToWindowSGIX.category = 'GLX_SGIX_video_resize'
glXBindChannelToWindowSGIX.trace = True
glXBindChannelToWindowSGIX.play = True
glx.add(glXBindChannelToWindowSGIX)

glXChannelRectSGIX = Function('glXChannelRectSGIX')
glXChannelRectSGIX.ret = Return('int')
glXChannelRectSGIX.add( Input( 'display','Display *' ))
glXChannelRectSGIX.add( Input( 'screen','int' ))
glXChannelRectSGIX.add( Input( 'channel','int' ))
glXChannelRectSGIX.add( Input( 'x','int' ))
glXChannelRectSGIX.add( Input( 'y','int' ))
glXChannelRectSGIX.add( Input( 'w','int' ))
glXChannelRectSGIX.add( Input( 'h','int' ))
glXChannelRectSGIX.version = ''
glXChannelRectSGIX.category = 'GLX_SGIX_video_resize'
glXChannelRectSGIX.trace = True
glXChannelRectSGIX.play = True
glx.add(glXChannelRectSGIX)

glXChannelRectSyncSGIX = Function('glXChannelRectSyncSGIX')
glXChannelRectSyncSGIX.ret = Return('int')
glXChannelRectSyncSGIX.add( Input( 'display','Display *' ))
glXChannelRectSyncSGIX.add( Input( 'screen','int' ))
glXChannelRectSyncSGIX.add( Input( 'channel','int' ))
glXChannelRectSyncSGIX.add( Input( 'synctype','GLenum' ))
glXChannelRectSyncSGIX.version = ''
glXChannelRectSyncSGIX.category = 'GLX_SGIX_video_resize'
glXChannelRectSyncSGIX.trace = True
glXChannelRectSyncSGIX.play = True
glx.add(glXChannelRectSyncSGIX)

glXQueryChannelDeltasSGIX = Function('glXQueryChannelDeltasSGIX')
glXQueryChannelDeltasSGIX.ret = Return('int')
glXQueryChannelDeltasSGIX.add( Input( 'display','Display *' ))
glXQueryChannelDeltasSGIX.add( Input( 'screen','int' ))
glXQueryChannelDeltasSGIX.add( Input( 'channel','int' ))
glXQueryChannelDeltasSGIX.add( Input( 'x','int *' ,size = 1 ))
glXQueryChannelDeltasSGIX.add( Input( 'y','int *' ,size = 1 ))
glXQueryChannelDeltasSGIX.add( Input( 'w','int *' ,size = 1 ))
glXQueryChannelDeltasSGIX.add( Input( 'h','int *' ,size = 1 ))
glXQueryChannelDeltasSGIX.version = ''
glXQueryChannelDeltasSGIX.category = 'GLX_SGIX_video_resize'
glXQueryChannelDeltasSGIX.trace = True
glXQueryChannelDeltasSGIX.play = False
glx.add(glXQueryChannelDeltasSGIX)

glXQueryChannelRectSGIX = Function('glXQueryChannelRectSGIX')
glXQueryChannelRectSGIX.ret = Return('int')
glXQueryChannelRectSGIX.add( Input( 'display','Display *' ))
glXQueryChannelRectSGIX.add( Input( 'screen','int' ))
glXQueryChannelRectSGIX.add( Input( 'channel','int' ))
glXQueryChannelRectSGIX.add( Input( 'dx','int *' ,size = 1 ))
glXQueryChannelRectSGIX.add( Input( 'dy','int *' ,size = 1 ))
glXQueryChannelRectSGIX.add( Input( 'dw','int *' ,size = 1 ))
glXQueryChannelRectSGIX.add( Input( 'dh','int *' ,size = 1 ))
glXQueryChannelRectSGIX.version = ''
glXQueryChannelRectSGIX.category = 'GLX_SGIX_video_resize'
glXQueryChannelRectSGIX.trace = True
glXQueryChannelRectSGIX.play = False
glx.add(glXQueryChannelRectSGIX)

# GLX_SGI_cushion

glXCushionSGI = Function('glXCushionSGI')
glXCushionSGI.ret = Return('void')
glXCushionSGI.add( Input( 'dpy','Display *' ))
glXCushionSGI.add( Input( 'window','Window' ))
glXCushionSGI.add( Input( 'cushion','float' ))
glXCushionSGI.version = ''
glXCushionSGI.category = 'GLX_SGI_cushion'
glXCushionSGI.trace = True
glXCushionSGI.play = True
glx.add(glXCushionSGI)

# GLX_SGI_make_current_read

glXGetCurrentReadDrawableSGI = Function('glXGetCurrentReadDrawableSGI')
glXGetCurrentReadDrawableSGI.ret = Return('GLXDrawable')
glXGetCurrentReadDrawableSGI.version = ''
glXGetCurrentReadDrawableSGI.category = 'GLX_SGI_make_current_read'
glXGetCurrentReadDrawableSGI.trace = True
glXGetCurrentReadDrawableSGI.play = True
glx.add(glXGetCurrentReadDrawableSGI)

glXMakeCurrentReadSGI = Function('glXMakeCurrentReadSGI')
glXMakeCurrentReadSGI.ret = Return('Bool')
glXMakeCurrentReadSGI.add( Input( 'dpy','Display *' ))
glXMakeCurrentReadSGI.add( Input( 'draw','GLXDrawable' ))
glXMakeCurrentReadSGI.add( Input( 'read','GLXDrawable' ))
glXMakeCurrentReadSGI.add( Input( 'ctx','GLXContext' ))
glXMakeCurrentReadSGI.version = ''
glXMakeCurrentReadSGI.category = 'GLX_SGI_make_current_read'
glXMakeCurrentReadSGI.trace = True
glXMakeCurrentReadSGI.play = True
glx.add(glXMakeCurrentReadSGI)

# GLX_SGI_swap_control

glXSwapIntervalSGI = Function('glXSwapIntervalSGI')
glXSwapIntervalSGI.ret = Return('int')
glXSwapIntervalSGI.add( Input( 'interval','int' ))
glXSwapIntervalSGI.version = ''
glXSwapIntervalSGI.category = 'GLX_SGI_swap_control'
glXSwapIntervalSGI.trace = True
glXSwapIntervalSGI.play = True
glx.add(glXSwapIntervalSGI)

# GLX_SGI_video_sync

glXGetVideoSyncSGI = Function('glXGetVideoSyncSGI')
glXGetVideoSyncSGI.ret = Return('int')
glXGetVideoSyncSGI.add( Output( 'count','unsigned int *' ,size = 1 ))
glXGetVideoSyncSGI.version = ''
glXGetVideoSyncSGI.category = 'GLX_SGI_video_sync'
glXGetVideoSyncSGI.trace = True
glXGetVideoSyncSGI.play = True
glx.add(glXGetVideoSyncSGI)

glXWaitVideoSyncSGI = Function('glXWaitVideoSyncSGI')
glXWaitVideoSyncSGI.ret = Return('int')
glXWaitVideoSyncSGI.add( Input( 'divisor','int' ))
glXWaitVideoSyncSGI.add( Input( 'remainder','int' ))
glXWaitVideoSyncSGI.add( Output( 'count','unsigned int *' ,size = 1 ))
glXWaitVideoSyncSGI.version = ''
glXWaitVideoSyncSGI.category = 'GLX_SGI_video_sync'
glXWaitVideoSyncSGI.trace = True
glXWaitVideoSyncSGI.play = True
glx.add(glXWaitVideoSyncSGI)

# GLX_SUN_get_transparent_index

glXGetTransparentIndexSUN = Function('glXGetTransparentIndexSUN')
glXGetTransparentIndexSUN.ret = Return('Status')
glXGetTransparentIndexSUN.add( Input( 'dpy','Display *' ))
glXGetTransparentIndexSUN.add( Input( 'overlay','Window' ))
glXGetTransparentIndexSUN.add( Input( 'underlay','Window' ))
glXGetTransparentIndexSUN.add( Input( 'pTransparentIndex','unsigned long *' ,size = 1 ))
glXGetTransparentIndexSUN.version = ''
glXGetTransparentIndexSUN.category = 'GLX_SUN_get_transparent_index'
glXGetTransparentIndexSUN.trace = True
glXGetTransparentIndexSUN.play = False
glx.add(glXGetTransparentIndexSUN)

# GLX_SUN_video_resize

glXGetVideoResizeSUN = Function('glXGetVideoResizeSUN')
glXGetVideoResizeSUN.ret = Return('int')
glXGetVideoResizeSUN.add( Input( 'display','Display *' ))
glXGetVideoResizeSUN.add( Input( 'window','GLXDrawable' ))
glXGetVideoResizeSUN.add( Output( 'factor','float *' ,size = 1 ))
glXGetVideoResizeSUN.version = ''
glXGetVideoResizeSUN.category = 'GLX_SUN_video_resize'
glXGetVideoResizeSUN.trace = True
glXGetVideoResizeSUN.play = True
glx.add(glXGetVideoResizeSUN)

glXVideoResizeSUN = Function('glXVideoResizeSUN')
glXVideoResizeSUN.ret = Return('int')
glXVideoResizeSUN.add( Input( 'display','Display *' ))
glXVideoResizeSUN.add( Input( 'window','GLXDrawable' ))
glXVideoResizeSUN.add( Input( 'factor','float' ))
glXVideoResizeSUN.version = ''
glXVideoResizeSUN.category = 'GLX_SUN_video_resize'
glXVideoResizeSUN.trace = True
glXVideoResizeSUN.play = True
glx.add(glXVideoResizeSUN)

# GLX_VERSION_1_0

glXChooseVisual = Function('glXChooseVisual')
glXChooseVisual.ret = Return('XVisualInfo *')
glXChooseVisual.add( Input( 'dpy','Display *' ))
glXChooseVisual.add( Input( 'screen','int' ))
glXChooseVisual.add( Input( 'attribList','int *' ))
glXChooseVisual.version = '1.0'
glXChooseVisual.category = 'GLX_VERSION_1_0'
glXChooseVisual.trace = True
glXChooseVisual.play = True
glx.add(glXChooseVisual)

glXCopyContext = Function('glXCopyContext')
glXCopyContext.ret = Return('void')
glXCopyContext.add( Input( 'dpy','Display *' ))
glXCopyContext.add( Input( 'src','GLXContext' ))
glXCopyContext.add( Input( 'dst','GLXContext' ))
glXCopyContext.add( Input( 'mask','unsigned long' ))
glXCopyContext.version = '1.0'
glXCopyContext.category = 'GLX_VERSION_1_0'
glXCopyContext.trace = True
glXCopyContext.play = True
glx.add(glXCopyContext)

glXCreateContext = Function('glXCreateContext')
glXCreateContext.ret = Return('GLXContext')
glXCreateContext.add( Input( 'dpy','Display *' ))
glXCreateContext.add( Input( 'vis','XVisualInfo *' ))
glXCreateContext.add( Input( 'shareList','GLXContext' ))
glXCreateContext.add( Input( 'direct','Bool' ))
glXCreateContext.version = '1.0'
glXCreateContext.category = 'GLX_VERSION_1_0'
glXCreateContext.trace = True
glXCreateContext.play = True
glx.add(glXCreateContext)

glXCreateGLXPixmap = Function('glXCreateGLXPixmap')
glXCreateGLXPixmap.ret = Return('GLXPixmap')
glXCreateGLXPixmap.add( Input( 'dpy','Display *' ))
glXCreateGLXPixmap.add( Input( 'vis','XVisualInfo *' ))
glXCreateGLXPixmap.add( Input( 'pixmap','Pixmap' ))
glXCreateGLXPixmap.version = '1.0'
glXCreateGLXPixmap.category = 'GLX_VERSION_1_0'
glXCreateGLXPixmap.trace = True
glXCreateGLXPixmap.play = True
glx.add(glXCreateGLXPixmap)

glXDestroyContext = Function('glXDestroyContext')
glXDestroyContext.ret = Return('void')
glXDestroyContext.add( Input( 'dpy','Display *' ))
glXDestroyContext.add( Input( 'ctx','GLXContext' ))
glXDestroyContext.version = '1.0'
glXDestroyContext.category = 'GLX_VERSION_1_0'
glXDestroyContext.trace = True
glXDestroyContext.play = True
glx.add(glXDestroyContext)

glXDestroyGLXPixmap = Function('glXDestroyGLXPixmap')
glXDestroyGLXPixmap.ret = Return('void')
glXDestroyGLXPixmap.add( Input( 'dpy','Display *' ))
glXDestroyGLXPixmap.add( Input( 'pix','GLXPixmap' ))
glXDestroyGLXPixmap.version = '1.0'
glXDestroyGLXPixmap.category = 'GLX_VERSION_1_0'
glXDestroyGLXPixmap.trace = True
glXDestroyGLXPixmap.play = True
glx.add(glXDestroyGLXPixmap)

glXGetConfig = Function('glXGetConfig')
glXGetConfig.ret = Return('int')
glXGetConfig.add( Input( 'dpy','Display *' ))
glXGetConfig.add( Input( 'vis','XVisualInfo *' ))
glXGetConfig.add( Input( 'attrib','int' ))
glXGetConfig.add( Output( 'value','int *' ))
glXGetConfig.version = '1.0'
glXGetConfig.category = 'GLX_VERSION_1_0'
glXGetConfig.trace = True
glXGetConfig.play = True
glx.add(glXGetConfig)

glXGetCurrentContext = Function('glXGetCurrentContext')
glXGetCurrentContext.ret = Return('GLXContext')
glXGetCurrentContext.version = '1.0'
glXGetCurrentContext.category = 'GLX_VERSION_1_0'
glXGetCurrentContext.trace = True
glXGetCurrentContext.play = True
glx.add(glXGetCurrentContext)

glXGetCurrentDrawable = Function('glXGetCurrentDrawable')
glXGetCurrentDrawable.ret = Return('GLXDrawable')
glXGetCurrentDrawable.version = '1.0'
glXGetCurrentDrawable.category = 'GLX_VERSION_1_0'
glXGetCurrentDrawable.trace = True
glXGetCurrentDrawable.play = True
glx.add(glXGetCurrentDrawable)

glXIsDirect = Function('glXIsDirect')
glXIsDirect.ret = Return('Bool')
glXIsDirect.add( Input( 'dpy','Display *' ))
glXIsDirect.add( Input( 'ctx','GLXContext' ))
glXIsDirect.version = '1.0'
glXIsDirect.category = 'GLX_VERSION_1_0'
glXIsDirect.trace = True
glXIsDirect.play = True
glx.add(glXIsDirect)

glXMakeCurrent = Function('glXMakeCurrent')
glXMakeCurrent.ret = Return('Bool')
glXMakeCurrent.add( Input( 'dpy','Display *' ))
glXMakeCurrent.add( Input( 'drawable','GLXDrawable' ))
glXMakeCurrent.add( Input( 'ctx','GLXContext' ))
glXMakeCurrent.version = '1.0'
glXMakeCurrent.category = 'GLX_VERSION_1_0'
glXMakeCurrent.trace = True
glXMakeCurrent.play = True
glx.add(glXMakeCurrent)

glXQueryExtension = Function('glXQueryExtension')
glXQueryExtension.ret = Return('Bool')
glXQueryExtension.add( Input( 'dpy','Display *' ))
glXQueryExtension.add( Output( 'errorBase','int *' ))
glXQueryExtension.add( Output( 'eventBase','int *' ))
glXQueryExtension.version = '1.0'
glXQueryExtension.category = 'GLX_VERSION_1_0'
glXQueryExtension.trace = True
glXQueryExtension.play = True
glx.add(glXQueryExtension)

glXQueryVersion = Function('glXQueryVersion')
glXQueryVersion.ret = Return('Bool')
glXQueryVersion.add( Input( 'dpy','Display *' ))
glXQueryVersion.add( Output( 'major','int *' ))
glXQueryVersion.add( Output( 'minor','int *' ))
glXQueryVersion.version = '1.0'
glXQueryVersion.category = 'GLX_VERSION_1_0'
glXQueryVersion.trace = True
glXQueryVersion.play = True
glx.add(glXQueryVersion)

glXSwapBuffers = Function('glXSwapBuffers')
glXSwapBuffers.ret = Return('void')
glXSwapBuffers.add( Input( 'dpy','Display *' ))
glXSwapBuffers.add( Input( 'drawable','GLXDrawable' ))
glXSwapBuffers.version = '1.0'
glXSwapBuffers.category = 'GLX_VERSION_1_0'
glXSwapBuffers.trace = True
glXSwapBuffers.play = True
glx.add(glXSwapBuffers)

glXUseXFont = Function('glXUseXFont')
glXUseXFont.ret = Return('void')
glXUseXFont.add( Input( 'font','Font' ))
glXUseXFont.add( Input( 'first','int' ))
glXUseXFont.add( Input( 'count','int' ))
glXUseXFont.add( Input( 'listBase','int' ))
glXUseXFont.version = '1.0'
glXUseXFont.category = 'GLX_VERSION_1_0'
glXUseXFont.trace = True
glXUseXFont.play = True
glx.add(glXUseXFont)

glXWaitGL = Function('glXWaitGL')
glXWaitGL.ret = Return('void')
glXWaitGL.version = '1.0'
glXWaitGL.category = 'GLX_VERSION_1_0'
glXWaitGL.trace = True
glXWaitGL.play = True
glx.add(glXWaitGL)

glXWaitX = Function('glXWaitX')
glXWaitX.ret = Return('void')
glXWaitX.version = '1.0'
glXWaitX.category = 'GLX_VERSION_1_0'
glXWaitX.trace = True
glXWaitX.play = True
glx.add(glXWaitX)

# GLX_VERSION_1_1

glXGetClientString = Function('glXGetClientString')
glXGetClientString.ret = Return('const char *')
glXGetClientString.add( Input( 'dpy','Display *' ))
glXGetClientString.add( Input( 'name','int' ))
glXGetClientString.version = '1.1'
glXGetClientString.category = 'GLX_VERSION_1_1'
glXGetClientString.trace = True
glXGetClientString.play = True
glx.add(glXGetClientString)

glXQueryExtensionsString = Function('glXQueryExtensionsString')
glXQueryExtensionsString.ret = Return('const char *')
glXQueryExtensionsString.add( Input( 'dpy','Display *' ))
glXQueryExtensionsString.add( Input( 'screen','int' ))
glXQueryExtensionsString.version = '1.1'
glXQueryExtensionsString.category = 'GLX_VERSION_1_1'
glXQueryExtensionsString.trace = True
glXQueryExtensionsString.play = True
glx.add(glXQueryExtensionsString)

glXQueryServerString = Function('glXQueryServerString')
glXQueryServerString.ret = Return('const char *')
glXQueryServerString.add( Input( 'dpy','Display *' ))
glXQueryServerString.add( Input( 'screen','int' ))
glXQueryServerString.add( Input( 'name','int' ))
glXQueryServerString.version = '1.1'
glXQueryServerString.category = 'GLX_VERSION_1_1'
glXQueryServerString.trace = True
glXQueryServerString.play = True
glx.add(glXQueryServerString)

# GLX_VERSION_1_2

glXGetCurrentDisplay = Function('glXGetCurrentDisplay')
glXGetCurrentDisplay.ret = Return('Display *')
glXGetCurrentDisplay.version = '1.2'
glXGetCurrentDisplay.category = 'GLX_VERSION_1_2'
glXGetCurrentDisplay.trace = True
glXGetCurrentDisplay.play = True
glx.add(glXGetCurrentDisplay)

# GLX_VERSION_1_3

glXChooseFBConfig = Function('glXChooseFBConfig')
glXChooseFBConfig.ret = Return('GLXFBConfig *')
glXChooseFBConfig.add( Input( 'dpy','Display *' ))
glXChooseFBConfig.add( Input( 'screen','int' ))
glXChooseFBConfig.add( Input( 'attrib_list','const int *' ))
glXChooseFBConfig.add( Output( 'nelements','int *' ,size = 1 ))
glXChooseFBConfig.version = '1.3'
glXChooseFBConfig.category = 'GLX_VERSION_1_3'
glXChooseFBConfig.trace = True
glXChooseFBConfig.play = True
glx.add(glXChooseFBConfig)

glXCreateNewContext = Function('glXCreateNewContext')
glXCreateNewContext.ret = Return('GLXContext')
glXCreateNewContext.add( Input( 'dpy','Display *' ))
glXCreateNewContext.add( Input( 'config','GLXFBConfig' ))
glXCreateNewContext.add( Input( 'render_type','int' ))
glXCreateNewContext.add( Input( 'share_list','GLXContext' ))
glXCreateNewContext.add( Input( 'direct','Bool' ))
glXCreateNewContext.version = '1.3'
glXCreateNewContext.category = 'GLX_VERSION_1_3'
glXCreateNewContext.trace = True
glXCreateNewContext.play = True
glx.add(glXCreateNewContext)

glXCreatePbuffer = Function('glXCreatePbuffer')
glXCreatePbuffer.ret = Return('GLXPbuffer')
glXCreatePbuffer.add( Input( 'dpy','Display *' ))
glXCreatePbuffer.add( Input( 'config','GLXFBConfig' ))
glXCreatePbuffer.add( Input( 'attrib_list','const int *' ))
glXCreatePbuffer.version = '1.3'
glXCreatePbuffer.category = 'GLX_VERSION_1_3'
glXCreatePbuffer.trace = True
glXCreatePbuffer.play = True
glx.add(glXCreatePbuffer)

glXCreatePixmap = Function('glXCreatePixmap')
glXCreatePixmap.ret = Return('GLXPixmap')
glXCreatePixmap.add( Input( 'dpy','Display *' ))
glXCreatePixmap.add( Input( 'config','GLXFBConfig' ))
glXCreatePixmap.add( Input( 'pixmap','Pixmap' ))
glXCreatePixmap.add( Input( 'attrib_list','const int *' ))
glXCreatePixmap.version = '1.3'
glXCreatePixmap.category = 'GLX_VERSION_1_3'
glXCreatePixmap.trace = True
glXCreatePixmap.play = True
glx.add(glXCreatePixmap)

glXCreateWindow = Function('glXCreateWindow')
glXCreateWindow.ret = Return('GLXWindow')
glXCreateWindow.add( Input( 'dpy','Display *' ))
glXCreateWindow.add( Input( 'config','GLXFBConfig' ))
glXCreateWindow.add( Input( 'win','Window' ))
glXCreateWindow.add( Input( 'attrib_list','const int *' ))
glXCreateWindow.version = '1.3'
glXCreateWindow.category = 'GLX_VERSION_1_3'
glXCreateWindow.trace = True
glXCreateWindow.play = True
glx.add(glXCreateWindow)

glXDestroyPbuffer = Function('glXDestroyPbuffer')
glXDestroyPbuffer.ret = Return('void')
glXDestroyPbuffer.add( Input( 'dpy','Display *' ))
glXDestroyPbuffer.add( Input( 'pbuf','GLXPbuffer' ))
glXDestroyPbuffer.version = '1.3'
glXDestroyPbuffer.category = 'GLX_VERSION_1_3'
glXDestroyPbuffer.trace = True
glXDestroyPbuffer.play = True
glx.add(glXDestroyPbuffer)

glXDestroyPixmap = Function('glXDestroyPixmap')
glXDestroyPixmap.ret = Return('void')
glXDestroyPixmap.add( Input( 'dpy','Display *' ))
glXDestroyPixmap.add( Input( 'pixmap','GLXPixmap' ))
glXDestroyPixmap.version = '1.3'
glXDestroyPixmap.category = 'GLX_VERSION_1_3'
glXDestroyPixmap.trace = True
glXDestroyPixmap.play = True
glx.add(glXDestroyPixmap)

glXDestroyWindow = Function('glXDestroyWindow')
glXDestroyWindow.ret = Return('void')
glXDestroyWindow.add( Input( 'dpy','Display *' ))
glXDestroyWindow.add( Input( 'win','GLXWindow' ))
glXDestroyWindow.version = '1.3'
glXDestroyWindow.category = 'GLX_VERSION_1_3'
glXDestroyWindow.trace = True
glXDestroyWindow.play = True
glx.add(glXDestroyWindow)

glXGetCurrentReadDrawable = Function('glXGetCurrentReadDrawable')
glXGetCurrentReadDrawable.ret = Return('GLXDrawable')
glXGetCurrentReadDrawable.version = '1.3'
glXGetCurrentReadDrawable.category = 'GLX_VERSION_1_3'
glXGetCurrentReadDrawable.trace = True
glXGetCurrentReadDrawable.play = True
glx.add(glXGetCurrentReadDrawable)

glXGetFBConfigAttrib = Function('glXGetFBConfigAttrib')
glXGetFBConfigAttrib.ret = Return('int')
glXGetFBConfigAttrib.add( Input( 'dpy','Display *' ))
glXGetFBConfigAttrib.add( Input( 'config','GLXFBConfig' ))
glXGetFBConfigAttrib.add( Input( 'attribute','int' ))
glXGetFBConfigAttrib.add( Output( 'value','int *' ,size = 1 ))
glXGetFBConfigAttrib.version = '1.3'
glXGetFBConfigAttrib.category = 'GLX_VERSION_1_3'
glXGetFBConfigAttrib.trace = True
glXGetFBConfigAttrib.play = True
glx.add(glXGetFBConfigAttrib)

glXGetFBConfigs = Function('glXGetFBConfigs')
glXGetFBConfigs.ret = Return('GLXFBConfig *')
glXGetFBConfigs.add( Input( 'dpy','Display *' ))
glXGetFBConfigs.add( Input( 'screen','int' ))
glXGetFBConfigs.add( Output( 'nelements','int *' ,size = 1 ))
glXGetFBConfigs.version = '1.3'
glXGetFBConfigs.category = 'GLX_VERSION_1_3'
glXGetFBConfigs.trace = True
glXGetFBConfigs.play = True
glx.add(glXGetFBConfigs)

glXGetSelectedEvent = Function('glXGetSelectedEvent')
glXGetSelectedEvent.ret = Return('void')
glXGetSelectedEvent.add( Input( 'dpy','Display *' ))
glXGetSelectedEvent.add( Input( 'draw','GLXDrawable' ))
glXGetSelectedEvent.add( Output( 'event_mask','unsigned long *' ,size = 1 ))
glXGetSelectedEvent.version = '1.3'
glXGetSelectedEvent.category = 'GLX_VERSION_1_3'
glXGetSelectedEvent.trace = True
glXGetSelectedEvent.play = True
glx.add(glXGetSelectedEvent)

glXGetVisualFromFBConfig = Function('glXGetVisualFromFBConfig')
glXGetVisualFromFBConfig.ret = Return('XVisualInfo *')
glXGetVisualFromFBConfig.add( Input( 'dpy','Display *' ))
glXGetVisualFromFBConfig.add( Input( 'config','GLXFBConfig' ))
glXGetVisualFromFBConfig.version = '1.3'
glXGetVisualFromFBConfig.category = 'GLX_VERSION_1_3'
glXGetVisualFromFBConfig.trace = True
glXGetVisualFromFBConfig.play = True
glx.add(glXGetVisualFromFBConfig)

glXMakeContextCurrent = Function('glXMakeContextCurrent')
glXMakeContextCurrent.ret = Return('Bool')
glXMakeContextCurrent.add( Input( 'display','Display *' ))
glXMakeContextCurrent.add( Input( 'draw','GLXDrawable' ))
glXMakeContextCurrent.add( Input( 'read','GLXDrawable' ))
glXMakeContextCurrent.add( Input( 'ctx','GLXContext' ))
glXMakeContextCurrent.version = '1.3'
glXMakeContextCurrent.category = 'GLX_VERSION_1_3'
glXMakeContextCurrent.trace = True
glXMakeContextCurrent.play = True
glx.add(glXMakeContextCurrent)

glXQueryContext = Function('glXQueryContext')
glXQueryContext.ret = Return('int')
glXQueryContext.add( Input( 'dpy','Display *' ))
glXQueryContext.add( Input( 'ctx','GLXContext' ))
glXQueryContext.add( Input( 'attribute','int' ,regalLog = 'GLXenumToString(attribute)' ))
glXQueryContext.add( Output( 'value','int *' ,size = 1 ))
glXQueryContext.version = '1.3'
glXQueryContext.category = 'GLX_VERSION_1_3'
glXQueryContext.trace = True
glXQueryContext.play = True
glx.add(glXQueryContext)

glXQueryDrawable = Function('glXQueryDrawable')
glXQueryDrawable.ret = Return('void')
glXQueryDrawable.add( Input( 'dpy','Display *' ))
glXQueryDrawable.add( Input( 'draw','GLXDrawable' ))
glXQueryDrawable.add( Input( 'attribute','int' ))
glXQueryDrawable.add( Output( 'value','unsigned int *' ,size = 1 ))
glXQueryDrawable.version = '1.3'
glXQueryDrawable.category = 'GLX_VERSION_1_3'
glXQueryDrawable.trace = True
glXQueryDrawable.play = True
glx.add(glXQueryDrawable)

glXSelectEvent = Function('glXSelectEvent')
glXSelectEvent.ret = Return('void')
glXSelectEvent.add( Input( 'dpy','Display *' ))
glXSelectEvent.add( Input( 'draw','GLXDrawable' ))
glXSelectEvent.add( Input( 'event_mask','unsigned long' ))
glXSelectEvent.version = '1.3'
glXSelectEvent.category = 'GLX_VERSION_1_3'
glXSelectEvent.trace = True
glXSelectEvent.play = True
glx.add(glXSelectEvent)

# GLX_VERSION_1_4

glXGetProcAddress = Function('glXGetProcAddress')
glXGetProcAddress.ret = Return('__GLXextFuncPtr')
glXGetProcAddress.add( Input( 'procName','const GLubyte *' ,cast = 'const char *' ))
glXGetProcAddress.version = '1.4'
glXGetProcAddress.category = 'GLX_VERSION_1_4'
glXGetProcAddress.trace = True
glXGetProcAddress.play = True
glx.add(glXGetProcAddress)

