/* NOTE: Do not edit this file, it is generated by a script:
   Export.py --api gl 4.2 --api wgl 4.0 --api glx 4.0 --api cgl 1.4 --api egl 1.0 --outdir .
*/

/*
  Copyright (c) 2011 NVIDIA Corporation
  Copyright (c) 2011-2012 Cass Everitt
  Copyright (c) 2012 Scott Nations
  Copyright (c) 2012 Mathias Schott
  Copyright (c) 2012 Nigel Stewart
  Copyright (c) 2012 Google Inc.
  All rights reserved.

  Redistribution and use in source and binary forms, with or without modification,
  are permitted provided that the following conditions are met:

    Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.

    Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
  OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
  OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/*
  Intended formatting conventions:
  $ astyle --style=allman --indent=spaces=2 --indent-switches
*/

#include "pch.h" /* For MS precompiled header support */

#include "RegalUtil.h"

REGAL_GLOBAL_BEGIN

#include "RegalPrivate.h"
#include "RegalToken.h"

#include <boost/print/string_list.hpp>
#include <boost/print/print_string.hpp>

using namespace ::boost::print;

REGAL_GLOBAL_END

REGAL_NAMESPACE_BEGIN

namespace Token {

  const char * GLbooleanToString(GLboolean v)
  {
    return v==GL_FALSE ? "GL_FALSE" : "GL_TRUE";
  }

  const char * internalFormatToString(GLint v)
  {
    const char *integer[5] = { "", "1", "2", "3", "4" };
    return 1<=v && v<=4 ? integer[v] : GLenumToString(v);
  }

  std::string GLclearToString(GLbitfield v)
  {
    const GLbitfield other = v & ~(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT | GL_STENCIL_BUFFER_BIT);

    string_list<std::string> tmp;
    if (v & GL_COLOR_BUFFER_BIT)   { if (tmp.size()) tmp += " | "; tmp += "GL_COLOR_BUFFER_BIT"; }
    if (v & GL_DEPTH_BUFFER_BIT)   { if (tmp.size()) tmp += " | "; tmp += "GL_DEPTH_BUFFER_BIT"; }
    if (v & GL_STENCIL_BUFFER_BIT) { if (tmp.size()) tmp += " | "; tmp += "GL_STENCIL_BUFFER_BIT"; }
    if (other || v==0)             { if (tmp.size()) tmp += " | "; tmp += size_t(other); }

    return tmp.str();
  }

  std::string GLTexParameterToString(GLenum pname, const GLfloat param)
  {
    switch (pname)
    {
      case GL_DEPTH_STENCIL_TEXTURE_MODE:
      case GL_TEXTURE_COMPARE_FUNC:
      case GL_TEXTURE_COMPARE_MODE:
      case GL_TEXTURE_MIN_FILTER:
      case GL_TEXTURE_MAG_FILTER:
      case GL_TEXTURE_SWIZZLE_R:
      case GL_TEXTURE_SWIZZLE_G:
      case GL_TEXTURE_SWIZZLE_B:
      case GL_TEXTURE_SWIZZLE_A:
      case GL_TEXTURE_WRAP_S:
      case GL_TEXTURE_WRAP_T:
      case GL_TEXTURE_WRAP_R:
        return GLenumToString(static_cast<GLenum>(param));

      default:
        return print_string(param);
    }
  }

  std::string GLTexParameterToString(GLenum pname, const GLint param)
  {
    switch (pname)
    {
      case GL_DEPTH_STENCIL_TEXTURE_MODE:
      case GL_TEXTURE_COMPARE_FUNC:
      case GL_TEXTURE_COMPARE_MODE:
      case GL_TEXTURE_MIN_FILTER:
      case GL_TEXTURE_MAG_FILTER:
      case GL_TEXTURE_SWIZZLE_R:
      case GL_TEXTURE_SWIZZLE_G:
      case GL_TEXTURE_SWIZZLE_B:
      case GL_TEXTURE_SWIZZLE_A:
      case GL_TEXTURE_WRAP_S:
      case GL_TEXTURE_WRAP_T:
      case GL_TEXTURE_WRAP_R:
        return GLenumToString(static_cast<GLenum>(param));

      default:
        return print_string(param);
    }
  }

  std::string GLTexParameterToString(GLenum pname, const GLfloat *params)
  {
    switch (pname)
    {
      case GL_DEPTH_STENCIL_TEXTURE_MODE:
      case GL_TEXTURE_COMPARE_FUNC:
      case GL_TEXTURE_COMPARE_MODE:
      case GL_TEXTURE_MIN_FILTER:
      case GL_TEXTURE_MAG_FILTER:
      case GL_TEXTURE_SWIZZLE_R:
      case GL_TEXTURE_SWIZZLE_G:
      case GL_TEXTURE_SWIZZLE_B:
      case GL_TEXTURE_SWIZZLE_A:
      case GL_TEXTURE_WRAP_S:
      case GL_TEXTURE_WRAP_T:
      case GL_TEXTURE_WRAP_R:
        return GLenumToString(static_cast<GLenum>(params[0]));

      case GL_TEXTURE_SWIZZLE_RGBA:
        return print_string(
          GLenumToString(static_cast<GLenum>(params[0])), " ",
          GLenumToString(static_cast<GLenum>(params[1])), " ",
          GLenumToString(static_cast<GLenum>(params[2])), " ",
          GLenumToString(static_cast<GLenum>(params[3])));

      default:
        return print_string(params[0]);
    }
  }

  std::string GLTexParameterToString(GLenum pname, const GLint *params)
  {
    switch (pname)
    {
      case GL_DEPTH_STENCIL_TEXTURE_MODE:
      case GL_TEXTURE_COMPARE_FUNC:
      case GL_TEXTURE_COMPARE_MODE:
      case GL_TEXTURE_MIN_FILTER:
      case GL_TEXTURE_MAG_FILTER:
      case GL_TEXTURE_SWIZZLE_R:
      case GL_TEXTURE_SWIZZLE_G:
      case GL_TEXTURE_SWIZZLE_B:
      case GL_TEXTURE_SWIZZLE_A:
      case GL_TEXTURE_WRAP_S:
      case GL_TEXTURE_WRAP_T:
      case GL_TEXTURE_WRAP_R:
        return GLenumToString(static_cast<GLenum>(params[0]));

      case GL_TEXTURE_SWIZZLE_RGBA:
        return print_string(
          GLenumToString(static_cast<GLenum>(params[0])), " ",
          GLenumToString(static_cast<GLenum>(params[1])), " ",
          GLenumToString(static_cast<GLenum>(params[2])), " ",
          GLenumToString(static_cast<GLenum>(params[3])));

      default:
        return print_string(params[0]);
    }
  }

  std::string GLTexParameterToString(GLenum pname, const GLuint *params)
  {
    switch (pname)
    {
      case GL_DEPTH_STENCIL_TEXTURE_MODE:
      case GL_TEXTURE_COMPARE_FUNC:
      case GL_TEXTURE_COMPARE_MODE:
      case GL_TEXTURE_MIN_FILTER:
      case GL_TEXTURE_MAG_FILTER:
      case GL_TEXTURE_SWIZZLE_R:
      case GL_TEXTURE_SWIZZLE_G:
      case GL_TEXTURE_SWIZZLE_B:
      case GL_TEXTURE_SWIZZLE_A:
      case GL_TEXTURE_WRAP_S:
      case GL_TEXTURE_WRAP_T:
      case GL_TEXTURE_WRAP_R:
        return GLenumToString(static_cast<GLenum>(params[0]));

      case GL_TEXTURE_SWIZZLE_RGBA:
        return print_string(
          GLenumToString(static_cast<GLenum>(params[0])), " ",
          GLenumToString(static_cast<GLenum>(params[1])), " ",
          GLenumToString(static_cast<GLenum>(params[2])), " ",
          GLenumToString(static_cast<GLenum>(params[3])));

      default:
        return print_string(params[0]);
    }
  }

  const char * GLenumToString( GLenum e ) {
    switch( e ) {
      case 0x00000000: return "GL_ZERO";
      case 0x00000001: return "GL_ONE";
      case 0x00000002: return "GL_LINE_LOOP";
      case 0x00000003: return "GL_LINE_STRIP";
      case 0x00000004: return "GL_TRIANGLES";
      case 0x00000005: return "GL_TRIANGLE_STRIP";
      case 0x00000006: return "GL_TRIANGLE_FAN";
      case 0x00000007: return "GL_QUADS";
      case 0x00000008: return "GL_QUAD_STRIP";
      case 0x00000009: return "GL_POLYGON";
      case 0x0000000a: return "GL_LINES_ADJACENCY";
      case 0x0000000b: return "GL_LINE_STRIP_ADJACENCY";
      case 0x0000000c: return "GL_TRIANGLES_ADJACENCY";
      case 0x0000000d: return "GL_TRIANGLE_STRIP_ADJACENCY";
      case 0x0000000e: return "GL_PATCHES";
      case 0x0000000f: return "GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV";
      case 0x00000010: return "GL_SMOOTH_CUBIC_CURVE_TO_NV";
      case 0x00000011: return "GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV";
      case 0x00000012: return "GL_SMALL_CCW_ARC_TO_NV";
      case 0x00000013: return "GL_RELATIVE_SMALL_CCW_ARC_TO_NV";
      case 0x00000014: return "GL_SMALL_CW_ARC_TO_NV";
      case 0x00000015: return "GL_RELATIVE_SMALL_CW_ARC_TO_NV";
      case 0x00000016: return "GL_LARGE_CCW_ARC_TO_NV";
      case 0x00000017: return "GL_RELATIVE_LARGE_CCW_ARC_TO_NV";
      case 0x00000018: return "GL_LARGE_CW_ARC_TO_NV";
      case 0x00000019: return "GL_RELATIVE_LARGE_CW_ARC_TO_NV";
      case 0x00000020: return "GL_EIGHTH_BIT_ATI";
      case 0x00000040: return "GL_SATURATE_BIT_ATI";
      case 0x00000080: return "GL_COLOR_BUFFER_BIT7_QCOM";
      case 0x000000f0: return "GL_RESTART_PATH_NV";
      case 0x000000f2: return "GL_DUP_FIRST_CUBIC_CURVE_TO_NV";
      case 0x000000f4: return "GL_DUP_LAST_CUBIC_CURVE_TO_NV";
      case 0x000000f6: return "GL_RECT_NV";
      case 0x000000f8: return "GL_CIRCULAR_CCW_ARC_TO_NV";
      case 0x000000fa: return "GL_CIRCULAR_CW_ARC_TO_NV";
      case 0x000000fc: return "GL_CIRCULAR_TANGENT_ARC_TO_NV";
      case 0x000000fe: return "GL_ARC_TO_NV";
      case 0x000000ff: return "GL_RELATIVE_ARC_TO_NV";
      case 0x00000100: return "GL_ACCUM";
      case 0x00000101: return "GL_LOAD";
      case 0x00000102: return "GL_RETURN";
      case 0x00000103: return "GL_MULT";
      case 0x00000104: return "GL_ADD";
      case 0x00000200: return "GL_NEVER";
      case 0x00000201: return "GL_LESS";
      case 0x00000202: return "GL_EQUAL";
      case 0x00000203: return "GL_LEQUAL";
      case 0x00000204: return "GL_GREATER";
      case 0x00000205: return "GL_NOTEQUAL";
      case 0x00000206: return "GL_GEQUAL";
      case 0x00000207: return "GL_ALWAYS";
      case 0x00000300: return "GL_SRC_COLOR";
      case 0x00000301: return "GL_ONE_MINUS_SRC_COLOR";
      case 0x00000302: return "GL_SRC_ALPHA";
      case 0x00000303: return "GL_ONE_MINUS_SRC_ALPHA";
      case 0x00000304: return "GL_DST_ALPHA";
      case 0x00000305: return "GL_ONE_MINUS_DST_ALPHA";
      case 0x00000306: return "GL_DST_COLOR";
      case 0x00000307: return "GL_ONE_MINUS_DST_COLOR";
      case 0x00000308: return "GL_SRC_ALPHA_SATURATE";
      case 0x00000400: return "GL_FRONT_LEFT";
      case 0x00000401: return "GL_FRONT_RIGHT";
      case 0x00000402: return "GL_BACK_LEFT";
      case 0x00000403: return "GL_BACK_RIGHT";
      case 0x00000404: return "GL_FRONT";
      case 0x00000405: return "GL_BACK";
      case 0x00000406: return "GL_LEFT";
      case 0x00000407: return "GL_RIGHT";
      case 0x00000408: return "GL_FRONT_AND_BACK";
      case 0x00000409: return "GL_AUX0";
      case 0x0000040a: return "GL_AUX1";
      case 0x0000040b: return "GL_AUX2";
      case 0x0000040c: return "GL_AUX3";
      case 0x00000500: return "GL_INVALID_ENUM";
      case 0x00000501: return "GL_INVALID_VALUE";
      case 0x00000502: return "GL_INVALID_OPERATION";
      case 0x00000503: return "GL_STACK_OVERFLOW";
      case 0x00000504: return "GL_STACK_UNDERFLOW";
      case 0x00000505: return "GL_OUT_OF_MEMORY";
      case 0x00000506: return "GL_INVALID_FRAMEBUFFER_OPERATION";
      case 0x00000600: return "GL_2D";
      case 0x00000601: return "GL_3D";
      case 0x00000602: return "GL_3D_COLOR";
      case 0x00000603: return "GL_3D_COLOR_TEXTURE";
      case 0x00000604: return "GL_4D_COLOR_TEXTURE";
      case 0x00000700: return "GL_PASS_THROUGH_TOKEN";
      case 0x00000701: return "GL_POINT_TOKEN";
      case 0x00000702: return "GL_LINE_TOKEN";
      case 0x00000703: return "GL_POLYGON_TOKEN";
      case 0x00000704: return "GL_BITMAP_TOKEN";
      case 0x00000705: return "GL_DRAW_PIXEL_TOKEN";
      case 0x00000706: return "GL_COPY_PIXEL_TOKEN";
      case 0x00000707: return "GL_LINE_RESET_TOKEN";
      case 0x00000800: return "GL_EXP";
      case 0x00000801: return "GL_EXP2";
      case 0x00000898: return "GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES";
      case 0x00000900: return "GL_CW";
      case 0x00000901: return "GL_CCW";
      case 0x00000a00: return "GL_COEFF";
      case 0x00000a01: return "GL_ORDER";
      case 0x00000a02: return "GL_DOMAIN";
      case 0x00000b00: return "GL_CURRENT_COLOR";
      case 0x00000b01: return "GL_CURRENT_INDEX";
      case 0x00000b02: return "GL_CURRENT_NORMAL";
      case 0x00000b03: return "GL_CURRENT_TEXTURE_COORDS";
      case 0x00000b04: return "GL_CURRENT_RASTER_COLOR";
      case 0x00000b05: return "GL_CURRENT_RASTER_INDEX";
      case 0x00000b06: return "GL_CURRENT_RASTER_TEXTURE_COORDS";
      case 0x00000b07: return "GL_CURRENT_RASTER_POSITION";
      case 0x00000b08: return "GL_CURRENT_RASTER_POSITION_VALID";
      case 0x00000b09: return "GL_CURRENT_RASTER_DISTANCE";
      case 0x00000b10: return "GL_POINT_SMOOTH";
      case 0x00000b11: return "GL_POINT_SIZE";
      case 0x00000b12: return "GL_POINT_SIZE_RANGE";
      case 0x00000b13: return "GL_POINT_SIZE_GRANULARITY";
      case 0x00000b20: return "GL_LINE_SMOOTH";
      case 0x00000b21: return "GL_LINE_WIDTH";
      case 0x00000b22: return "GL_LINE_WIDTH_RANGE";
      case 0x00000b23: return "GL_LINE_WIDTH_GRANULARITY";
      case 0x00000b24: return "GL_LINE_STIPPLE";
      case 0x00000b25: return "GL_LINE_STIPPLE_PATTERN";
      case 0x00000b26: return "GL_LINE_STIPPLE_REPEAT";
      case 0x00000b30: return "GL_LIST_MODE";
      case 0x00000b31: return "GL_MAX_LIST_NESTING";
      case 0x00000b32: return "GL_LIST_BASE";
      case 0x00000b33: return "GL_LIST_INDEX";
      case 0x00000b40: return "GL_POLYGON_MODE";
      case 0x00000b41: return "GL_POLYGON_SMOOTH";
      case 0x00000b42: return "GL_POLYGON_STIPPLE";
      case 0x00000b43: return "GL_EDGE_FLAG";
      case 0x00000b44: return "GL_CULL_FACE";
      case 0x00000b45: return "GL_CULL_FACE_MODE";
      case 0x00000b46: return "GL_FRONT_FACE";
      case 0x00000b50: return "GL_LIGHTING";
      case 0x00000b51: return "GL_LIGHT_MODEL_LOCAL_VIEWER";
      case 0x00000b52: return "GL_LIGHT_MODEL_TWO_SIDE";
      case 0x00000b53: return "GL_LIGHT_MODEL_AMBIENT";
      case 0x00000b54: return "GL_SHADE_MODEL";
      case 0x00000b55: return "GL_COLOR_MATERIAL_FACE";
      case 0x00000b56: return "GL_COLOR_MATERIAL_PARAMETER";
      case 0x00000b57: return "GL_COLOR_MATERIAL";
      case 0x00000b60: return "GL_FOG";
      case 0x00000b61: return "GL_FOG_INDEX";
      case 0x00000b62: return "GL_FOG_DENSITY";
      case 0x00000b63: return "GL_FOG_START";
      case 0x00000b64: return "GL_FOG_END";
      case 0x00000b65: return "GL_FOG_MODE";
      case 0x00000b66: return "GL_FOG_COLOR";
      case 0x00000b70: return "GL_DEPTH_RANGE";
      case 0x00000b71: return "GL_DEPTH_TEST";
      case 0x00000b72: return "GL_DEPTH_WRITEMASK";
      case 0x00000b73: return "GL_DEPTH_CLEAR_VALUE";
      case 0x00000b74: return "GL_DEPTH_FUNC";
      case 0x00000b80: return "GL_ACCUM_CLEAR_VALUE";
      case 0x00000b90: return "GL_STENCIL_TEST";
      case 0x00000b91: return "GL_STENCIL_CLEAR_VALUE";
      case 0x00000b92: return "GL_STENCIL_FUNC";
      case 0x00000b93: return "GL_STENCIL_VALUE_MASK";
      case 0x00000b94: return "GL_STENCIL_FAIL";
      case 0x00000b95: return "GL_STENCIL_PASS_DEPTH_FAIL";
      case 0x00000b96: return "GL_STENCIL_PASS_DEPTH_PASS";
      case 0x00000b97: return "GL_STENCIL_REF";
      case 0x00000b98: return "GL_STENCIL_WRITEMASK";
      case 0x00000ba0: return "GL_MATRIX_MODE";
      case 0x00000ba1: return "GL_NORMALIZE";
      case 0x00000ba2: return "GL_VIEWPORT";
      case 0x00000ba3: return "GL_MODELVIEW_STACK_DEPTH";
      case 0x00000ba4: return "GL_PROJECTION_STACK_DEPTH";
      case 0x00000ba5: return "GL_TEXTURE_STACK_DEPTH";
      case 0x00000ba6: return "GL_MODELVIEW_MATRIX";
      case 0x00000ba7: return "GL_PROJECTION_MATRIX";
      case 0x00000ba8: return "GL_TEXTURE_MATRIX";
      case 0x00000bb0: return "GL_ATTRIB_STACK_DEPTH";
      case 0x00000bb1: return "GL_CLIENT_ATTRIB_STACK_DEPTH";
      case 0x00000bc0: return "GL_ALPHA_TEST";
      case 0x00000bc1: return "GL_ALPHA_TEST_FUNC";
      case 0x00000bc2: return "GL_ALPHA_TEST_REF";
      case 0x00000bd0: return "GL_DITHER";
      case 0x00000be0: return "GL_BLEND_DST";
      case 0x00000be1: return "GL_BLEND_SRC";
      case 0x00000be2: return "GL_BLEND";
      case 0x00000bf0: return "GL_LOGIC_OP_MODE";
      case 0x00000bf1: return "GL_INDEX_LOGIC_OP";
      case 0x00000bf2: return "GL_COLOR_LOGIC_OP";
      case 0x00000c00: return "GL_AUX_BUFFERS";
      case 0x00000c01: return "GL_DRAW_BUFFER";
      case 0x00000c02: return "GL_READ_BUFFER";
      case 0x00000c10: return "GL_SCISSOR_BOX";
      case 0x00000c11: return "GL_SCISSOR_TEST";
      case 0x00000c20: return "GL_INDEX_CLEAR_VALUE";
      case 0x00000c21: return "GL_INDEX_WRITEMASK";
      case 0x00000c22: return "GL_COLOR_CLEAR_VALUE";
      case 0x00000c23: return "GL_COLOR_WRITEMASK";
      case 0x00000c30: return "GL_INDEX_MODE";
      case 0x00000c31: return "GL_RGBA_MODE";
      case 0x00000c32: return "GL_DOUBLEBUFFER";
      case 0x00000c33: return "GL_STEREO";
      case 0x00000c40: return "GL_RENDER_MODE";
      case 0x00000c50: return "GL_PERSPECTIVE_CORRECTION_HINT";
      case 0x00000c51: return "GL_POINT_SMOOTH_HINT";
      case 0x00000c52: return "GL_LINE_SMOOTH_HINT";
      case 0x00000c53: return "GL_POLYGON_SMOOTH_HINT";
      case 0x00000c54: return "GL_FOG_HINT";
      case 0x00000c60: return "GL_TEXTURE_GEN_S";
      case 0x00000c61: return "GL_TEXTURE_GEN_T";
      case 0x00000c62: return "GL_TEXTURE_GEN_R";
      case 0x00000c63: return "GL_TEXTURE_GEN_Q";
      case 0x00000c70: return "GL_PIXEL_MAP_I_TO_I";
      case 0x00000c71: return "GL_PIXEL_MAP_S_TO_S";
      case 0x00000c72: return "GL_PIXEL_MAP_I_TO_R";
      case 0x00000c73: return "GL_PIXEL_MAP_I_TO_G";
      case 0x00000c74: return "GL_PIXEL_MAP_I_TO_B";
      case 0x00000c75: return "GL_PIXEL_MAP_I_TO_A";
      case 0x00000c76: return "GL_PIXEL_MAP_R_TO_R";
      case 0x00000c77: return "GL_PIXEL_MAP_G_TO_G";
      case 0x00000c78: return "GL_PIXEL_MAP_B_TO_B";
      case 0x00000c79: return "GL_PIXEL_MAP_A_TO_A";
      case 0x00000cb0: return "GL_PIXEL_MAP_I_TO_I_SIZE";
      case 0x00000cb1: return "GL_PIXEL_MAP_S_TO_S_SIZE";
      case 0x00000cb2: return "GL_PIXEL_MAP_I_TO_R_SIZE";
      case 0x00000cb3: return "GL_PIXEL_MAP_I_TO_G_SIZE";
      case 0x00000cb4: return "GL_PIXEL_MAP_I_TO_B_SIZE";
      case 0x00000cb5: return "GL_PIXEL_MAP_I_TO_A_SIZE";
      case 0x00000cb6: return "GL_PIXEL_MAP_R_TO_R_SIZE";
      case 0x00000cb7: return "GL_PIXEL_MAP_G_TO_G_SIZE";
      case 0x00000cb8: return "GL_PIXEL_MAP_B_TO_B_SIZE";
      case 0x00000cb9: return "GL_PIXEL_MAP_A_TO_A_SIZE";
      case 0x00000cf0: return "GL_UNPACK_SWAP_BYTES";
      case 0x00000cf1: return "GL_UNPACK_LSB_FIRST";
      case 0x00000cf2: return "GL_UNPACK_ROW_LENGTH";
      case 0x00000cf3: return "GL_UNPACK_SKIP_ROWS";
      case 0x00000cf4: return "GL_UNPACK_SKIP_PIXELS";
      case 0x00000cf5: return "GL_UNPACK_ALIGNMENT";
      case 0x00000d00: return "GL_PACK_SWAP_BYTES";
      case 0x00000d01: return "GL_PACK_LSB_FIRST";
      case 0x00000d02: return "GL_PACK_ROW_LENGTH";
      case 0x00000d03: return "GL_PACK_SKIP_ROWS";
      case 0x00000d04: return "GL_PACK_SKIP_PIXELS";
      case 0x00000d05: return "GL_PACK_ALIGNMENT";
      case 0x00000d10: return "GL_MAP_COLOR";
      case 0x00000d11: return "GL_MAP_STENCIL";
      case 0x00000d12: return "GL_INDEX_SHIFT";
      case 0x00000d13: return "GL_INDEX_OFFSET";
      case 0x00000d14: return "GL_RED_SCALE";
      case 0x00000d15: return "GL_RED_BIAS";
      case 0x00000d16: return "GL_ZOOM_X";
      case 0x00000d17: return "GL_ZOOM_Y";
      case 0x00000d18: return "GL_GREEN_SCALE";
      case 0x00000d19: return "GL_GREEN_BIAS";
      case 0x00000d1a: return "GL_BLUE_SCALE";
      case 0x00000d1b: return "GL_BLUE_BIAS";
      case 0x00000d1c: return "GL_ALPHA_SCALE";
      case 0x00000d1d: return "GL_ALPHA_BIAS";
      case 0x00000d1e: return "GL_DEPTH_SCALE";
      case 0x00000d1f: return "GL_DEPTH_BIAS";
      case 0x00000d30: return "GL_MAX_EVAL_ORDER";
      case 0x00000d31: return "GL_MAX_LIGHTS";
      case 0x00000d32: return "GL_MAX_CLIP_PLANES";
      case 0x00000d33: return "GL_MAX_TEXTURE_SIZE";
      case 0x00000d34: return "GL_MAX_PIXEL_MAP_TABLE";
      case 0x00000d35: return "GL_MAX_ATTRIB_STACK_DEPTH";
      case 0x00000d36: return "GL_MAX_MODELVIEW_STACK_DEPTH";
      case 0x00000d37: return "GL_MAX_NAME_STACK_DEPTH";
      case 0x00000d38: return "GL_MAX_PROJECTION_STACK_DEPTH";
      case 0x00000d39: return "GL_MAX_TEXTURE_STACK_DEPTH";
      case 0x00000d3a: return "GL_MAX_VIEWPORT_DIMS";
      case 0x00000d3b: return "GL_MAX_CLIENT_ATTRIB_STACK_DEPTH";
      case 0x00000d50: return "GL_SUBPIXEL_BITS";
      case 0x00000d51: return "GL_INDEX_BITS";
      case 0x00000d52: return "GL_RED_BITS";
      case 0x00000d53: return "GL_GREEN_BITS";
      case 0x00000d54: return "GL_BLUE_BITS";
      case 0x00000d55: return "GL_ALPHA_BITS";
      case 0x00000d56: return "GL_DEPTH_BITS";
      case 0x00000d57: return "GL_STENCIL_BITS";
      case 0x00000d58: return "GL_ACCUM_RED_BITS";
      case 0x00000d59: return "GL_ACCUM_GREEN_BITS";
      case 0x00000d5a: return "GL_ACCUM_BLUE_BITS";
      case 0x00000d5b: return "GL_ACCUM_ALPHA_BITS";
      case 0x00000d70: return "GL_NAME_STACK_DEPTH";
      case 0x00000d80: return "GL_AUTO_NORMAL";
      case 0x00000d90: return "GL_MAP1_COLOR_4";
      case 0x00000d91: return "GL_MAP1_INDEX";
      case 0x00000d92: return "GL_MAP1_NORMAL";
      case 0x00000d93: return "GL_MAP1_TEXTURE_COORD_1";
      case 0x00000d94: return "GL_MAP1_TEXTURE_COORD_2";
      case 0x00000d95: return "GL_MAP1_TEXTURE_COORD_3";
      case 0x00000d96: return "GL_MAP1_TEXTURE_COORD_4";
      case 0x00000d97: return "GL_MAP1_VERTEX_3";
      case 0x00000d98: return "GL_MAP1_VERTEX_4";
      case 0x00000db0: return "GL_MAP2_COLOR_4";
      case 0x00000db1: return "GL_MAP2_INDEX";
      case 0x00000db2: return "GL_MAP2_NORMAL";
      case 0x00000db3: return "GL_MAP2_TEXTURE_COORD_1";
      case 0x00000db4: return "GL_MAP2_TEXTURE_COORD_2";
      case 0x00000db5: return "GL_MAP2_TEXTURE_COORD_3";
      case 0x00000db6: return "GL_MAP2_TEXTURE_COORD_4";
      case 0x00000db7: return "GL_MAP2_VERTEX_3";
      case 0x00000db8: return "GL_MAP2_VERTEX_4";
      case 0x00000dd0: return "GL_MAP1_GRID_DOMAIN";
      case 0x00000dd1: return "GL_MAP1_GRID_SEGMENTS";
      case 0x00000dd2: return "GL_MAP2_GRID_DOMAIN";
      case 0x00000dd3: return "GL_MAP2_GRID_SEGMENTS";
      case 0x00000de0: return "GL_TEXTURE_1D";
      case 0x00000de1: return "GL_TEXTURE_2D";
      case 0x00000df0: return "GL_FEEDBACK_BUFFER_POINTER";
      case 0x00000df1: return "GL_FEEDBACK_BUFFER_SIZE";
      case 0x00000df2: return "GL_FEEDBACK_BUFFER_TYPE";
      case 0x00000df3: return "GL_SELECTION_BUFFER_POINTER";
      case 0x00000df4: return "GL_SELECTION_BUFFER_SIZE";
      case 0x00001000: return "GL_TEXTURE_WIDTH";
      case 0x00001001: return "GL_TEXTURE_HEIGHT";
      case 0x00001003: return "GL_TEXTURE_INTERNAL_FORMAT";
      case 0x00001004: return "GL_TEXTURE_BORDER_COLOR";
      case 0x00001005: return "GL_TEXTURE_BORDER";
      case 0x00001100: return "GL_DONT_CARE";
      case 0x00001101: return "GL_FASTEST";
      case 0x00001102: return "GL_NICEST";
      case 0x00001200: return "GL_AMBIENT";
      case 0x00001201: return "GL_DIFFUSE";
      case 0x00001202: return "GL_SPECULAR";
      case 0x00001203: return "GL_POSITION";
      case 0x00001204: return "GL_SPOT_DIRECTION";
      case 0x00001205: return "GL_SPOT_EXPONENT";
      case 0x00001206: return "GL_SPOT_CUTOFF";
      case 0x00001207: return "GL_CONSTANT_ATTENUATION";
      case 0x00001208: return "GL_LINEAR_ATTENUATION";
      case 0x00001209: return "GL_QUADRATIC_ATTENUATION";
      case 0x00001300: return "GL_COMPILE";
      case 0x00001301: return "GL_COMPILE_AND_EXECUTE";
      case 0x00001400: return "GL_BYTE";
      case 0x00001401: return "GL_UNSIGNED_BYTE";
      case 0x00001402: return "GL_SHORT";
      case 0x00001403: return "GL_UNSIGNED_SHORT";
      case 0x00001404: return "GL_INT";
      case 0x00001405: return "GL_UNSIGNED_INT";
      case 0x00001406: return "GL_FLOAT";
      case 0x00001407: return "GL_2_BYTES";
      case 0x00001408: return "GL_3_BYTES";
      case 0x00001409: return "GL_4_BYTES";
      case 0x0000140a: return "GL_DOUBLE";
      case 0x0000140b: return "GL_HALF_FLOAT";
      case 0x0000140c: return "GL_FIXED";
      case 0x0000140e: return "GL_INT64_NV";
      case 0x0000140f: return "GL_UNSIGNED_INT64_NV";
      case 0x00001500: return "GL_CLEAR";
      case 0x00001501: return "GL_AND";
      case 0x00001502: return "GL_AND_REVERSE";
      case 0x00001503: return "GL_COPY";
      case 0x00001504: return "GL_AND_INVERTED";
      case 0x00001505: return "GL_NOOP";
      case 0x00001506: return "GL_XOR";
      case 0x00001507: return "GL_OR";
      case 0x00001508: return "GL_NOR";
      case 0x00001509: return "GL_EQUIV";
      case 0x0000150a: return "GL_INVERT";
      case 0x0000150b: return "GL_OR_REVERSE";
      case 0x0000150c: return "GL_COPY_INVERTED";
      case 0x0000150d: return "GL_OR_INVERTED";
      case 0x0000150e: return "GL_NAND";
      case 0x0000150f: return "GL_SET";
      case 0x00001600: return "GL_EMISSION";
      case 0x00001601: return "GL_SHININESS";
      case 0x00001602: return "GL_AMBIENT_AND_DIFFUSE";
      case 0x00001603: return "GL_COLOR_INDEXES";
      case 0x00001700: return "GL_MODELVIEW";
      case 0x00001701: return "GL_PROJECTION";
      case 0x00001702: return "GL_TEXTURE";
      case 0x00001800: return "GL_COLOR";
      case 0x00001801: return "GL_DEPTH";
      case 0x00001802: return "GL_STENCIL";
      case 0x00001900: return "GL_COLOR_INDEX";
      case 0x00001901: return "GL_STENCIL_INDEX";
      case 0x00001902: return "GL_DEPTH_COMPONENT";
      case 0x00001903: return "GL_RED";
      case 0x00001904: return "GL_GREEN";
      case 0x00001905: return "GL_BLUE";
      case 0x00001906: return "GL_ALPHA";
      case 0x00001907: return "GL_RGB";
      case 0x00001908: return "GL_RGBA";
      case 0x00001909: return "GL_LUMINANCE";
      case 0x0000190a: return "GL_LUMINANCE_ALPHA";
      case 0x00001a00: return "GL_BITMAP";
      case 0x00001b00: return "GL_POINT";
      case 0x00001b01: return "GL_LINE";
      case 0x00001b02: return "GL_FILL";
      case 0x00001c00: return "GL_RENDER";
      case 0x00001c01: return "GL_FEEDBACK";
      case 0x00001c02: return "GL_SELECT";
      case 0x00001d00: return "GL_FLAT";
      case 0x00001d01: return "GL_SMOOTH";
      case 0x00001e00: return "GL_KEEP";
      case 0x00001e01: return "GL_REPLACE";
      case 0x00001e02: return "GL_INCR";
      case 0x00001e03: return "GL_DECR";
      case 0x00001f00: return "GL_VENDOR";
      case 0x00001f01: return "GL_RENDERER";
      case 0x00001f02: return "GL_VERSION";
      case 0x00001f03: return "GL_EXTENSIONS";
      case 0x00002000: return "GL_S";
      case 0x00002001: return "GL_T";
      case 0x00002002: return "GL_R";
      case 0x00002003: return "GL_Q";
      case 0x00002100: return "GL_MODULATE";
      case 0x00002101: return "GL_DECAL";
      case 0x00002200: return "GL_TEXTURE_ENV_MODE";
      case 0x00002201: return "GL_TEXTURE_ENV_COLOR";
      case 0x00002300: return "GL_TEXTURE_ENV";
      case 0x00002400: return "GL_EYE_LINEAR";
      case 0x00002401: return "GL_OBJECT_LINEAR";
      case 0x00002402: return "GL_SPHERE_MAP";
      case 0x00002500: return "GL_TEXTURE_GEN_MODE";
      case 0x00002501: return "GL_OBJECT_PLANE";
      case 0x00002502: return "GL_EYE_PLANE";
      case 0x00002600: return "GL_NEAREST";
      case 0x00002601: return "GL_LINEAR";
      case 0x00002700: return "GL_NEAREST_MIPMAP_NEAREST";
      case 0x00002701: return "GL_LINEAR_MIPMAP_NEAREST";
      case 0x00002702: return "GL_NEAREST_MIPMAP_LINEAR";
      case 0x00002703: return "GL_LINEAR_MIPMAP_LINEAR";
      case 0x00002800: return "GL_TEXTURE_MAG_FILTER";
      case 0x00002801: return "GL_TEXTURE_MIN_FILTER";
      case 0x00002802: return "GL_TEXTURE_WRAP_S";
      case 0x00002803: return "GL_TEXTURE_WRAP_T";
      case 0x00002900: return "GL_CLAMP";
      case 0x00002901: return "GL_REPEAT";
      case 0x00002a00: return "GL_POLYGON_OFFSET_UNITS";
      case 0x00002a01: return "GL_POLYGON_OFFSET_POINT";
      case 0x00002a02: return "GL_POLYGON_OFFSET_LINE";
      case 0x00002a10: return "GL_R3_G3_B2";
      case 0x00002a20: return "GL_V2F";
      case 0x00002a21: return "GL_V3F";
      case 0x00002a22: return "GL_C4UB_V2F";
      case 0x00002a23: return "GL_C4UB_V3F";
      case 0x00002a24: return "GL_C3F_V3F";
      case 0x00002a25: return "GL_N3F_V3F";
      case 0x00002a26: return "GL_C4F_N3F_V3F";
      case 0x00002a27: return "GL_T2F_V3F";
      case 0x00002a28: return "GL_T4F_V4F";
      case 0x00002a29: return "GL_T2F_C4UB_V3F";
      case 0x00002a2a: return "GL_T2F_C3F_V3F";
      case 0x00002a2b: return "GL_T2F_N3F_V3F";
      case 0x00002a2c: return "GL_T2F_C4F_N3F_V3F";
      case 0x00002a2d: return "GL_T4F_C4F_N3F_V4F";
      case 0x00003000: return "GL_CLIP_PLANE0";
      case 0x00003001: return "GL_CLIP_PLANE1";
      case 0x00003002: return "GL_CLIP_PLANE2";
      case 0x00003003: return "GL_CLIP_PLANE3";
      case 0x00003004: return "GL_CLIP_PLANE4";
      case 0x00003005: return "GL_CLIP_PLANE5";
      case 0x000030e0: return "GL_EGL_COVERAGE_BUFFERS_NV";
      case 0x000030e1: return "GL_EGL_COVERAGE_SAMPLES_NV";
      case 0x000030e2: return "GL_EGL_DEPTH_ENCODING_NV";
      case 0x000030e3: return "GL_EGL_DEPTH_ENCODING_NONLINEAR_NV";
      case 0x00004000: return "GL_LIGHT0";
      case 0x00004001: return "GL_LIGHT1";
      case 0x00004002: return "GL_LIGHT2";
      case 0x00004003: return "GL_LIGHT3";
      case 0x00004004: return "GL_LIGHT4";
      case 0x00004005: return "GL_LIGHT5";
      case 0x00004006: return "GL_LIGHT6";
      case 0x00004007: return "GL_LIGHT7";
      case 0x00008000: return "GL_ABGR_EXT";
      case 0x00008001: return "GL_CONSTANT_COLOR";
      case 0x00008002: return "GL_ONE_MINUS_CONSTANT_COLOR";
      case 0x00008003: return "GL_CONSTANT_ALPHA";
      case 0x00008004: return "GL_ONE_MINUS_CONSTANT_ALPHA";
      case 0x00008005: return "GL_BLEND_COLOR";
      case 0x00008006: return "GL_FUNC_ADD";
      case 0x00008007: return "GL_MIN";
      case 0x00008008: return "GL_MAX";
      case 0x00008009: return "GL_BLEND_EQUATION";
      case 0x0000800a: return "GL_FUNC_SUBTRACT";
      case 0x0000800b: return "GL_FUNC_REVERSE_SUBTRACT";
      case 0x0000800c: return "GL_CMYK_EXT";
      case 0x0000800d: return "GL_CMYKA_EXT";
      case 0x0000800e: return "GL_PACK_CMYK_HINT_EXT";
      case 0x0000800f: return "GL_UNPACK_CMYK_HINT_EXT";
      case 0x00008010: return "GL_CONVOLUTION_1D";
      case 0x00008011: return "GL_CONVOLUTION_2D";
      case 0x00008012: return "GL_SEPARABLE_2D";
      case 0x00008013: return "GL_CONVOLUTION_BORDER_MODE";
      case 0x00008014: return "GL_CONVOLUTION_FILTER_SCALE";
      case 0x00008015: return "GL_CONVOLUTION_FILTER_BIAS";
      case 0x00008016: return "GL_REDUCE";
      case 0x00008017: return "GL_CONVOLUTION_FORMAT";
      case 0x00008018: return "GL_CONVOLUTION_WIDTH";
      case 0x00008019: return "GL_CONVOLUTION_HEIGHT";
      case 0x0000801a: return "GL_MAX_CONVOLUTION_WIDTH";
      case 0x0000801b: return "GL_MAX_CONVOLUTION_HEIGHT";
      case 0x0000801c: return "GL_POST_CONVOLUTION_RED_SCALE";
      case 0x0000801d: return "GL_POST_CONVOLUTION_GREEN_SCALE";
      case 0x0000801e: return "GL_POST_CONVOLUTION_BLUE_SCALE";
      case 0x0000801f: return "GL_POST_CONVOLUTION_ALPHA_SCALE";
      case 0x00008020: return "GL_POST_CONVOLUTION_RED_BIAS";
      case 0x00008021: return "GL_POST_CONVOLUTION_GREEN_BIAS";
      case 0x00008022: return "GL_POST_CONVOLUTION_BLUE_BIAS";
      case 0x00008023: return "GL_POST_CONVOLUTION_ALPHA_BIAS";
      case 0x00008024: return "GL_HISTOGRAM";
      case 0x00008025: return "GL_PROXY_HISTOGRAM";
      case 0x00008026: return "GL_HISTOGRAM_WIDTH";
      case 0x00008027: return "GL_HISTOGRAM_FORMAT";
      case 0x00008028: return "GL_HISTOGRAM_RED_SIZE";
      case 0x00008029: return "GL_HISTOGRAM_GREEN_SIZE";
      case 0x0000802a: return "GL_HISTOGRAM_BLUE_SIZE";
      case 0x0000802b: return "GL_HISTOGRAM_ALPHA_SIZE";
      case 0x0000802c: return "GL_HISTOGRAM_LUMINANCE_SIZE";
      case 0x0000802d: return "GL_HISTOGRAM_SINK";
      case 0x0000802e: return "GL_MINMAX";
      case 0x0000802f: return "GL_MINMAX_FORMAT";
      case 0x00008030: return "GL_MINMAX_SINK";
      case 0x00008031: return "GL_TABLE_TOO_LARGE";
      case 0x00008032: return "GL_UNSIGNED_BYTE_3_3_2";
      case 0x00008033: return "GL_UNSIGNED_SHORT_4_4_4_4";
      case 0x00008034: return "GL_UNSIGNED_SHORT_5_5_5_1";
      case 0x00008035: return "GL_UNSIGNED_INT_8_8_8_8";
      case 0x00008036: return "GL_UNSIGNED_INT_10_10_10_2";
      case 0x00008037: return "GL_POLYGON_OFFSET_FILL";
      case 0x00008038: return "GL_POLYGON_OFFSET_FACTOR";
      case 0x00008039: return "GL_POLYGON_OFFSET_BIAS_EXT";
      case 0x0000803a: return "GL_RESCALE_NORMAL";
      case 0x0000803b: return "GL_ALPHA4";
      case 0x0000803c: return "GL_ALPHA8";
      case 0x0000803d: return "GL_ALPHA12";
      case 0x0000803e: return "GL_ALPHA16";
      case 0x0000803f: return "GL_LUMINANCE4";
      case 0x00008040: return "GL_LUMINANCE8";
      case 0x00008041: return "GL_LUMINANCE12";
      case 0x00008042: return "GL_LUMINANCE16";
      case 0x00008043: return "GL_LUMINANCE4_ALPHA4";
      case 0x00008044: return "GL_LUMINANCE6_ALPHA2";
      case 0x00008045: return "GL_LUMINANCE8_ALPHA8";
      case 0x00008046: return "GL_LUMINANCE12_ALPHA4";
      case 0x00008047: return "GL_LUMINANCE12_ALPHA12";
      case 0x00008048: return "GL_LUMINANCE16_ALPHA16";
      case 0x00008049: return "GL_INTENSITY";
      case 0x0000804a: return "GL_INTENSITY4";
      case 0x0000804b: return "GL_INTENSITY8";
      case 0x0000804c: return "GL_INTENSITY12";
      case 0x0000804d: return "GL_INTENSITY16";
      case 0x0000804e: return "GL_RGB2_EXT";
      case 0x0000804f: return "GL_RGB4";
      case 0x00008050: return "GL_RGB5";
      case 0x00008051: return "GL_RGB8";
      case 0x00008052: return "GL_RGB10";
      case 0x00008053: return "GL_RGB12";
      case 0x00008054: return "GL_RGB16";
      case 0x00008055: return "GL_RGBA2";
      case 0x00008056: return "GL_RGBA4";
      case 0x00008057: return "GL_RGB5_A1";
      case 0x00008058: return "GL_RGBA8";
      case 0x00008059: return "GL_RGB10_A2";
      case 0x0000805a: return "GL_RGBA12";
      case 0x0000805b: return "GL_RGBA16";
      case 0x0000805c: return "GL_TEXTURE_RED_SIZE";
      case 0x0000805d: return "GL_TEXTURE_GREEN_SIZE";
      case 0x0000805e: return "GL_TEXTURE_BLUE_SIZE";
      case 0x0000805f: return "GL_TEXTURE_ALPHA_SIZE";
      case 0x00008060: return "GL_TEXTURE_LUMINANCE_SIZE";
      case 0x00008061: return "GL_TEXTURE_INTENSITY_SIZE";
      case 0x00008062: return "GL_REPLACE_EXT";
      case 0x00008063: return "GL_PROXY_TEXTURE_1D";
      case 0x00008064: return "GL_PROXY_TEXTURE_2D";
      case 0x00008066: return "GL_TEXTURE_PRIORITY";
      case 0x00008067: return "GL_TEXTURE_RESIDENT";
      case 0x00008068: return "GL_TEXTURE_BINDING_1D";
      case 0x00008069: return "GL_TEXTURE_BINDING_2D";
      case 0x0000806a: return "GL_TEXTURE_BINDING_3D";
      case 0x0000806b: return "GL_PACK_SKIP_IMAGES";
      case 0x0000806c: return "GL_PACK_IMAGE_HEIGHT";
      case 0x0000806d: return "GL_UNPACK_SKIP_IMAGES";
      case 0x0000806e: return "GL_UNPACK_IMAGE_HEIGHT";
      case 0x0000806f: return "GL_TEXTURE_3D";
      case 0x00008070: return "GL_PROXY_TEXTURE_3D";
      case 0x00008071: return "GL_TEXTURE_DEPTH";
      case 0x00008072: return "GL_TEXTURE_WRAP_R";
      case 0x00008073: return "GL_MAX_3D_TEXTURE_SIZE";
      case 0x00008074: return "GL_VERTEX_ARRAY";
      case 0x00008075: return "GL_NORMAL_ARRAY";
      case 0x00008076: return "GL_COLOR_ARRAY";
      case 0x00008077: return "GL_INDEX_ARRAY";
      case 0x00008078: return "GL_TEXTURE_COORD_ARRAY";
      case 0x00008079: return "GL_EDGE_FLAG_ARRAY";
      case 0x0000807a: return "GL_VERTEX_ARRAY_SIZE";
      case 0x0000807b: return "GL_VERTEX_ARRAY_TYPE";
      case 0x0000807c: return "GL_VERTEX_ARRAY_STRIDE";
      case 0x0000807d: return "GL_VERTEX_ARRAY_COUNT_EXT";
      case 0x0000807e: return "GL_NORMAL_ARRAY_TYPE";
      case 0x0000807f: return "GL_NORMAL_ARRAY_STRIDE";
      case 0x00008080: return "GL_NORMAL_ARRAY_COUNT_EXT";
      case 0x00008081: return "GL_COLOR_ARRAY_SIZE";
      case 0x00008082: return "GL_COLOR_ARRAY_TYPE";
      case 0x00008083: return "GL_COLOR_ARRAY_STRIDE";
      case 0x00008084: return "GL_COLOR_ARRAY_COUNT_EXT";
      case 0x00008085: return "GL_INDEX_ARRAY_TYPE";
      case 0x00008086: return "GL_INDEX_ARRAY_STRIDE";
      case 0x00008087: return "GL_INDEX_ARRAY_COUNT_EXT";
      case 0x00008088: return "GL_TEXTURE_COORD_ARRAY_SIZE";
      case 0x00008089: return "GL_TEXTURE_COORD_ARRAY_TYPE";
      case 0x0000808a: return "GL_TEXTURE_COORD_ARRAY_STRIDE";
      case 0x0000808b: return "GL_TEXTURE_COORD_ARRAY_COUNT_EXT";
      case 0x0000808c: return "GL_EDGE_FLAG_ARRAY_STRIDE";
      case 0x0000808d: return "GL_EDGE_FLAG_ARRAY_COUNT_EXT";
      case 0x0000808e: return "GL_VERTEX_ARRAY_POINTER";
      case 0x0000808f: return "GL_NORMAL_ARRAY_POINTER";
      case 0x00008090: return "GL_COLOR_ARRAY_POINTER";
      case 0x00008091: return "GL_INDEX_ARRAY_POINTER";
      case 0x00008092: return "GL_TEXTURE_COORD_ARRAY_POINTER";
      case 0x00008093: return "GL_EDGE_FLAG_ARRAY_POINTER";
      case 0x00008094: return "GL_INTERLACE_SGIX";
      case 0x0000809d: return "GL_MULTISAMPLE";
      case 0x0000809e: return "GL_SAMPLE_ALPHA_TO_COVERAGE";
      case 0x0000809f: return "GL_SAMPLE_ALPHA_TO_ONE";
      case 0x000080a0: return "GL_SAMPLE_COVERAGE";
      case 0x000080a1: return "GL_1PASS_EXT";
      case 0x000080a2: return "GL_2PASS_0_EXT";
      case 0x000080a3: return "GL_2PASS_1_EXT";
      case 0x000080a4: return "GL_4PASS_0_EXT";
      case 0x000080a5: return "GL_4PASS_1_EXT";
      case 0x000080a6: return "GL_4PASS_2_EXT";
      case 0x000080a7: return "GL_4PASS_3_EXT";
      case 0x000080a8: return "GL_SAMPLE_BUFFERS";
      case 0x000080a9: return "GL_SAMPLES";
      case 0x000080aa: return "GL_SAMPLE_COVERAGE_VALUE";
      case 0x000080ab: return "GL_SAMPLE_COVERAGE_INVERT";
      case 0x000080ac: return "GL_SAMPLE_PATTERN_EXT";
      case 0x000080b1: return "GL_COLOR_MATRIX";
      case 0x000080b2: return "GL_COLOR_MATRIX_STACK_DEPTH";
      case 0x000080b3: return "GL_MAX_COLOR_MATRIX_STACK_DEPTH";
      case 0x000080b4: return "GL_POST_COLOR_MATRIX_RED_SCALE";
      case 0x000080b5: return "GL_POST_COLOR_MATRIX_GREEN_SCALE";
      case 0x000080b6: return "GL_POST_COLOR_MATRIX_BLUE_SCALE";
      case 0x000080b7: return "GL_POST_COLOR_MATRIX_ALPHA_SCALE";
      case 0x000080b8: return "GL_POST_COLOR_MATRIX_RED_BIAS";
      case 0x000080b9: return "GL_POST_COLOR_MATRIX_GREEN_BIAS";
      case 0x000080ba: return "GL_POST_COLOR_MATRIX_BLUE_BIAS";
      case 0x000080bb: return "GL_POST_COLOR_MATRIX_ALPHA_BIAS";
      case 0x000080bc: return "GL_TEXTURE_COLOR_TABLE_SGI";
      case 0x000080bd: return "GL_PROXY_TEXTURE_COLOR_TABLE_SGI";
      case 0x000080bf: return "GL_TEXTURE_COMPARE_FAIL_VALUE_ARB";
      case 0x000080c8: return "GL_BLEND_DST_RGB";
      case 0x000080c9: return "GL_BLEND_SRC_RGB";
      case 0x000080ca: return "GL_BLEND_DST_ALPHA";
      case 0x000080cb: return "GL_BLEND_SRC_ALPHA";
      case 0x000080cc: return "GL_422_EXT";
      case 0x000080cd: return "GL_422_REV_EXT";
      case 0x000080ce: return "GL_422_AVERAGE_EXT";
      case 0x000080cf: return "GL_422_REV_AVERAGE_EXT";
      case 0x000080d0: return "GL_COLOR_TABLE";
      case 0x000080d1: return "GL_POST_CONVOLUTION_COLOR_TABLE";
      case 0x000080d2: return "GL_POST_COLOR_MATRIX_COLOR_TABLE";
      case 0x000080d3: return "GL_PROXY_COLOR_TABLE";
      case 0x000080d4: return "GL_PROXY_POST_CONVOLUTION_COLOR_TABLE";
      case 0x000080d5: return "GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE";
      case 0x000080d6: return "GL_COLOR_TABLE_SCALE";
      case 0x000080d7: return "GL_COLOR_TABLE_BIAS";
      case 0x000080d8: return "GL_COLOR_TABLE_FORMAT";
      case 0x000080d9: return "GL_COLOR_TABLE_WIDTH";
      case 0x000080da: return "GL_COLOR_TABLE_RED_SIZE";
      case 0x000080db: return "GL_COLOR_TABLE_GREEN_SIZE";
      case 0x000080dc: return "GL_COLOR_TABLE_BLUE_SIZE";
      case 0x000080dd: return "GL_COLOR_TABLE_ALPHA_SIZE";
      case 0x000080de: return "GL_COLOR_TABLE_LUMINANCE_SIZE";
      case 0x000080df: return "GL_COLOR_TABLE_INTENSITY_SIZE";
      case 0x000080e0: return "GL_BGR";
      case 0x000080e1: return "GL_BGRA";
      case 0x000080e2: return "GL_COLOR_INDEX1_EXT";
      case 0x000080e3: return "GL_COLOR_INDEX2_EXT";
      case 0x000080e4: return "GL_COLOR_INDEX4_EXT";
      case 0x000080e5: return "GL_COLOR_INDEX8_EXT";
      case 0x000080e6: return "GL_COLOR_INDEX12_EXT";
      case 0x000080e7: return "GL_COLOR_INDEX16_EXT";
      case 0x000080e8: return "GL_MAX_ELEMENTS_VERTICES_EXT";
      case 0x000080e9: return "GL_MAX_ELEMENTS_INDICES_EXT";
      case 0x000080ea: return "GL_PHONG_WIN";
      case 0x000080eb: return "GL_PHONG_HINT_WIN";
      case 0x000080ec: return "GL_FOG_SPECULAR_TEXTURE_WIN";
      case 0x000080ed: return "GL_TEXTURE_INDEX_SIZE_EXT";
      case 0x000080f0: return "GL_CLIP_VOLUME_CLIPPING_HINT_EXT";
      case 0x00008126: return "GL_POINT_SIZE_MIN";
      case 0x00008127: return "GL_POINT_SIZE_MAX";
      case 0x00008128: return "GL_POINT_FADE_THRESHOLD_SIZE";
      case 0x00008129: return "GL_POINT_DISTANCE_ATTENUATION";
      case 0x0000812d: return "GL_CLAMP_TO_BORDER";
      case 0x0000812e: return "GL_TEXTURE_MULTI_BUFFER_HINT_SGIX";
      case 0x0000812f: return "GL_CLAMP_TO_EDGE";
      case 0x0000813a: return "GL_TEXTURE_MIN_LOD";
      case 0x0000813b: return "GL_TEXTURE_MAX_LOD";
      case 0x0000813c: return "GL_TEXTURE_BASE_LEVEL";
      case 0x0000813d: return "GL_TEXTURE_MAX_LEVEL";
      case 0x00008150: return "GL_IGNORE_BORDER";
      case 0x00008151: return "GL_CONSTANT_BORDER";
      case 0x00008152: return "GL_WRAP_BORDER";
      case 0x00008153: return "GL_REPLICATE_BORDER";
      case 0x00008154: return "GL_CONVOLUTION_BORDER_COLOR";
      case 0x00008165: return "GL_OCCLUSION_TEST_HP";
      case 0x00008166: return "GL_OCCLUSION_TEST_RESULT_HP";
      case 0x00008179: return "GL_POST_TEXTURE_FILTER_BIAS_SGIX";
      case 0x0000817a: return "GL_POST_TEXTURE_FILTER_SCALE_SGIX";
      case 0x0000817b: return "GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX";
      case 0x0000817c: return "GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX";
      case 0x00008191: return "GL_GENERATE_MIPMAP";
      case 0x00008192: return "GL_GENERATE_MIPMAP_HINT";
      case 0x00008198: return "GL_FOG_OFFSET_SGIX";
      case 0x00008199: return "GL_FOG_OFFSET_VALUE_SGIX";
      case 0x0000819a: return "GL_TEXTURE_COMPARE_SGIX";
      case 0x0000819b: return "GL_TEXTURE_COMPARE_OPERATOR_SGIX";
      case 0x0000819c: return "GL_TEXTURE_LEQUAL_R_SGIX";
      case 0x0000819d: return "GL_TEXTURE_GEQUAL_R_SGIX";
      case 0x000081a5: return "GL_DEPTH_COMPONENT16";
      case 0x000081a6: return "GL_DEPTH_COMPONENT24";
      case 0x000081a7: return "GL_DEPTH_COMPONENT32";
      case 0x000081a8: return "GL_ARRAY_ELEMENT_LOCK_FIRST_EXT";
      case 0x000081a9: return "GL_ARRAY_ELEMENT_LOCK_COUNT_EXT";
      case 0x000081aa: return "GL_CULL_VERTEX_EXT";
      case 0x000081ab: return "GL_CULL_VERTEX_EYE_POSITION_EXT";
      case 0x000081ac: return "GL_CULL_VERTEX_OBJECT_POSITION_EXT";
      case 0x000081d4: return "GL_WRAP_BORDER_SUN";
      case 0x000081d5: return "GL_UNPACK_CONSTANT_DATA_SUNX";
      case 0x000081d6: return "GL_TEXTURE_CONSTANT_DATA_SUNX";
      case 0x000081d7: return "GL_TRIANGLE_LIST_SUN";
      case 0x000081d8: return "GL_REPLACEMENT_CODE_SUN";
      case 0x000081d9: return "GL_GLOBAL_ALPHA_SUN";
      case 0x000081da: return "GL_GLOBAL_ALPHA_FACTOR_SUN";
      case 0x000081f0: return "GL_EYE_DISTANCE_TO_POINT_SGIS";
      case 0x000081f1: return "GL_OBJECT_DISTANCE_TO_POINT_SGIS";
      case 0x000081f2: return "GL_EYE_DISTANCE_TO_LINE_SGIS";
      case 0x000081f3: return "GL_OBJECT_DISTANCE_TO_LINE_SGIS";
      case 0x000081f4: return "GL_EYE_POINT_SGIS";
      case 0x000081f5: return "GL_OBJECT_POINT_SGIS";
      case 0x000081f6: return "GL_EYE_LINE_SGIS";
      case 0x000081f7: return "GL_OBJECT_LINE_SGIS";
      case 0x000081f8: return "GL_LIGHT_MODEL_COLOR_CONTROL";
      case 0x000081f9: return "GL_SINGLE_COLOR";
      case 0x000081fa: return "GL_SEPARATE_SPECULAR_COLOR";
      case 0x000081fb: return "GL_SHARED_TEXTURE_PALETTE_EXT";
      case 0x00008200: return "GL_TEXT_FRAGMENT_SHADER_ATI";
      case 0x00008210: return "GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING";
      case 0x00008211: return "GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE";
      case 0x00008212: return "GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE";
      case 0x00008213: return "GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE";
      case 0x00008214: return "GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE";
      case 0x00008215: return "GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE";
      case 0x00008216: return "GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE";
      case 0x00008217: return "GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE";
      case 0x00008218: return "GL_FRAMEBUFFER_DEFAULT";
      case 0x00008219: return "GL_FRAMEBUFFER_UNDEFINED";
      case 0x0000821a: return "GL_DEPTH_STENCIL_ATTACHMENT";
      case 0x0000821b: return "GL_MAJOR_VERSION";
      case 0x0000821c: return "GL_MINOR_VERSION";
      case 0x0000821d: return "GL_NUM_EXTENSIONS";
      case 0x0000821e: return "GL_CONTEXT_FLAGS";
      case 0x00008222: return "GL_INDEX";
      case 0x00008223: return "GL_DEPTH_BUFFER";
      case 0x00008224: return "GL_STENCIL_BUFFER";
      case 0x00008225: return "GL_COMPRESSED_RED";
      case 0x00008226: return "GL_COMPRESSED_RG";
      case 0x00008227: return "GL_RG";
      case 0x00008228: return "GL_RG_INTEGER";
      case 0x00008229: return "GL_R8";
      case 0x0000822a: return "GL_R16";
      case 0x0000822b: return "GL_RG8";
      case 0x0000822c: return "GL_RG16";
      case 0x0000822d: return "GL_R16F";
      case 0x0000822e: return "GL_R32F";
      case 0x0000822f: return "GL_RG16F";
      case 0x00008230: return "GL_RG32F";
      case 0x00008231: return "GL_R8I";
      case 0x00008232: return "GL_R8UI";
      case 0x00008233: return "GL_R16I";
      case 0x00008234: return "GL_R16UI";
      case 0x00008235: return "GL_R32I";
      case 0x00008236: return "GL_R32UI";
      case 0x00008237: return "GL_RG8I";
      case 0x00008238: return "GL_RG8UI";
      case 0x00008239: return "GL_RG16I";
      case 0x0000823a: return "GL_RG16UI";
      case 0x0000823b: return "GL_RG32I";
      case 0x0000823c: return "GL_RG32UI";
      case 0x00008240: return "GL_SYNC_CL_EVENT_ARB";
      case 0x00008241: return "GL_SYNC_CL_EVENT_COMPLETE_ARB";
      case 0x00008242: return "GL_DEBUG_OUTPUT_SYNCHRONOUS";
      case 0x00008243: return "GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH";
      case 0x00008244: return "GL_DEBUG_CALLBACK_FUNCTION";
      case 0x00008245: return "GL_DEBUG_CALLBACK_USER_PARAM";
      case 0x00008246: return "GL_DEBUG_SOURCE_API";
      case 0x00008247: return "GL_DEBUG_SOURCE_WINDOW_SYSTEM";
      case 0x00008248: return "GL_DEBUG_SOURCE_SHADER_COMPILER";
      case 0x00008249: return "GL_DEBUG_SOURCE_THIRD_PARTY";
      case 0x0000824a: return "GL_DEBUG_SOURCE_APPLICATION";
      case 0x0000824b: return "GL_DEBUG_SOURCE_OTHER";
      case 0x0000824c: return "GL_DEBUG_TYPE_ERROR";
      case 0x0000824d: return "GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR";
      case 0x0000824e: return "GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR";
      case 0x0000824f: return "GL_DEBUG_TYPE_PORTABILITY";
      case 0x00008250: return "GL_DEBUG_TYPE_PERFORMANCE";
      case 0x00008251: return "GL_DEBUG_TYPE_OTHER";
      case 0x00008252: return "GL_LOSE_CONTEXT_ON_RESET_ARB";
      case 0x00008253: return "GL_GUILTY_CONTEXT_RESET_ARB";
      case 0x00008254: return "GL_INNOCENT_CONTEXT_RESET_ARB";
      case 0x00008255: return "GL_UNKNOWN_CONTEXT_RESET_ARB";
      case 0x00008256: return "GL_RESET_NOTIFICATION_STRATEGY_ARB";
      case 0x00008257: return "GL_PROGRAM_BINARY_RETRIEVABLE_HINT";
      case 0x00008258: return "GL_PROGRAM_SEPARABLE";
      case 0x00008259: return "GL_ACTIVE_PROGRAM";
      case 0x0000825a: return "GL_PROGRAM_PIPELINE_BINDING";
      case 0x00008261: return "GL_NO_RESET_NOTIFICATION_ARB";
      case 0x00008262: return "GL_MAX_COMPUTE_SHARED_MEMORY_SIZE";
      case 0x00008263: return "GL_MAX_COMPUTE_UNIFORM_COMPONENTS";
      case 0x00008264: return "GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS";
      case 0x00008265: return "GL_MAX_COMPUTE_ATOMIC_COUNTERS";
      case 0x00008266: return "GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS";
      case 0x00008267: return "GL_COMPUTE_WORK_GROUP_SIZE";
      case 0x00008268: return "GL_DEBUG_TYPE_MARKER";
      case 0x00008269: return "GL_DEBUG_TYPE_PUSH_GROUP";
      case 0x0000826a: return "GL_DEBUG_TYPE_POP_GROUP";
      case 0x0000826b: return "GL_DEBUG_SEVERITY_NOTIFICATION";
      case 0x0000826c: return "GL_MAX_DEBUG_GROUP_STACK_DEPTH";
      case 0x0000826d: return "GL_DEBUG_GROUP_STACK_DEPTH";
      case 0x0000826e: return "GL_MAX_UNIFORM_LOCATIONS";
      case 0x0000826f: return "GL_INTERNALFORMAT_SUPPORTED";
      case 0x00008270: return "GL_INTERNALFORMAT_PREFERRED";
      case 0x00008271: return "GL_INTERNALFORMAT_RED_SIZE";
      case 0x00008272: return "GL_INTERNALFORMAT_GREEN_SIZE";
      case 0x00008273: return "GL_INTERNALFORMAT_BLUE_SIZE";
      case 0x00008274: return "GL_INTERNALFORMAT_ALPHA_SIZE";
      case 0x00008275: return "GL_INTERNALFORMAT_DEPTH_SIZE";
      case 0x00008276: return "GL_INTERNALFORMAT_STENCIL_SIZE";
      case 0x00008277: return "GL_INTERNALFORMAT_SHARED_SIZE";
      case 0x00008278: return "GL_INTERNALFORMAT_RED_TYPE";
      case 0x00008279: return "GL_INTERNALFORMAT_GREEN_TYPE";
      case 0x0000827a: return "GL_INTERNALFORMAT_BLUE_TYPE";
      case 0x0000827b: return "GL_INTERNALFORMAT_ALPHA_TYPE";
      case 0x0000827c: return "GL_INTERNALFORMAT_DEPTH_TYPE";
      case 0x0000827d: return "GL_INTERNALFORMAT_STENCIL_TYPE";
      case 0x0000827e: return "GL_MAX_WIDTH";
      case 0x0000827f: return "GL_MAX_HEIGHT";
      case 0x00008280: return "GL_MAX_DEPTH";
      case 0x00008281: return "GL_MAX_LAYERS";
      case 0x00008282: return "GL_MAX_COMBINED_DIMENSIONS";
      case 0x00008283: return "GL_COLOR_COMPONENTS";
      case 0x00008284: return "GL_DEPTH_COMPONENTS";
      case 0x00008285: return "GL_STENCIL_COMPONENTS";
      case 0x00008286: return "GL_COLOR_RENDERABLE";
      case 0x00008287: return "GL_DEPTH_RENDERABLE";
      case 0x00008288: return "GL_STENCIL_RENDERABLE";
      case 0x00008289: return "GL_FRAMEBUFFER_RENDERABLE";
      case 0x0000828a: return "GL_FRAMEBUFFER_RENDERABLE_LAYERED";
      case 0x0000828b: return "GL_FRAMEBUFFER_BLEND";
      case 0x0000828c: return "GL_READ_PIXELS";
      case 0x0000828d: return "GL_READ_PIXELS_FORMAT";
      case 0x0000828e: return "GL_READ_PIXELS_TYPE";
      case 0x0000828f: return "GL_TEXTURE_IMAGE_FORMAT";
      case 0x00008290: return "GL_TEXTURE_IMAGE_TYPE";
      case 0x00008291: return "GL_GET_TEXTURE_IMAGE_FORMAT";
      case 0x00008292: return "GL_GET_TEXTURE_IMAGE_TYPE";
      case 0x00008293: return "GL_MIPMAP";
      case 0x00008294: return "GL_MANUAL_GENERATE_MIPMAP";
      case 0x00008295: return "GL_AUTO_GENERATE_MIPMAP";
      case 0x00008296: return "GL_COLOR_ENCODING";
      case 0x00008297: return "GL_SRGB_READ";
      case 0x00008298: return "GL_SRGB_WRITE";
      case 0x00008299: return "GL_SRGB_DECODE_ARB";
      case 0x0000829a: return "GL_FILTER";
      case 0x0000829b: return "GL_VERTEX_TEXTURE";
      case 0x0000829c: return "GL_TESS_CONTROL_TEXTURE";
      case 0x0000829d: return "GL_TESS_EVALUATION_TEXTURE";
      case 0x0000829e: return "GL_GEOMETRY_TEXTURE";
      case 0x0000829f: return "GL_FRAGMENT_TEXTURE";
      case 0x000082a0: return "GL_COMPUTE_TEXTURE";
      case 0x000082a1: return "GL_TEXTURE_SHADOW";
      case 0x000082a2: return "GL_TEXTURE_GATHER";
      case 0x000082a3: return "GL_TEXTURE_GATHER_SHADOW";
      case 0x000082a4: return "GL_SHADER_IMAGE_LOAD";
      case 0x000082a5: return "GL_SHADER_IMAGE_STORE";
      case 0x000082a6: return "GL_SHADER_IMAGE_ATOMIC";
      case 0x000082a7: return "GL_IMAGE_TEXEL_SIZE";
      case 0x000082a8: return "GL_IMAGE_COMPATIBILITY_CLASS";
      case 0x000082a9: return "GL_IMAGE_PIXEL_FORMAT";
      case 0x000082aa: return "GL_IMAGE_PIXEL_TYPE";
      case 0x000082ac: return "GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST";
      case 0x000082ad: return "GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST";
      case 0x000082ae: return "GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE";
      case 0x000082af: return "GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE";
      case 0x000082b1: return "GL_TEXTURE_COMPRESSED_BLOCK_WIDTH";
      case 0x000082b2: return "GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT";
      case 0x000082b3: return "GL_TEXTURE_COMPRESSED_BLOCK_SIZE";
      case 0x000082b4: return "GL_CLEAR_BUFFER";
      case 0x000082b5: return "GL_TEXTURE_VIEW";
      case 0x000082b6: return "GL_VIEW_COMPATIBILITY_CLASS";
      case 0x000082b7: return "GL_FULL_SUPPORT";
      case 0x000082b8: return "GL_CAVEAT_SUPPORT";
      case 0x000082b9: return "GL_IMAGE_CLASS_4_X_32";
      case 0x000082ba: return "GL_IMAGE_CLASS_2_X_32";
      case 0x000082bb: return "GL_IMAGE_CLASS_1_X_32";
      case 0x000082bc: return "GL_IMAGE_CLASS_4_X_16";
      case 0x000082bd: return "GL_IMAGE_CLASS_2_X_16";
      case 0x000082be: return "GL_IMAGE_CLASS_1_X_16";
      case 0x000082bf: return "GL_IMAGE_CLASS_4_X_8";
      case 0x000082c0: return "GL_IMAGE_CLASS_2_X_8";
      case 0x000082c1: return "GL_IMAGE_CLASS_1_X_8";
      case 0x000082c2: return "GL_IMAGE_CLASS_11_11_10";
      case 0x000082c3: return "GL_IMAGE_CLASS_10_10_10_2";
      case 0x000082c4: return "GL_VIEW_CLASS_128_BITS";
      case 0x000082c5: return "GL_VIEW_CLASS_96_BITS";
      case 0x000082c6: return "GL_VIEW_CLASS_64_BITS";
      case 0x000082c7: return "GL_VIEW_CLASS_48_BITS";
      case 0x000082c8: return "GL_VIEW_CLASS_32_BITS";
      case 0x000082c9: return "GL_VIEW_CLASS_24_BITS";
      case 0x000082ca: return "GL_VIEW_CLASS_16_BITS";
      case 0x000082cb: return "GL_VIEW_CLASS_8_BITS";
      case 0x000082cc: return "GL_VIEW_CLASS_S3TC_DXT1_RGB";
      case 0x000082cd: return "GL_VIEW_CLASS_S3TC_DXT1_RGBA";
      case 0x000082ce: return "GL_VIEW_CLASS_S3TC_DXT3_RGBA";
      case 0x000082cf: return "GL_VIEW_CLASS_S3TC_DXT5_RGBA";
      case 0x000082d0: return "GL_VIEW_CLASS_RGTC1_RED";
      case 0x000082d1: return "GL_VIEW_CLASS_RGTC2_RG";
      case 0x000082d2: return "GL_VIEW_CLASS_BPTC_UNORM";
      case 0x000082d3: return "GL_VIEW_CLASS_BPTC_FLOAT";
      case 0x000082d4: return "GL_VERTEX_ATTRIB_BINDING";
      case 0x000082d5: return "GL_VERTEX_ATTRIB_RELATIVE_OFFSET";
      case 0x000082d6: return "GL_VERTEX_BINDING_DIVISOR";
      case 0x000082d7: return "GL_VERTEX_BINDING_OFFSET";
      case 0x000082d8: return "GL_VERTEX_BINDING_STRIDE";
      case 0x000082d9: return "GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET";
      case 0x000082da: return "GL_MAX_VERTEX_ATTRIB_BINDINGS";
      case 0x000082db: return "GL_TEXTURE_VIEW_MIN_LEVEL";
      case 0x000082dc: return "GL_TEXTURE_VIEW_NUM_LEVELS";
      case 0x000082dd: return "GL_TEXTURE_VIEW_MIN_LAYER";
      case 0x000082de: return "GL_TEXTURE_VIEW_NUM_LAYERS";
      case 0x000082df: return "GL_TEXTURE_IMMUTABLE_LEVELS";
      case 0x000082e0: return "GL_BUFFER";
      case 0x000082e1: return "GL_SHADER";
      case 0x000082e2: return "GL_PROGRAM";
      case 0x000082e3: return "GL_QUERY";
      case 0x000082e4: return "GL_PROGRAM_PIPELINE";
      case 0x000082e6: return "GL_SAMPLER";
      case 0x000082e7: return "GL_DISPLAY_LIST";
      case 0x000082e8: return "GL_MAX_LABEL_LENGTH";
      case 0x000082e9: return "GL_NUM_SHADING_LANGUAGE_VERSIONS";
      case 0x00008316: return "GL_CONVOLUTION_HINT_SGIX";
      case 0x00008320: return "GL_ALPHA_MIN_SGIX";
      case 0x00008321: return "GL_ALPHA_MAX_SGIX";
      case 0x00008329: return "GL_ASYNC_MARKER_SGIX";
      case 0x0000832c: return "GL_ASYNC_HISTOGRAM_SGIX";
      case 0x0000832d: return "GL_MAX_ASYNC_HISTOGRAM_SGIX";
      case 0x00008330: return "GL_PIXEL_TRANSFORM_2D_EXT";
      case 0x00008331: return "GL_PIXEL_MAG_FILTER_EXT";
      case 0x00008332: return "GL_PIXEL_MIN_FILTER_EXT";
      case 0x00008333: return "GL_PIXEL_CUBIC_WEIGHT_EXT";
      case 0x00008334: return "GL_CUBIC_EXT";
      case 0x00008335: return "GL_AVERAGE_EXT";
      case 0x00008336: return "GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT";
      case 0x00008337: return "GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT";
      case 0x00008338: return "GL_PIXEL_TRANSFORM_2D_MATRIX_EXT";
      case 0x00008349: return "GL_FRAGMENT_MATERIAL_EXT";
      case 0x0000834a: return "GL_FRAGMENT_NORMAL_EXT";
      case 0x0000834c: return "GL_FRAGMENT_COLOR_EXT";
      case 0x0000834d: return "GL_ATTENUATION_EXT";
      case 0x0000834e: return "GL_SHADOW_ATTENUATION_EXT";
      case 0x0000834f: return "GL_TEXTURE_APPLICATION_MODE_EXT";
      case 0x00008350: return "GL_TEXTURE_LIGHT_EXT";
      case 0x00008351: return "GL_TEXTURE_MATERIAL_FACE_EXT";
      case 0x00008352: return "GL_TEXTURE_MATERIAL_PARAMETER_EXT";
      case 0x0000835c: return "GL_ASYNC_TEX_IMAGE_SGIX";
      case 0x0000835d: return "GL_ASYNC_DRAW_PIXELS_SGIX";
      case 0x0000835e: return "GL_ASYNC_READ_PIXELS_SGIX";
      case 0x0000835f: return "GL_MAX_ASYNC_TEX_IMAGE_SGIX";
      case 0x00008360: return "GL_MAX_ASYNC_DRAW_PIXELS_SGIX";
      case 0x00008361: return "GL_MAX_ASYNC_READ_PIXELS_SGIX";
      case 0x00008362: return "GL_UNSIGNED_BYTE_2_3_3_REV";
      case 0x00008363: return "GL_UNSIGNED_SHORT_5_6_5";
      case 0x00008364: return "GL_UNSIGNED_SHORT_5_6_5_REV";
      case 0x00008365: return "GL_UNSIGNED_SHORT_4_4_4_4_REV";
      case 0x00008366: return "GL_UNSIGNED_SHORT_1_5_5_5_REV";
      case 0x00008367: return "GL_UNSIGNED_INT_8_8_8_8_REV";
      case 0x00008368: return "GL_UNSIGNED_INT_2_10_10_10_REV";
      case 0x00008369: return "GL_TEXTURE_MAX_CLAMP_S_SGIX";
      case 0x0000836a: return "GL_TEXTURE_MAX_CLAMP_T_SGIX";
      case 0x0000836b: return "GL_TEXTURE_MAX_CLAMP_R_SGIX";
      case 0x00008370: return "GL_MIRRORED_REPEAT";
      case 0x000083a0: return "GL_RGB_S3TC";
      case 0x000083a1: return "GL_RGB4_S3TC";
      case 0x000083a2: return "GL_RGBA_S3TC";
      case 0x000083a3: return "GL_RGBA4_S3TC";
      case 0x000083a4: return "GL_RGBA_DXT5_S3TC";
      case 0x000083a5: return "GL_RGBA4_DXT5_S3TC";
      case 0x000083ee: return "GL_VERTEX_PRECLIP_SGIX";
      case 0x000083ef: return "GL_VERTEX_PRECLIP_HINT_SGIX";
      case 0x000083f0: return "GL_COMPRESSED_RGB_S3TC_DXT1_EXT";
      case 0x000083f1: return "GL_COMPRESSED_RGBA_S3TC_DXT1_EXT";
      case 0x000083f2: return "GL_COMPRESSED_RGBA_S3TC_DXT3_EXT";
      case 0x000083f3: return "GL_COMPRESSED_RGBA_S3TC_DXT5_EXT";
      case 0x000083f4: return "GL_PARALLEL_ARRAYS_INTEL";
      case 0x000083f5: return "GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL";
      case 0x000083f6: return "GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL";
      case 0x000083f7: return "GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL";
      case 0x000083f8: return "GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL";
      case 0x00008400: return "GL_FRAGMENT_LIGHTING_EXT";
      case 0x00008401: return "GL_FRAGMENT_COLOR_MATERIAL_EXT";
      case 0x00008402: return "GL_FRAGMENT_COLOR_MATERIAL_FACE_EXT";
      case 0x00008403: return "GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_EXT";
      case 0x00008404: return "GL_MAX_FRAGMENT_LIGHTS_EXT";
      case 0x00008405: return "GL_MAX_ACTIVE_LIGHTS_EXT";
      case 0x00008406: return "GL_CURRENT_RASTER_NORMAL_EXT";
      case 0x00008407: return "GL_LIGHT_ENV_MODE_EXT";
      case 0x00008408: return "GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_EXT";
      case 0x00008409: return "GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_EXT";
      case 0x0000840a: return "GL_FRAGMENT_LIGHT_MODEL_AMBIENT_EXT";
      case 0x0000840b: return "GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_EXT";
      case 0x0000840c: return "GL_FRAGMENT_LIGHT0_EXT";
      case 0x00008413: return "GL_FRAGMENT_LIGHT7_EXT";
      case 0x0000842e: return "GL_PACK_RESAMPLE_SGIX";
      case 0x0000842f: return "GL_UNPACK_RESAMPLE_SGIX";
      case 0x00008430: return "GL_RESAMPLE_DECIMATE_SGIX";
      case 0x00008433: return "GL_RESAMPLE_REPLICATE_SGIX";
      case 0x00008434: return "GL_RESAMPLE_ZERO_FILL_SGIX";
      case 0x00008439: return "GL_TANGENT_ARRAY_EXT";
      case 0x0000843a: return "GL_BINORMAL_ARRAY_EXT";
      case 0x0000843b: return "GL_CURRENT_TANGENT_EXT";
      case 0x0000843c: return "GL_CURRENT_BINORMAL_EXT";
      case 0x0000843e: return "GL_TANGENT_ARRAY_TYPE_EXT";
      case 0x0000843f: return "GL_TANGENT_ARRAY_STRIDE_EXT";
      case 0x00008440: return "GL_BINORMAL_ARRAY_TYPE_EXT";
      case 0x00008441: return "GL_BINORMAL_ARRAY_STRIDE_EXT";
      case 0x00008442: return "GL_TANGENT_ARRAY_POINTER_EXT";
      case 0x00008443: return "GL_BINORMAL_ARRAY_POINTER_EXT";
      case 0x00008444: return "GL_MAP1_TANGENT_EXT";
      case 0x00008445: return "GL_MAP2_TANGENT_EXT";
      case 0x00008446: return "GL_MAP1_BINORMAL_EXT";
      case 0x00008447: return "GL_MAP2_BINORMAL_EXT";
      case 0x00008450: return "GL_FOG_COORDINATE_SOURCE";
      case 0x00008451: return "GL_FOG_COORDINATE";
      case 0x00008452: return "GL_FRAGMENT_DEPTH";
      case 0x00008453: return "GL_CURRENT_FOG_COORDINATE";
      case 0x00008454: return "GL_FOG_COORDINATE_ARRAY_TYPE";
      case 0x00008455: return "GL_FOG_COORDINATE_ARRAY_STRIDE";
      case 0x00008456: return "GL_FOG_COORDINATE_ARRAY_POINTER";
      case 0x00008457: return "GL_FOG_COORDINATE_ARRAY";
      case 0x00008458: return "GL_COLOR_SUM";
      case 0x00008459: return "GL_CURRENT_SECONDARY_COLOR";
      case 0x0000845a: return "GL_SECONDARY_COLOR_ARRAY_SIZE";
      case 0x0000845b: return "GL_SECONDARY_COLOR_ARRAY_TYPE";
      case 0x0000845c: return "GL_SECONDARY_COLOR_ARRAY_STRIDE";
      case 0x0000845d: return "GL_SECONDARY_COLOR_ARRAY_POINTER";
      case 0x0000845e: return "GL_SECONDARY_COLOR_ARRAY";
      case 0x0000845f: return "GL_CURRENT_RASTER_SECONDARY_COLOR";
      case 0x0000846d: return "GL_ALIASED_POINT_SIZE_RANGE";
      case 0x0000846e: return "GL_ALIASED_LINE_WIDTH_RANGE";
      case 0x00008490: return "GL_SCREEN_COORDINATES_REND";
      case 0x00008491: return "GL_INVERTED_SCREEN_W_REND";
      case 0x000084c0: return "GL_TEXTURE0";
      case 0x000084c1: return "GL_TEXTURE1";
      case 0x000084c2: return "GL_TEXTURE2";
      case 0x000084c3: return "GL_TEXTURE3";
      case 0x000084c4: return "GL_TEXTURE4";
      case 0x000084c5: return "GL_TEXTURE5";
      case 0x000084c6: return "GL_TEXTURE6";
      case 0x000084c7: return "GL_TEXTURE7";
      case 0x000084c8: return "GL_TEXTURE8";
      case 0x000084c9: return "GL_TEXTURE9";
      case 0x000084ca: return "GL_TEXTURE10";
      case 0x000084cb: return "GL_TEXTURE11";
      case 0x000084cc: return "GL_TEXTURE12";
      case 0x000084cd: return "GL_TEXTURE13";
      case 0x000084ce: return "GL_TEXTURE14";
      case 0x000084cf: return "GL_TEXTURE15";
      case 0x000084d0: return "GL_TEXTURE16";
      case 0x000084d1: return "GL_TEXTURE17";
      case 0x000084d2: return "GL_TEXTURE18";
      case 0x000084d3: return "GL_TEXTURE19";
      case 0x000084d4: return "GL_TEXTURE20";
      case 0x000084d5: return "GL_TEXTURE21";
      case 0x000084d6: return "GL_TEXTURE22";
      case 0x000084d7: return "GL_TEXTURE23";
      case 0x000084d8: return "GL_TEXTURE24";
      case 0x000084d9: return "GL_TEXTURE25";
      case 0x000084da: return "GL_TEXTURE26";
      case 0x000084db: return "GL_TEXTURE27";
      case 0x000084dc: return "GL_TEXTURE28";
      case 0x000084dd: return "GL_TEXTURE29";
      case 0x000084de: return "GL_TEXTURE30";
      case 0x000084df: return "GL_TEXTURE31";
      case 0x000084e0: return "GL_ACTIVE_TEXTURE";
      case 0x000084e1: return "GL_CLIENT_ACTIVE_TEXTURE";
      case 0x000084e2: return "GL_MAX_TEXTURE_UNITS";
      case 0x000084e3: return "GL_TRANSPOSE_MODELVIEW_MATRIX";
      case 0x000084e4: return "GL_TRANSPOSE_PROJECTION_MATRIX";
      case 0x000084e5: return "GL_TRANSPOSE_TEXTURE_MATRIX";
      case 0x000084e6: return "GL_TRANSPOSE_COLOR_MATRIX";
      case 0x000084e7: return "GL_SUBTRACT";
      case 0x000084e8: return "GL_MAX_RENDERBUFFER_SIZE";
      case 0x000084e9: return "GL_COMPRESSED_ALPHA";
      case 0x000084ea: return "GL_COMPRESSED_LUMINANCE";
      case 0x000084eb: return "GL_COMPRESSED_LUMINANCE_ALPHA";
      case 0x000084ec: return "GL_COMPRESSED_INTENSITY";
      case 0x000084ed: return "GL_COMPRESSED_RGB";
      case 0x000084ee: return "GL_COMPRESSED_RGBA";
      case 0x000084ef: return "GL_TEXTURE_COMPRESSION_HINT";
      case 0x000084f0: return "GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER";
      case 0x000084f1: return "GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER";
      case 0x000084f2: return "GL_ALL_COMPLETED_NV";
      case 0x000084f3: return "GL_FENCE_STATUS_NV";
      case 0x000084f4: return "GL_FENCE_CONDITION_NV";
      case 0x000084f5: return "GL_TEXTURE_RECTANGLE";
      case 0x000084f6: return "GL_TEXTURE_BINDING_RECTANGLE";
      case 0x000084f7: return "GL_PROXY_TEXTURE_RECTANGLE";
      case 0x000084f8: return "GL_MAX_RECTANGLE_TEXTURE_SIZE";
      case 0x000084f9: return "GL_DEPTH_STENCIL";
      case 0x000084fa: return "GL_UNSIGNED_INT_24_8";
      case 0x000084fd: return "GL_MAX_TEXTURE_LOD_BIAS";
      case 0x000084fe: return "GL_TEXTURE_MAX_ANISOTROPY_EXT";
      case 0x000084ff: return "GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT";
      case 0x00008500: return "GL_TEXTURE_FILTER_CONTROL";
      case 0x00008501: return "GL_TEXTURE_LOD_BIAS";
      case 0x00008502: return "GL_MODELVIEW1_STACK_DEPTH_EXT";
      case 0x00008503: return "GL_COMBINE4_NV";
      case 0x00008504: return "GL_MAX_SHININESS_NV";
      case 0x00008505: return "GL_MAX_SPOT_EXPONENT_NV";
      case 0x00008506: return "GL_MODELVIEW1_MATRIX_EXT";
      case 0x00008507: return "GL_INCR_WRAP";
      case 0x00008508: return "GL_DECR_WRAP";
      case 0x00008509: return "GL_VERTEX_WEIGHTING_EXT";
      case 0x0000850a: return "GL_MODELVIEW1_ARB";
      case 0x0000850b: return "GL_CURRENT_VERTEX_WEIGHT_EXT";
      case 0x0000850c: return "GL_VERTEX_WEIGHT_ARRAY_EXT";
      case 0x0000850d: return "GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT";
      case 0x0000850e: return "GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT";
      case 0x0000850f: return "GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT";
      case 0x00008510: return "GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT";
      case 0x00008511: return "GL_NORMAL_MAP";
      case 0x00008512: return "GL_REFLECTION_MAP";
      case 0x00008513: return "GL_TEXTURE_CUBE_MAP";
      case 0x00008514: return "GL_TEXTURE_BINDING_CUBE_MAP";
      case 0x00008515: return "GL_TEXTURE_CUBE_MAP_POSITIVE_X";
      case 0x00008516: return "GL_TEXTURE_CUBE_MAP_NEGATIVE_X";
      case 0x00008517: return "GL_TEXTURE_CUBE_MAP_POSITIVE_Y";
      case 0x00008518: return "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y";
      case 0x00008519: return "GL_TEXTURE_CUBE_MAP_POSITIVE_Z";
      case 0x0000851a: return "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z";
      case 0x0000851b: return "GL_PROXY_TEXTURE_CUBE_MAP";
      case 0x0000851c: return "GL_MAX_CUBE_MAP_TEXTURE_SIZE";
      case 0x0000851d: return "GL_VERTEX_ARRAY_RANGE_NV";
      case 0x0000851e: return "GL_VERTEX_ARRAY_RANGE_LENGTH_NV";
      case 0x0000851f: return "GL_VERTEX_ARRAY_RANGE_VALID_NV";
      case 0x00008520: return "GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV";
      case 0x00008521: return "GL_VERTEX_ARRAY_RANGE_POINTER_NV";
      case 0x00008522: return "GL_REGISTER_COMBINERS_NV";
      case 0x00008523: return "GL_VARIABLE_A_NV";
      case 0x00008524: return "GL_VARIABLE_B_NV";
      case 0x00008525: return "GL_VARIABLE_C_NV";
      case 0x00008526: return "GL_VARIABLE_D_NV";
      case 0x00008527: return "GL_VARIABLE_E_NV";
      case 0x00008528: return "GL_VARIABLE_F_NV";
      case 0x00008529: return "GL_VARIABLE_G_NV";
      case 0x0000852a: return "GL_CONSTANT_COLOR0_NV";
      case 0x0000852b: return "GL_CONSTANT_COLOR1_NV";
      case 0x0000852c: return "GL_PRIMARY_COLOR_NV";
      case 0x0000852d: return "GL_SECONDARY_COLOR_NV";
      case 0x0000852e: return "GL_SPARE0_NV";
      case 0x0000852f: return "GL_SPARE1_NV";
      case 0x00008530: return "GL_DISCARD_NV";
      case 0x00008531: return "GL_E_TIMES_F_NV";
      case 0x00008532: return "GL_SPARE0_PLUS_SECONDARY_COLOR_NV";
      case 0x00008533: return "GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV";
      case 0x00008534: return "GL_MULTISAMPLE_FILTER_HINT_NV";
      case 0x00008535: return "GL_PER_STAGE_CONSTANTS_NV";
      case 0x00008536: return "GL_UNSIGNED_IDENTITY_NV";
      case 0x00008537: return "GL_UNSIGNED_INVERT_NV";
      case 0x00008538: return "GL_EXPAND_NORMAL_NV";
      case 0x00008539: return "GL_EXPAND_NEGATE_NV";
      case 0x0000853a: return "GL_HALF_BIAS_NORMAL_NV";
      case 0x0000853b: return "GL_HALF_BIAS_NEGATE_NV";
      case 0x0000853c: return "GL_SIGNED_IDENTITY_NV";
      case 0x0000853d: return "GL_SIGNED_NEGATE_NV";
      case 0x0000853e: return "GL_SCALE_BY_TWO_NV";
      case 0x0000853f: return "GL_SCALE_BY_FOUR_NV";
      case 0x00008540: return "GL_SCALE_BY_ONE_HALF_NV";
      case 0x00008541: return "GL_BIAS_BY_NEGATIVE_ONE_HALF_NV";
      case 0x00008542: return "GL_COMBINER_INPUT_NV";
      case 0x00008543: return "GL_COMBINER_MAPPING_NV";
      case 0x00008544: return "GL_COMBINER_COMPONENT_USAGE_NV";
      case 0x00008545: return "GL_COMBINER_AB_DOT_PRODUCT_NV";
      case 0x00008546: return "GL_COMBINER_CD_DOT_PRODUCT_NV";
      case 0x00008547: return "GL_COMBINER_MUX_SUM_NV";
      case 0x00008548: return "GL_COMBINER_SCALE_NV";
      case 0x00008549: return "GL_COMBINER_BIAS_NV";
      case 0x0000854a: return "GL_COMBINER_AB_OUTPUT_NV";
      case 0x0000854b: return "GL_COMBINER_CD_OUTPUT_NV";
      case 0x0000854c: return "GL_COMBINER_SUM_OUTPUT_NV";
      case 0x0000854d: return "GL_MAX_GENERAL_COMBINERS_NV";
      case 0x0000854e: return "GL_NUM_GENERAL_COMBINERS_NV";
      case 0x0000854f: return "GL_COLOR_SUM_CLAMP_NV";
      case 0x00008550: return "GL_COMBINER0_NV";
      case 0x00008551: return "GL_COMBINER1_NV";
      case 0x00008552: return "GL_COMBINER2_NV";
      case 0x00008553: return "GL_COMBINER3_NV";
      case 0x00008554: return "GL_COMBINER4_NV";
      case 0x00008555: return "GL_COMBINER5_NV";
      case 0x00008556: return "GL_COMBINER6_NV";
      case 0x00008557: return "GL_COMBINER7_NV";
      case 0x00008558: return "GL_PRIMITIVE_RESTART_NV";
      case 0x00008559: return "GL_PRIMITIVE_RESTART_INDEX_NV";
      case 0x0000855a: return "GL_FOG_DISTANCE_MODE_NV";
      case 0x0000855b: return "GL_EYE_RADIAL_NV";
      case 0x0000855c: return "GL_EYE_PLANE_ABSOLUTE_NV";
      case 0x0000855d: return "GL_EMBOSS_LIGHT_NV";
      case 0x0000855e: return "GL_EMBOSS_CONSTANT_NV";
      case 0x0000855f: return "GL_EMBOSS_MAP_NV";
      case 0x00008560: return "GL_RED_MIN_CLAMP_INGR";
      case 0x00008561: return "GL_GREEN_MIN_CLAMP_INGR";
      case 0x00008562: return "GL_BLUE_MIN_CLAMP_INGR";
      case 0x00008563: return "GL_ALPHA_MIN_CLAMP_INGR";
      case 0x00008564: return "GL_RED_MAX_CLAMP_INGR";
      case 0x00008565: return "GL_GREEN_MAX_CLAMP_INGR";
      case 0x00008566: return "GL_BLUE_MAX_CLAMP_INGR";
      case 0x00008567: return "GL_ALPHA_MAX_CLAMP_INGR";
      case 0x00008568: return "GL_INTERLACE_READ_INGR";
      case 0x00008570: return "GL_COMBINE";
      case 0x00008571: return "GL_COMBINE_RGB";
      case 0x00008572: return "GL_COMBINE_ALPHA";
      case 0x00008573: return "GL_RGB_SCALE";
      case 0x00008574: return "GL_ADD_SIGNED";
      case 0x00008575: return "GL_INTERPOLATE";
      case 0x00008576: return "GL_CONSTANT";
      case 0x00008577: return "GL_PRIMARY_COLOR";
      case 0x00008578: return "GL_PREVIOUS";
      case 0x00008580: return "GL_SOURCE0_RGB";
      case 0x00008581: return "GL_SOURCE1_RGB";
      case 0x00008582: return "GL_SOURCE2_RGB";
      case 0x00008583: return "GL_SOURCE3_RGB_NV";
      case 0x00008588: return "GL_SOURCE0_ALPHA";
      case 0x00008589: return "GL_SOURCE1_ALPHA";
      case 0x0000858a: return "GL_SOURCE2_ALPHA";
      case 0x0000858b: return "GL_SOURCE3_ALPHA_NV";
      case 0x00008590: return "GL_OPERAND0_RGB";
      case 0x00008591: return "GL_OPERAND1_RGB";
      case 0x00008592: return "GL_OPERAND2_RGB";
      case 0x00008593: return "GL_OPERAND3_RGB_NV";
      case 0x00008598: return "GL_OPERAND0_ALPHA";
      case 0x00008599: return "GL_OPERAND1_ALPHA";
      case 0x0000859a: return "GL_OPERAND2_ALPHA";
      case 0x0000859b: return "GL_OPERAND3_ALPHA_NV";
      case 0x000085a5: return "GL_EXTENDED_RANGE_SGIS";
      case 0x000085a6: return "GL_MIN_RED_SGIS";
      case 0x000085a7: return "GL_MAX_RED_SGIS";
      case 0x000085a8: return "GL_MIN_GREEN_SGIS";
      case 0x000085a9: return "GL_MAX_GREEN_SGIS";
      case 0x000085aa: return "GL_MIN_BLUE_SGIS";
      case 0x000085ab: return "GL_MAX_BLUE_SGIS";
      case 0x000085ac: return "GL_MIN_ALPHA_SGIS";
      case 0x000085ad: return "GL_MAX_ALPHA_SGIS";
      case 0x000085ae: return "GL_PERTURB_EXT";
      case 0x000085af: return "GL_TEXTURE_NORMAL_EXT";
      case 0x000085b0: return "GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE";
      case 0x000085b1: return "GL_TRANSFORM_HINT_APPLE";
      case 0x000085b2: return "GL_UNPACK_CLIENT_STORAGE_APPLE";
      case 0x000085b3: return "GL_BUFFER_OBJECT_APPLE";
      case 0x000085b4: return "GL_STORAGE_CLIENT_APPLE";
      case 0x000085b5: return "GL_VERTEX_ARRAY_BINDING";
      case 0x000085b7: return "GL_TEXTURE_RANGE_LENGTH_APPLE";
      case 0x000085b8: return "GL_TEXTURE_RANGE_POINTER_APPLE";
      case 0x000085b9: return "GL_YCBCR_422_APPLE";
      case 0x000085ba: return "GL_UNSIGNED_SHORT_8_8_MESA";
      case 0x000085bb: return "GL_UNSIGNED_SHORT_8_8_REV_MESA";
      case 0x000085bc: return "GL_TEXTURE_STORAGE_HINT_APPLE";
      case 0x000085bd: return "GL_STORAGE_PRIVATE_APPLE";
      case 0x000085be: return "GL_STORAGE_CACHED_APPLE";
      case 0x000085bf: return "GL_STORAGE_SHARED_APPLE";
      case 0x000085c0: return "GL_REPLACEMENT_CODE_ARRAY_SUN";
      case 0x000085c1: return "GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN";
      case 0x000085c2: return "GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN";
      case 0x000085c3: return "GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN";
      case 0x000085c4: return "GL_R1UI_V3F_SUN";
      case 0x000085c5: return "GL_R1UI_C4UB_V3F_SUN";
      case 0x000085c6: return "GL_R1UI_C3F_V3F_SUN";
      case 0x000085c7: return "GL_R1UI_N3F_V3F_SUN";
      case 0x000085c8: return "GL_R1UI_C4F_N3F_V3F_SUN";
      case 0x000085c9: return "GL_R1UI_T2F_V3F_SUN";
      case 0x000085ca: return "GL_R1UI_T2F_N3F_V3F_SUN";
      case 0x000085cb: return "GL_R1UI_T2F_C4F_N3F_V3F_SUN";
      case 0x000085cc: return "GL_SLICE_ACCUM_SUN";
      case 0x000085e0: return "GL_RGB_SIGNED_SGIX";
      case 0x000085e1: return "GL_RGBA_SIGNED_SGIX";
      case 0x000085e2: return "GL_ALPHA_SIGNED_SGIX";
      case 0x000085e3: return "GL_LUMINANCE_SIGNED_SGIX";
      case 0x000085e4: return "GL_INTENSITY_SIGNED_SGIX";
      case 0x000085e5: return "GL_LUMINANCE_ALPHA_SIGNED_SGIX";
      case 0x000085e6: return "GL_RGB16_SIGNED_SGIX";
      case 0x000085e7: return "GL_RGBA16_SIGNED_SGIX";
      case 0x000085e8: return "GL_ALPHA16_SIGNED_SGIX";
      case 0x000085e9: return "GL_LUMINANCE16_SIGNED_SGIX";
      case 0x000085ea: return "GL_INTENSITY16_SIGNED_SGIX";
      case 0x000085eb: return "GL_LUMINANCE16_ALPHA16_SIGNED_SGIX";
      case 0x000085ec: return "GL_RGB_EXTENDED_RANGE_SGIX";
      case 0x000085ed: return "GL_RGBA_EXTENDED_RANGE_SGIX";
      case 0x000085ee: return "GL_ALPHA_EXTENDED_RANGE_SGIX";
      case 0x000085ef: return "GL_LUMINANCE_EXTENDED_RANGE_SGIX";
      case 0x000085f0: return "GL_INTENSITY_EXTENDED_RANGE_SGIX";
      case 0x000085f1: return "GL_LUMINANCE_ALPHA_EXTENDED_RANGE_SGIX";
      case 0x000085f2: return "GL_RGB16_EXTENDED_RANGE_SGIX";
      case 0x000085f3: return "GL_RGBA16_EXTENDED_RANGE_SGIX";
      case 0x000085f4: return "GL_ALPHA16_EXTENDED_RANGE_SGIX";
      case 0x000085f5: return "GL_LUMINANCE16_EXTENDED_RANGE_SGIX";
      case 0x000085f6: return "GL_INTENSITY16_EXTENDED_RANGE_SGIX";
      case 0x000085f7: return "GL_LUMINANCE16_ALPHA16_EXTENDED_RANGE_SGIX";
      case 0x000085f8: return "GL_MIN_LUMINANCE_SGIS";
      case 0x000085f9: return "GL_MAX_LUMINANCE_SGIS";
      case 0x000085fa: return "GL_MIN_INTENSITY_SGIS";
      case 0x000085fb: return "GL_MAX_INTENSITY_SGIS";
      case 0x00008614: return "GL_QUAD_MESH_SUN";
      case 0x00008615: return "GL_TRIANGLE_MESH_SUN";
      case 0x00008620: return "GL_VERTEX_PROGRAM_ARB";
      case 0x00008621: return "GL_VERTEX_STATE_PROGRAM_NV";
      case 0x00008622: return "GL_VERTEX_ATTRIB_ARRAY_ENABLED";
      case 0x00008623: return "GL_VERTEX_ATTRIB_ARRAY_SIZE";
      case 0x00008624: return "GL_VERTEX_ATTRIB_ARRAY_STRIDE";
      case 0x00008625: return "GL_VERTEX_ATTRIB_ARRAY_TYPE";
      case 0x00008626: return "GL_CURRENT_VERTEX_ATTRIB";
      case 0x00008627: return "GL_PROGRAM_LENGTH_ARB";
      case 0x00008628: return "GL_PROGRAM_STRING_ARB";
      case 0x00008629: return "GL_MODELVIEW_PROJECTION_NV";
      case 0x0000862a: return "GL_IDENTITY_NV";
      case 0x0000862b: return "GL_INVERSE_NV";
      case 0x0000862c: return "GL_TRANSPOSE_NV";
      case 0x0000862d: return "GL_INVERSE_TRANSPOSE_NV";
      case 0x0000862e: return "GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB";
      case 0x0000862f: return "GL_MAX_PROGRAM_MATRICES_ARB";
      case 0x00008630: return "GL_MATRIX0_NV";
      case 0x00008631: return "GL_MATRIX1_NV";
      case 0x00008632: return "GL_MATRIX2_NV";
      case 0x00008633: return "GL_MATRIX3_NV";
      case 0x00008634: return "GL_MATRIX4_NV";
      case 0x00008635: return "GL_MATRIX5_NV";
      case 0x00008636: return "GL_MATRIX6_NV";
      case 0x00008637: return "GL_MATRIX7_NV";
      case 0x00008640: return "GL_CURRENT_MATRIX_STACK_DEPTH_ARB";
      case 0x00008641: return "GL_CURRENT_MATRIX_ARB";
      case 0x00008642: return "GL_PROGRAM_POINT_SIZE";
      case 0x00008643: return "GL_VERTEX_PROGRAM_TWO_SIDE";
      case 0x00008644: return "GL_PROGRAM_PARAMETER_NV";
      case 0x00008645: return "GL_VERTEX_ATTRIB_ARRAY_POINTER";
      case 0x00008646: return "GL_PROGRAM_TARGET_NV";
      case 0x00008647: return "GL_PROGRAM_RESIDENT_NV";
      case 0x00008648: return "GL_TRACK_MATRIX_NV";
      case 0x00008649: return "GL_TRACK_MATRIX_TRANSFORM_NV";
      case 0x0000864a: return "GL_VERTEX_PROGRAM_BINDING_NV";
      case 0x0000864b: return "GL_PROGRAM_ERROR_POSITION_ARB";
      case 0x0000864c: return "GL_OFFSET_TEXTURE_RECTANGLE_NV";
      case 0x0000864d: return "GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV";
      case 0x0000864e: return "GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV";
      case 0x0000864f: return "GL_DEPTH_CLAMP";
      case 0x00008650: return "GL_VERTEX_ATTRIB_ARRAY0_NV";
      case 0x00008651: return "GL_VERTEX_ATTRIB_ARRAY1_NV";
      case 0x00008652: return "GL_VERTEX_ATTRIB_ARRAY2_NV";
      case 0x00008653: return "GL_VERTEX_ATTRIB_ARRAY3_NV";
      case 0x00008654: return "GL_VERTEX_ATTRIB_ARRAY4_NV";
      case 0x00008655: return "GL_VERTEX_ATTRIB_ARRAY5_NV";
      case 0x00008656: return "GL_VERTEX_ATTRIB_ARRAY6_NV";
      case 0x00008657: return "GL_VERTEX_ATTRIB_ARRAY7_NV";
      case 0x00008658: return "GL_VERTEX_ATTRIB_ARRAY8_NV";
      case 0x00008659: return "GL_VERTEX_ATTRIB_ARRAY9_NV";
      case 0x0000865a: return "GL_VERTEX_ATTRIB_ARRAY10_NV";
      case 0x0000865b: return "GL_VERTEX_ATTRIB_ARRAY11_NV";
      case 0x0000865c: return "GL_VERTEX_ATTRIB_ARRAY12_NV";
      case 0x0000865d: return "GL_VERTEX_ATTRIB_ARRAY13_NV";
      case 0x0000865e: return "GL_VERTEX_ATTRIB_ARRAY14_NV";
      case 0x0000865f: return "GL_VERTEX_ATTRIB_ARRAY15_NV";
      case 0x00008660: return "GL_MAP1_VERTEX_ATTRIB0_4_NV";
      case 0x00008661: return "GL_MAP1_VERTEX_ATTRIB1_4_NV";
      case 0x00008662: return "GL_MAP1_VERTEX_ATTRIB2_4_NV";
      case 0x00008663: return "GL_MAP1_VERTEX_ATTRIB3_4_NV";
      case 0x00008664: return "GL_MAP1_VERTEX_ATTRIB4_4_NV";
      case 0x00008665: return "GL_MAP1_VERTEX_ATTRIB5_4_NV";
      case 0x00008666: return "GL_MAP1_VERTEX_ATTRIB6_4_NV";
      case 0x00008667: return "GL_MAP1_VERTEX_ATTRIB7_4_NV";
      case 0x00008668: return "GL_MAP1_VERTEX_ATTRIB8_4_NV";
      case 0x00008669: return "GL_MAP1_VERTEX_ATTRIB9_4_NV";
      case 0x0000866a: return "GL_MAP1_VERTEX_ATTRIB10_4_NV";
      case 0x0000866b: return "GL_MAP1_VERTEX_ATTRIB11_4_NV";
      case 0x0000866c: return "GL_MAP1_VERTEX_ATTRIB12_4_NV";
      case 0x0000866d: return "GL_MAP1_VERTEX_ATTRIB13_4_NV";
      case 0x0000866e: return "GL_MAP1_VERTEX_ATTRIB14_4_NV";
      case 0x0000866f: return "GL_MAP1_VERTEX_ATTRIB15_4_NV";
      case 0x00008670: return "GL_MAP2_VERTEX_ATTRIB0_4_NV";
      case 0x00008671: return "GL_MAP2_VERTEX_ATTRIB1_4_NV";
      case 0x00008672: return "GL_MAP2_VERTEX_ATTRIB2_4_NV";
      case 0x00008673: return "GL_MAP2_VERTEX_ATTRIB3_4_NV";
      case 0x00008674: return "GL_MAP2_VERTEX_ATTRIB4_4_NV";
      case 0x00008675: return "GL_MAP2_VERTEX_ATTRIB5_4_NV";
      case 0x00008676: return "GL_MAP2_VERTEX_ATTRIB6_4_NV";
      case 0x00008677: return "GL_PROGRAM_BINDING_ARB";
      case 0x00008678: return "GL_MAP2_VERTEX_ATTRIB8_4_NV";
      case 0x00008679: return "GL_MAP2_VERTEX_ATTRIB9_4_NV";
      case 0x0000867a: return "GL_MAP2_VERTEX_ATTRIB10_4_NV";
      case 0x0000867b: return "GL_MAP2_VERTEX_ATTRIB11_4_NV";
      case 0x0000867c: return "GL_MAP2_VERTEX_ATTRIB12_4_NV";
      case 0x0000867d: return "GL_MAP2_VERTEX_ATTRIB13_4_NV";
      case 0x0000867e: return "GL_MAP2_VERTEX_ATTRIB14_4_NV";
      case 0x0000867f: return "GL_MAP2_VERTEX_ATTRIB15_4_NV";
      case 0x000086a0: return "GL_TEXTURE_COMPRESSED_IMAGE_SIZE";
      case 0x000086a1: return "GL_TEXTURE_COMPRESSED";
      case 0x000086a2: return "GL_NUM_COMPRESSED_TEXTURE_FORMATS";
      case 0x000086a3: return "GL_COMPRESSED_TEXTURE_FORMATS";
      case 0x000086a4: return "GL_MAX_VERTEX_UNITS_ARB";
      case 0x000086a5: return "GL_ACTIVE_VERTEX_UNITS_ARB";
      case 0x000086a6: return "GL_WEIGHT_SUM_UNITY_ARB";
      case 0x000086a7: return "GL_VERTEX_BLEND_ARB";
      case 0x000086a8: return "GL_CURRENT_WEIGHT_ARB";
      case 0x000086a9: return "GL_WEIGHT_ARRAY_TYPE_ARB";
      case 0x000086aa: return "GL_WEIGHT_ARRAY_STRIDE_ARB";
      case 0x000086ab: return "GL_WEIGHT_ARRAY_SIZE_ARB";
      case 0x000086ac: return "GL_WEIGHT_ARRAY_POINTER_ARB";
      case 0x000086ad: return "GL_WEIGHT_ARRAY_ARB";
      case 0x000086ae: return "GL_DOT3_RGB";
      case 0x000086af: return "GL_DOT3_RGBA";
      case 0x000086b0: return "GL_COMPRESSED_RGB_FXT1_3DFX";
      case 0x000086b1: return "GL_COMPRESSED_RGBA_FXT1_3DFX";
      case 0x000086b2: return "GL_MULTISAMPLE_3DFX";
      case 0x000086b3: return "GL_SAMPLE_BUFFERS_3DFX";
      case 0x000086b4: return "GL_SAMPLES_3DFX";
      case 0x000086c0: return "GL_EVAL_2D_NV";
      case 0x000086c1: return "GL_EVAL_TRIANGULAR_2D_NV";
      case 0x000086c2: return "GL_MAP_TESSELLATION_NV";
      case 0x000086c3: return "GL_MAP_ATTRIB_U_ORDER_NV";
      case 0x000086c4: return "GL_MAP_ATTRIB_V_ORDER_NV";
      case 0x000086c5: return "GL_EVAL_FRACTIONAL_TESSELLATION_NV";
      case 0x000086c6: return "GL_EVAL_VERTEX_ATTRIB0_NV";
      case 0x000086c7: return "GL_EVAL_VERTEX_ATTRIB1_NV";
      case 0x000086c8: return "GL_EVAL_VERTEX_ATTRIB2_NV";
      case 0x000086c9: return "GL_EVAL_VERTEX_ATTRIB3_NV";
      case 0x000086ca: return "GL_EVAL_VERTEX_ATTRIB4_NV";
      case 0x000086cb: return "GL_EVAL_VERTEX_ATTRIB5_NV";
      case 0x000086cc: return "GL_EVAL_VERTEX_ATTRIB6_NV";
      case 0x000086cd: return "GL_EVAL_VERTEX_ATTRIB7_NV";
      case 0x000086ce: return "GL_EVAL_VERTEX_ATTRIB8_NV";
      case 0x000086cf: return "GL_EVAL_VERTEX_ATTRIB9_NV";
      case 0x000086d0: return "GL_EVAL_VERTEX_ATTRIB10_NV";
      case 0x000086d1: return "GL_EVAL_VERTEX_ATTRIB11_NV";
      case 0x000086d2: return "GL_EVAL_VERTEX_ATTRIB12_NV";
      case 0x000086d3: return "GL_EVAL_VERTEX_ATTRIB13_NV";
      case 0x000086d4: return "GL_EVAL_VERTEX_ATTRIB14_NV";
      case 0x000086d5: return "GL_EVAL_VERTEX_ATTRIB15_NV";
      case 0x000086d6: return "GL_MAX_MAP_TESSELLATION_NV";
      case 0x000086d7: return "GL_MAX_RATIONAL_EVAL_ORDER_NV";
      case 0x000086d8: return "GL_MAX_PROGRAM_PATCH_ATTRIBS_NV";
      case 0x000086d9: return "GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV";
      case 0x000086da: return "GL_UNSIGNED_INT_S8_S8_8_8_NV";
      case 0x000086db: return "GL_UNSIGNED_INT_8_8_S8_S8_REV_NV";
      case 0x000086dc: return "GL_DSDT_MAG_INTENSITY_NV";
      case 0x000086dd: return "GL_SHADER_CONSISTENT_NV";
      case 0x000086de: return "GL_TEXTURE_SHADER_NV";
      case 0x000086df: return "GL_SHADER_OPERATION_NV";
      case 0x000086e0: return "GL_CULL_MODES_NV";
      case 0x000086e1: return "GL_OFFSET_TEXTURE_2D_MATRIX_NV";
      case 0x000086e2: return "GL_OFFSET_TEXTURE_2D_SCALE_NV";
      case 0x000086e3: return "GL_OFFSET_TEXTURE_2D_BIAS_NV";
      case 0x000086e4: return "GL_PREVIOUS_TEXTURE_INPUT_NV";
      case 0x000086e5: return "GL_CONST_EYE_NV";
      case 0x000086e6: return "GL_PASS_THROUGH_NV";
      case 0x000086e7: return "GL_CULL_FRAGMENT_NV";
      case 0x000086e8: return "GL_OFFSET_TEXTURE_2D_NV";
      case 0x000086e9: return "GL_DEPENDENT_AR_TEXTURE_2D_NV";
      case 0x000086ea: return "GL_DEPENDENT_GB_TEXTURE_2D_NV";
      case 0x000086eb: return "GL_SURFACE_STATE_NV";
      case 0x000086ec: return "GL_DOT_PRODUCT_NV";
      case 0x000086ed: return "GL_DOT_PRODUCT_DEPTH_REPLACE_NV";
      case 0x000086ee: return "GL_DOT_PRODUCT_TEXTURE_2D_NV";
      case 0x000086ef: return "GL_DOT_PRODUCT_TEXTURE_3D_NV";
      case 0x000086f0: return "GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV";
      case 0x000086f1: return "GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV";
      case 0x000086f2: return "GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV";
      case 0x000086f3: return "GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV";
      case 0x000086f4: return "GL_HILO_NV";
      case 0x000086f5: return "GL_DSDT_NV";
      case 0x000086f6: return "GL_DSDT_MAG_NV";
      case 0x000086f7: return "GL_DSDT_MAG_VIB_NV";
      case 0x000086f8: return "GL_HILO16_NV";
      case 0x000086f9: return "GL_SIGNED_HILO_NV";
      case 0x000086fa: return "GL_SIGNED_HILO16_NV";
      case 0x000086fb: return "GL_SIGNED_RGBA_NV";
      case 0x000086fc: return "GL_SIGNED_RGBA8_NV";
      case 0x000086fd: return "GL_SURFACE_REGISTERED_NV";
      case 0x000086fe: return "GL_SIGNED_RGB_NV";
      case 0x000086ff: return "GL_SIGNED_RGB8_NV";
      case 0x00008700: return "GL_SURFACE_MAPPED_NV";
      case 0x00008701: return "GL_SIGNED_LUMINANCE_NV";
      case 0x00008702: return "GL_SIGNED_LUMINANCE8_NV";
      case 0x00008703: return "GL_SIGNED_LUMINANCE_ALPHA_NV";
      case 0x00008704: return "GL_SIGNED_LUMINANCE8_ALPHA8_NV";
      case 0x00008705: return "GL_SIGNED_ALPHA_NV";
      case 0x00008706: return "GL_SIGNED_ALPHA8_NV";
      case 0x00008707: return "GL_SIGNED_INTENSITY_NV";
      case 0x00008708: return "GL_SIGNED_INTENSITY8_NV";
      case 0x00008709: return "GL_DSDT8_NV";
      case 0x0000870a: return "GL_DSDT8_MAG8_NV";
      case 0x0000870b: return "GL_DSDT8_MAG8_INTENSITY8_NV";
      case 0x0000870c: return "GL_SIGNED_RGB_UNSIGNED_ALPHA_NV";
      case 0x0000870d: return "GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV";
      case 0x0000870e: return "GL_HI_SCALE_NV";
      case 0x0000870f: return "GL_LO_SCALE_NV";
      case 0x00008710: return "GL_DS_SCALE_NV";
      case 0x00008711: return "GL_DT_SCALE_NV";
      case 0x00008712: return "GL_MAGNITUDE_SCALE_NV";
      case 0x00008713: return "GL_VIBRANCE_SCALE_NV";
      case 0x00008714: return "GL_HI_BIAS_NV";
      case 0x00008715: return "GL_LO_BIAS_NV";
      case 0x00008716: return "GL_DS_BIAS_NV";
      case 0x00008717: return "GL_DT_BIAS_NV";
      case 0x00008718: return "GL_MAGNITUDE_BIAS_NV";
      case 0x00008719: return "GL_VIBRANCE_BIAS_NV";
      case 0x0000871a: return "GL_TEXTURE_BORDER_VALUES_NV";
      case 0x0000871b: return "GL_TEXTURE_HI_SIZE_NV";
      case 0x0000871c: return "GL_TEXTURE_LO_SIZE_NV";
      case 0x0000871d: return "GL_TEXTURE_DS_SIZE_NV";
      case 0x0000871e: return "GL_TEXTURE_DT_SIZE_NV";
      case 0x0000871f: return "GL_TEXTURE_MAG_SIZE_NV";
      case 0x00008722: return "GL_MODELVIEW2_ARB";
      case 0x00008723: return "GL_MODELVIEW3_ARB";
      case 0x00008724: return "GL_MODELVIEW4_ARB";
      case 0x00008725: return "GL_MODELVIEW5_ARB";
      case 0x00008726: return "GL_MODELVIEW6_ARB";
      case 0x00008727: return "GL_MODELVIEW7_ARB";
      case 0x00008728: return "GL_MODELVIEW8_ARB";
      case 0x00008729: return "GL_MODELVIEW9_ARB";
      case 0x0000872a: return "GL_MODELVIEW10_ARB";
      case 0x0000872b: return "GL_MODELVIEW11_ARB";
      case 0x0000872c: return "GL_MODELVIEW12_ARB";
      case 0x0000872d: return "GL_MODELVIEW13_ARB";
      case 0x0000872e: return "GL_MODELVIEW14_ARB";
      case 0x0000872f: return "GL_MODELVIEW15_ARB";
      case 0x00008730: return "GL_MODELVIEW16_ARB";
      case 0x00008731: return "GL_MODELVIEW17_ARB";
      case 0x00008732: return "GL_MODELVIEW18_ARB";
      case 0x00008733: return "GL_MODELVIEW19_ARB";
      case 0x00008734: return "GL_MODELVIEW20_ARB";
      case 0x00008735: return "GL_MODELVIEW21_ARB";
      case 0x00008736: return "GL_MODELVIEW22_ARB";
      case 0x00008737: return "GL_MODELVIEW23_ARB";
      case 0x00008738: return "GL_MODELVIEW24_ARB";
      case 0x00008739: return "GL_MODELVIEW25_ARB";
      case 0x0000873a: return "GL_MODELVIEW26_ARB";
      case 0x0000873b: return "GL_MODELVIEW27_ARB";
      case 0x0000873c: return "GL_MODELVIEW28_ARB";
      case 0x0000873d: return "GL_MODELVIEW29_ARB";
      case 0x0000873e: return "GL_MODELVIEW30_ARB";
      case 0x0000873f: return "GL_MODELVIEW31_ARB";
      case 0x00008740: return "GL_Z400_BINARY_AMD";
      case 0x00008741: return "GL_PROGRAM_BINARY_LENGTH";
      case 0x00008742: return "GL_MIRROR_CLAMP_EXT";
      case 0x00008743: return "GL_MIRROR_CLAMP_TO_EDGE_EXT";
      case 0x00008744: return "GL_MODULATE_ADD_ATI";
      case 0x00008745: return "GL_MODULATE_SIGNED_ADD_ATI";
      case 0x00008746: return "GL_MODULATE_SUBTRACT_ATI";
      case 0x0000874a: return "GL_SET_AMD";
      case 0x0000874b: return "GL_REPLACE_VALUE_AMD";
      case 0x0000874c: return "GL_STENCIL_OP_VALUE_AMD";
      case 0x0000874d: return "GL_STENCIL_BACK_OP_VALUE_AMD";
      case 0x0000874e: return "GL_VERTEX_ATTRIB_ARRAY_LONG";
      case 0x00008757: return "GL_YCBCR_MESA";
      case 0x00008758: return "GL_PACK_INVERT_MESA";
      case 0x00008759: return "GL_TEXTURE_1D_STACK_MESAX";
      case 0x0000875a: return "GL_TEXTURE_2D_STACK_MESAX";
      case 0x0000875b: return "GL_PROXY_TEXTURE_1D_STACK_MESAX";
      case 0x0000875c: return "GL_PROXY_TEXTURE_2D_STACK_MESAX";
      case 0x0000875d: return "GL_TEXTURE_1D_STACK_BINDING_MESAX";
      case 0x0000875e: return "GL_TEXTURE_2D_STACK_BINDING_MESAX";
      case 0x00008760: return "GL_STATIC_ATI";
      case 0x00008761: return "GL_DYNAMIC_ATI";
      case 0x00008762: return "GL_PRESERVE_ATI";
      case 0x00008763: return "GL_DISCARD_ATI";
      case 0x00008764: return "GL_BUFFER_SIZE";
      case 0x00008765: return "GL_BUFFER_USAGE";
      case 0x00008766: return "GL_ARRAY_OBJECT_BUFFER_ATI";
      case 0x00008767: return "GL_ARRAY_OBJECT_OFFSET_ATI";
      case 0x00008768: return "GL_ELEMENT_ARRAY_ATI";
      case 0x00008769: return "GL_ELEMENT_ARRAY_TYPE_ATI";
      case 0x0000876a: return "GL_ELEMENT_ARRAY_POINTER_ATI";
      case 0x0000876b: return "GL_MAX_VERTEX_STREAMS_ATI";
      case 0x0000876c: return "GL_VERTEX_SOURCE_ATI";
      case 0x0000876d: return "GL_VERTEX_STREAM0_ATI";
      case 0x0000876e: return "GL_VERTEX_STREAM1_ATI";
      case 0x0000876f: return "GL_VERTEX_STREAM2_ATI";
      case 0x00008770: return "GL_VERTEX_STREAM3_ATI";
      case 0x00008771: return "GL_VERTEX_STREAM4_ATI";
      case 0x00008772: return "GL_VERTEX_STREAM5_ATI";
      case 0x00008773: return "GL_VERTEX_STREAM6_ATI";
      case 0x00008774: return "GL_VERTEX_STREAM7_ATI";
      case 0x00008775: return "GL_BUMP_ROT_MATRIX_ATI";
      case 0x00008776: return "GL_BUMP_ROT_MATRIX_SIZE_ATI";
      case 0x00008777: return "GL_BUMP_NUM_TEX_UNITS_ATI";
      case 0x00008778: return "GL_BUMP_TEX_UNITS_ATI";
      case 0x00008779: return "GL_DUDV_ATI";
      case 0x0000877a: return "GL_DU8DV8_ATI";
      case 0x0000877b: return "GL_BUMP_ENVMAP_ATI";
      case 0x0000877c: return "GL_BUMP_TARGET_ATI";
      case 0x00008780: return "GL_VERTEX_SHADER_EXT";
      case 0x00008781: return "GL_VERTEX_SHADER_BINDING_EXT";
      case 0x00008782: return "GL_OP_INDEX_EXT";
      case 0x00008783: return "GL_OP_NEGATE_EXT";
      case 0x00008784: return "GL_OP_DOT3_EXT";
      case 0x00008785: return "GL_OP_DOT4_EXT";
      case 0x00008786: return "GL_OP_MUL_EXT";
      case 0x00008787: return "GL_OP_ADD_EXT";
      case 0x00008788: return "GL_OP_MADD_EXT";
      case 0x00008789: return "GL_OP_FRAC_EXT";
      case 0x0000878a: return "GL_OP_MAX_EXT";
      case 0x0000878b: return "GL_OP_MIN_EXT";
      case 0x0000878c: return "GL_OP_SET_GE_EXT";
      case 0x0000878d: return "GL_OP_SET_LT_EXT";
      case 0x0000878e: return "GL_OP_CLAMP_EXT";
      case 0x0000878f: return "GL_OP_FLOOR_EXT";
      case 0x00008790: return "GL_OP_ROUND_EXT";
      case 0x00008791: return "GL_OP_EXP_BASE_2_EXT";
      case 0x00008792: return "GL_OP_LOG_BASE_2_EXT";
      case 0x00008793: return "GL_OP_POWER_EXT";
      case 0x00008794: return "GL_OP_RECIP_EXT";
      case 0x00008795: return "GL_OP_RECIP_SQRT_EXT";
      case 0x00008796: return "GL_OP_SUB_EXT";
      case 0x00008797: return "GL_OP_CROSS_PRODUCT_EXT";
      case 0x00008798: return "GL_OP_MULTIPLY_MATRIX_EXT";
      case 0x00008799: return "GL_OP_MOV_EXT";
      case 0x0000879a: return "GL_OUTPUT_VERTEX_EXT";
      case 0x0000879b: return "GL_OUTPUT_COLOR0_EXT";
      case 0x0000879c: return "GL_OUTPUT_COLOR1_EXT";
      case 0x0000879d: return "GL_OUTPUT_TEXTURE_COORD0_EXT";
      case 0x0000879e: return "GL_OUTPUT_TEXTURE_COORD1_EXT";
      case 0x0000879f: return "GL_OUTPUT_TEXTURE_COORD2_EXT";
      case 0x000087a0: return "GL_OUTPUT_TEXTURE_COORD3_EXT";
      case 0x000087a1: return "GL_OUTPUT_TEXTURE_COORD4_EXT";
      case 0x000087a2: return "GL_OUTPUT_TEXTURE_COORD5_EXT";
      case 0x000087a3: return "GL_OUTPUT_TEXTURE_COORD6_EXT";
      case 0x000087a4: return "GL_OUTPUT_TEXTURE_COORD7_EXT";
      case 0x000087a5: return "GL_OUTPUT_TEXTURE_COORD8_EXT";
      case 0x000087a6: return "GL_OUTPUT_TEXTURE_COORD9_EXT";
      case 0x000087a7: return "GL_OUTPUT_TEXTURE_COORD10_EXT";
      case 0x000087a8: return "GL_OUTPUT_TEXTURE_COORD11_EXT";
      case 0x000087a9: return "GL_OUTPUT_TEXTURE_COORD12_EXT";
      case 0x000087aa: return "GL_OUTPUT_TEXTURE_COORD13_EXT";
      case 0x000087ab: return "GL_OUTPUT_TEXTURE_COORD14_EXT";
      case 0x000087ac: return "GL_OUTPUT_TEXTURE_COORD15_EXT";
      case 0x000087ad: return "GL_OUTPUT_TEXTURE_COORD16_EXT";
      case 0x000087ae: return "GL_OUTPUT_TEXTURE_COORD17_EXT";
      case 0x000087af: return "GL_OUTPUT_TEXTURE_COORD18_EXT";
      case 0x000087b0: return "GL_OUTPUT_TEXTURE_COORD19_EXT";
      case 0x000087b1: return "GL_OUTPUT_TEXTURE_COORD20_EXT";
      case 0x000087b2: return "GL_OUTPUT_TEXTURE_COORD21_EXT";
      case 0x000087b3: return "GL_OUTPUT_TEXTURE_COORD22_EXT";
      case 0x000087b4: return "GL_OUTPUT_TEXTURE_COORD23_EXT";
      case 0x000087b5: return "GL_OUTPUT_TEXTURE_COORD24_EXT";
      case 0x000087b6: return "GL_OUTPUT_TEXTURE_COORD25_EXT";
      case 0x000087b7: return "GL_OUTPUT_TEXTURE_COORD26_EXT";
      case 0x000087b8: return "GL_OUTPUT_TEXTURE_COORD27_EXT";
      case 0x000087b9: return "GL_OUTPUT_TEXTURE_COORD28_EXT";
      case 0x000087ba: return "GL_OUTPUT_TEXTURE_COORD29_EXT";
      case 0x000087bb: return "GL_OUTPUT_TEXTURE_COORD30_EXT";
      case 0x000087bc: return "GL_OUTPUT_TEXTURE_COORD31_EXT";
      case 0x000087bd: return "GL_OUTPUT_FOG_EXT";
      case 0x000087be: return "GL_SCALAR_EXT";
      case 0x000087bf: return "GL_VECTOR_EXT";
      case 0x000087c0: return "GL_MATRIX_EXT";
      case 0x000087c1: return "GL_VARIANT_EXT";
      case 0x000087c2: return "GL_INVARIANT_EXT";
      case 0x000087c3: return "GL_LOCAL_CONSTANT_EXT";
      case 0x000087c4: return "GL_LOCAL_EXT";
      case 0x000087c5: return "GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT";
      case 0x000087c6: return "GL_MAX_VERTEX_SHADER_VARIANTS_EXT";
      case 0x000087c7: return "GL_MAX_VERTEX_SHADER_INVARIANTS_EXT";
      case 0x000087c8: return "GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT";
      case 0x000087c9: return "GL_MAX_VERTEX_SHADER_LOCALS_EXT";
      case 0x000087ca: return "GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT";
      case 0x000087cb: return "GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT";
      case 0x000087cc: return "GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT";
      case 0x000087cd: return "GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT";
      case 0x000087ce: return "GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT";
      case 0x000087cf: return "GL_VERTEX_SHADER_INSTRUCTIONS_EXT";
      case 0x000087d0: return "GL_VERTEX_SHADER_VARIANTS_EXT";
      case 0x000087d1: return "GL_VERTEX_SHADER_INVARIANTS_EXT";
      case 0x000087d2: return "GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT";
      case 0x000087d3: return "GL_VERTEX_SHADER_LOCALS_EXT";
      case 0x000087d4: return "GL_VERTEX_SHADER_OPTIMIZED_EXT";
      case 0x000087d5: return "GL_X_EXT";
      case 0x000087d6: return "GL_Y_EXT";
      case 0x000087d7: return "GL_Z_EXT";
      case 0x000087d8: return "GL_W_EXT";
      case 0x000087d9: return "GL_NEGATIVE_X_EXT";
      case 0x000087da: return "GL_NEGATIVE_Y_EXT";
      case 0x000087db: return "GL_NEGATIVE_Z_EXT";
      case 0x000087dc: return "GL_NEGATIVE_W_EXT";
      case 0x000087dd: return "GL_ZERO_EXT";
      case 0x000087de: return "GL_ONE_EXT";
      case 0x000087df: return "GL_NEGATIVE_ONE_EXT";
      case 0x000087e0: return "GL_NORMALIZED_RANGE_EXT";
      case 0x000087e1: return "GL_FULL_RANGE_EXT";
      case 0x000087e2: return "GL_CURRENT_VERTEX_EXT";
      case 0x000087e3: return "GL_MVP_MATRIX_EXT";
      case 0x000087e4: return "GL_VARIANT_VALUE_EXT";
      case 0x000087e5: return "GL_VARIANT_DATATYPE_EXT";
      case 0x000087e6: return "GL_VARIANT_ARRAY_STRIDE_EXT";
      case 0x000087e7: return "GL_VARIANT_ARRAY_TYPE_EXT";
      case 0x000087e8: return "GL_VARIANT_ARRAY_EXT";
      case 0x000087e9: return "GL_VARIANT_ARRAY_POINTER_EXT";
      case 0x000087ea: return "GL_INVARIANT_VALUE_EXT";
      case 0x000087eb: return "GL_INVARIANT_DATATYPE_EXT";
      case 0x000087ec: return "GL_LOCAL_CONSTANT_VALUE_EXT";
      case 0x000087ed: return "GL_LOCAL_CONSTANT_DATATYPE_EXT";
      case 0x000087ee: return "GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD";
      case 0x000087f0: return "GL_PN_TRIANGLES_ATI";
      case 0x000087f1: return "GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI";
      case 0x000087f2: return "GL_PN_TRIANGLES_POINT_MODE_ATI";
      case 0x000087f3: return "GL_PN_TRIANGLES_NORMAL_MODE_ATI";
      case 0x000087f4: return "GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI";
      case 0x000087f5: return "GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI";
      case 0x000087f6: return "GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI";
      case 0x000087f7: return "GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI";
      case 0x000087f8: return "GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI";
      case 0x000087f9: return "GL_3DC_X_AMD";
      case 0x000087fa: return "GL_3DC_XY_AMD";
      case 0x000087fb: return "GL_VBO_FREE_MEMORY_ATI";
      case 0x000087fc: return "GL_TEXTURE_FREE_MEMORY_ATI";
      case 0x000087fd: return "GL_RENDERBUFFER_FREE_MEMORY_ATI";
      case 0x000087fe: return "GL_NUM_PROGRAM_BINARY_FORMATS";
      case 0x000087ff: return "GL_PROGRAM_BINARY_FORMATS";
      case 0x00008800: return "GL_STENCIL_BACK_FUNC";
      case 0x00008801: return "GL_STENCIL_BACK_FAIL";
      case 0x00008802: return "GL_STENCIL_BACK_PASS_DEPTH_FAIL";
      case 0x00008803: return "GL_STENCIL_BACK_PASS_DEPTH_PASS";
      case 0x00008804: return "GL_FRAGMENT_PROGRAM_ARB";
      case 0x00008805: return "GL_PROGRAM_ALU_INSTRUCTIONS_ARB";
      case 0x00008806: return "GL_PROGRAM_TEX_INSTRUCTIONS_ARB";
      case 0x00008807: return "GL_PROGRAM_TEX_INDIRECTIONS_ARB";
      case 0x00008808: return "GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB";
      case 0x00008809: return "GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB";
      case 0x0000880a: return "GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB";
      case 0x0000880b: return "GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB";
      case 0x0000880c: return "GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB";
      case 0x0000880d: return "GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB";
      case 0x0000880e: return "GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB";
      case 0x0000880f: return "GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB";
      case 0x00008810: return "GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB";
      case 0x00008814: return "GL_RGBA32F";
      case 0x00008815: return "GL_RGB32F";
      case 0x00008816: return "GL_ALPHA32F_ARB";
      case 0x00008817: return "GL_INTENSITY32F_ARB";
      case 0x00008818: return "GL_LUMINANCE32F_ARB";
      case 0x00008819: return "GL_LUMINANCE_ALPHA32F_ARB";
      case 0x0000881a: return "GL_RGBA16F";
      case 0x0000881b: return "GL_RGB16F";
      case 0x0000881c: return "GL_ALPHA16F_ARB";
      case 0x0000881d: return "GL_INTENSITY16F_ARB";
      case 0x0000881e: return "GL_LUMINANCE16F_ARB";
      case 0x0000881f: return "GL_LUMINANCE_ALPHA16F_ARB";
      case 0x00008820: return "GL_RGBA_FLOAT_MODE_ARB";
      case 0x00008823: return "GL_WRITEONLY_RENDERING_QCOM";
      case 0x00008824: return "GL_MAX_DRAW_BUFFERS";
      case 0x00008825: return "GL_DRAW_BUFFER0";
      case 0x00008826: return "GL_DRAW_BUFFER1";
      case 0x00008827: return "GL_DRAW_BUFFER2";
      case 0x00008828: return "GL_DRAW_BUFFER3";
      case 0x00008829: return "GL_DRAW_BUFFER4";
      case 0x0000882a: return "GL_DRAW_BUFFER5";
      case 0x0000882b: return "GL_DRAW_BUFFER6";
      case 0x0000882c: return "GL_DRAW_BUFFER7";
      case 0x0000882d: return "GL_DRAW_BUFFER8";
      case 0x0000882e: return "GL_DRAW_BUFFER9";
      case 0x0000882f: return "GL_DRAW_BUFFER10";
      case 0x00008830: return "GL_DRAW_BUFFER11";
      case 0x00008831: return "GL_DRAW_BUFFER12";
      case 0x00008832: return "GL_DRAW_BUFFER13";
      case 0x00008833: return "GL_DRAW_BUFFER14";
      case 0x00008834: return "GL_DRAW_BUFFER15";
      case 0x00008837: return "GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI";
      case 0x0000883d: return "GL_BLEND_EQUATION_ALPHA";
      case 0x0000883f: return "GL_SUBSAMPLE_DISTANCE_AMD";
      case 0x00008840: return "GL_MATRIX_PALETTE_ARB";
      case 0x00008841: return "GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB";
      case 0x00008842: return "GL_MAX_PALETTE_MATRICES_ARB";
      case 0x00008843: return "GL_CURRENT_PALETTE_MATRIX_ARB";
      case 0x00008844: return "GL_MATRIX_INDEX_ARRAY_ARB";
      case 0x00008845: return "GL_CURRENT_MATRIX_INDEX_ARB";
      case 0x00008846: return "GL_MATRIX_INDEX_ARRAY_SIZE_ARB";
      case 0x00008847: return "GL_MATRIX_INDEX_ARRAY_TYPE_ARB";
      case 0x00008848: return "GL_MATRIX_INDEX_ARRAY_STRIDE_ARB";
      case 0x00008849: return "GL_MATRIX_INDEX_ARRAY_POINTER_ARB";
      case 0x0000884a: return "GL_TEXTURE_DEPTH_SIZE";
      case 0x0000884b: return "GL_DEPTH_TEXTURE_MODE";
      case 0x0000884c: return "GL_TEXTURE_COMPARE_MODE";
      case 0x0000884d: return "GL_TEXTURE_COMPARE_FUNC";
      case 0x0000884e: return "GL_COMPARE_R_TO_TEXTURE";
      case 0x0000884f: return "GL_TEXTURE_CUBE_MAP_SEAMLESS";
      case 0x00008850: return "GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV";
      case 0x00008851: return "GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV";
      case 0x00008852: return "GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV";
      case 0x00008853: return "GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV";
      case 0x00008854: return "GL_OFFSET_HILO_TEXTURE_2D_NV";
      case 0x00008855: return "GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV";
      case 0x00008856: return "GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV";
      case 0x00008857: return "GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV";
      case 0x00008858: return "GL_DEPENDENT_HILO_TEXTURE_2D_NV";
      case 0x00008859: return "GL_DEPENDENT_RGB_TEXTURE_3D_NV";
      case 0x0000885a: return "GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV";
      case 0x0000885b: return "GL_DOT_PRODUCT_PASS_THROUGH_NV";
      case 0x0000885c: return "GL_DOT_PRODUCT_TEXTURE_1D_NV";
      case 0x0000885d: return "GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV";
      case 0x0000885e: return "GL_HILO8_NV";
      case 0x0000885f: return "GL_SIGNED_HILO8_NV";
      case 0x00008860: return "GL_FORCE_BLUE_TO_ONE_NV";
      case 0x00008861: return "GL_POINT_SPRITE";
      case 0x00008862: return "GL_COORD_REPLACE";
      case 0x00008863: return "GL_POINT_SPRITE_R_MODE_NV";
      case 0x00008864: return "GL_QUERY_COUNTER_BITS_ARB";
      case 0x00008865: return "GL_CURRENT_QUERY";
      case 0x00008866: return "GL_QUERY_RESULT";
      case 0x00008867: return "GL_QUERY_RESULT_AVAILABLE";
      case 0x00008868: return "GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV";
      case 0x00008869: return "GL_MAX_VERTEX_ATTRIBS";
      case 0x0000886a: return "GL_VERTEX_ATTRIB_ARRAY_NORMALIZED";
      case 0x0000886c: return "GL_MAX_TESS_CONTROL_INPUT_COMPONENTS";
      case 0x0000886d: return "GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS";
      case 0x0000886e: return "GL_DEPTH_STENCIL_TO_RGBA_NV";
      case 0x0000886f: return "GL_DEPTH_STENCIL_TO_BGRA_NV";
      case 0x00008870: return "GL_FRAGMENT_PROGRAM_NV";
      case 0x00008871: return "GL_MAX_TEXTURE_COORDS";
      case 0x00008872: return "GL_MAX_TEXTURE_IMAGE_UNITS";
      case 0x00008873: return "GL_FRAGMENT_PROGRAM_BINDING_NV";
      case 0x00008874: return "GL_PROGRAM_ERROR_STRING_ARB";
      case 0x00008875: return "GL_PROGRAM_FORMAT_ASCII_ARB";
      case 0x00008876: return "GL_PROGRAM_FORMAT_ARB";
      case 0x00008878: return "GL_WRITE_PIXEL_DATA_RANGE_NV";
      case 0x00008879: return "GL_READ_PIXEL_DATA_RANGE_NV";
      case 0x0000887a: return "GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV";
      case 0x0000887b: return "GL_READ_PIXEL_DATA_RANGE_LENGTH_NV";
      case 0x0000887c: return "GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV";
      case 0x0000887d: return "GL_READ_PIXEL_DATA_RANGE_POINTER_NV";
      case 0x0000887f: return "GL_GEOMETRY_SHADER_INVOCATIONS";
      case 0x00008880: return "GL_FLOAT_R_NV";
      case 0x00008881: return "GL_FLOAT_RG_NV";
      case 0x00008882: return "GL_FLOAT_RGB_NV";
      case 0x00008883: return "GL_FLOAT_RGBA_NV";
      case 0x00008884: return "GL_FLOAT_R16_NV";
      case 0x00008885: return "GL_FLOAT_R32_NV";
      case 0x00008886: return "GL_FLOAT_RG16_NV";
      case 0x00008887: return "GL_FLOAT_RG32_NV";
      case 0x00008888: return "GL_FLOAT_RGB16_NV";
      case 0x00008889: return "GL_FLOAT_RGB32_NV";
      case 0x0000888a: return "GL_FLOAT_RGBA16_NV";
      case 0x0000888b: return "GL_FLOAT_RGBA32_NV";
      case 0x0000888c: return "GL_TEXTURE_FLOAT_COMPONENTS_NV";
      case 0x0000888d: return "GL_FLOAT_CLEAR_COLOR_VALUE_NV";
      case 0x0000888e: return "GL_FLOAT_RGBA_MODE_NV";
      case 0x0000888f: return "GL_TEXTURE_UNSIGNED_REMAP_MODE_NV";
      case 0x00008890: return "GL_DEPTH_BOUNDS_TEST_EXT";
      case 0x00008891: return "GL_DEPTH_BOUNDS_EXT";
      case 0x00008892: return "GL_ARRAY_BUFFER";
      case 0x00008893: return "GL_ELEMENT_ARRAY_BUFFER";
      case 0x00008894: return "GL_ARRAY_BUFFER_BINDING";
      case 0x00008895: return "GL_ELEMENT_ARRAY_BUFFER_BINDING";
      case 0x00008896: return "GL_VERTEX_ARRAY_BUFFER_BINDING";
      case 0x00008897: return "GL_NORMAL_ARRAY_BUFFER_BINDING";
      case 0x00008898: return "GL_COLOR_ARRAY_BUFFER_BINDING";
      case 0x00008899: return "GL_INDEX_ARRAY_BUFFER_BINDING";
      case 0x0000889a: return "GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING";
      case 0x0000889b: return "GL_EDGE_FLAG_ARRAY_BUFFER_BINDING";
      case 0x0000889c: return "GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING";
      case 0x0000889d: return "GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING";
      case 0x0000889e: return "GL_WEIGHT_ARRAY_BUFFER_BINDING";
      case 0x0000889f: return "GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING";
      case 0x000088a0: return "GL_PROGRAM_INSTRUCTIONS_ARB";
      case 0x000088a1: return "GL_MAX_PROGRAM_INSTRUCTIONS_ARB";
      case 0x000088a2: return "GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB";
      case 0x000088a3: return "GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB";
      case 0x000088a4: return "GL_PROGRAM_TEMPORARIES_ARB";
      case 0x000088a5: return "GL_MAX_PROGRAM_TEMPORARIES_ARB";
      case 0x000088a6: return "GL_PROGRAM_NATIVE_TEMPORARIES_ARB";
      case 0x000088a7: return "GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB";
      case 0x000088a8: return "GL_PROGRAM_PARAMETERS_ARB";
      case 0x000088a9: return "GL_MAX_PROGRAM_PARAMETERS_ARB";
      case 0x000088aa: return "GL_PROGRAM_NATIVE_PARAMETERS_ARB";
      case 0x000088ab: return "GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB";
      case 0x000088ac: return "GL_PROGRAM_ATTRIBS_ARB";
      case 0x000088ad: return "GL_MAX_PROGRAM_ATTRIBS_ARB";
      case 0x000088ae: return "GL_PROGRAM_NATIVE_ATTRIBS_ARB";
      case 0x000088af: return "GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB";
      case 0x000088b0: return "GL_PROGRAM_ADDRESS_REGISTERS_ARB";
      case 0x000088b1: return "GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB";
      case 0x000088b2: return "GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB";
      case 0x000088b3: return "GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB";
      case 0x000088b4: return "GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB";
      case 0x000088b5: return "GL_MAX_PROGRAM_ENV_PARAMETERS_ARB";
      case 0x000088b6: return "GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB";
      case 0x000088b7: return "GL_TRANSPOSE_CURRENT_MATRIX_ARB";
      case 0x000088b8: return "GL_READ_ONLY";
      case 0x000088b9: return "GL_WRITE_ONLY";
      case 0x000088ba: return "GL_READ_WRITE";
      case 0x000088bb: return "GL_BUFFER_ACCESS";
      case 0x000088bc: return "GL_BUFFER_MAPPED";
      case 0x000088bd: return "GL_BUFFER_MAP_POINTER";
      case 0x000088be: return "GL_WRITE_DISCARD_NV";
      case 0x000088bf: return "GL_TIME_ELAPSED";
      case 0x000088c0: return "GL_MATRIX0_ARB";
      case 0x000088c1: return "GL_MATRIX1_ARB";
      case 0x000088c2: return "GL_MATRIX2_ARB";
      case 0x000088c3: return "GL_MATRIX3_ARB";
      case 0x000088c4: return "GL_MATRIX4_ARB";
      case 0x000088c5: return "GL_MATRIX5_ARB";
      case 0x000088c6: return "GL_MATRIX6_ARB";
      case 0x000088c7: return "GL_MATRIX7_ARB";
      case 0x000088c8: return "GL_MATRIX8_ARB";
      case 0x000088c9: return "GL_MATRIX9_ARB";
      case 0x000088ca: return "GL_MATRIX10_ARB";
      case 0x000088cb: return "GL_MATRIX11_ARB";
      case 0x000088cc: return "GL_MATRIX12_ARB";
      case 0x000088cd: return "GL_MATRIX13_ARB";
      case 0x000088ce: return "GL_MATRIX14_ARB";
      case 0x000088cf: return "GL_MATRIX15_ARB";
      case 0x000088d0: return "GL_MATRIX16_ARB";
      case 0x000088d1: return "GL_MATRIX17_ARB";
      case 0x000088d2: return "GL_MATRIX18_ARB";
      case 0x000088d3: return "GL_MATRIX19_ARB";
      case 0x000088d4: return "GL_MATRIX20_ARB";
      case 0x000088d5: return "GL_MATRIX21_ARB";
      case 0x000088d6: return "GL_MATRIX22_ARB";
      case 0x000088d7: return "GL_MATRIX23_ARB";
      case 0x000088d8: return "GL_MATRIX24_ARB";
      case 0x000088d9: return "GL_MATRIX25_ARB";
      case 0x000088da: return "GL_MATRIX26_ARB";
      case 0x000088db: return "GL_MATRIX27_ARB";
      case 0x000088dc: return "GL_MATRIX28_ARB";
      case 0x000088dd: return "GL_MATRIX29_ARB";
      case 0x000088de: return "GL_MATRIX30_ARB";
      case 0x000088df: return "GL_MATRIX31_ARB";
      case 0x000088e0: return "GL_STREAM_DRAW";
      case 0x000088e1: return "GL_STREAM_READ";
      case 0x000088e2: return "GL_STREAM_COPY";
      case 0x000088e4: return "GL_STATIC_DRAW";
      case 0x000088e5: return "GL_STATIC_READ";
      case 0x000088e6: return "GL_STATIC_COPY";
      case 0x000088e8: return "GL_DYNAMIC_DRAW";
      case 0x000088e9: return "GL_DYNAMIC_READ";
      case 0x000088ea: return "GL_DYNAMIC_COPY";
      case 0x000088eb: return "GL_PIXEL_PACK_BUFFER";
      case 0x000088ec: return "GL_PIXEL_UNPACK_BUFFER";
      case 0x000088ed: return "GL_PIXEL_PACK_BUFFER_BINDING";
      case 0x000088ef: return "GL_PIXEL_UNPACK_BUFFER_BINDING";
      case 0x000088f0: return "GL_DEPTH24_STENCIL8";
      case 0x000088f1: return "GL_TEXTURE_STENCIL_SIZE";
      case 0x000088f2: return "GL_STENCIL_TAG_BITS_EXT";
      case 0x000088f3: return "GL_STENCIL_CLEAR_TAG_VALUE_EXT";
      case 0x000088f4: return "GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV";
      case 0x000088f5: return "GL_MAX_PROGRAM_CALL_DEPTH_NV";
      case 0x000088f6: return "GL_MAX_PROGRAM_IF_DEPTH_NV";
      case 0x000088f7: return "GL_MAX_PROGRAM_LOOP_DEPTH_NV";
      case 0x000088f8: return "GL_MAX_PROGRAM_LOOP_COUNT_NV";
      case 0x000088f9: return "GL_SRC1_COLOR";
      case 0x000088fa: return "GL_ONE_MINUS_SRC1_COLOR";
      case 0x000088fb: return "GL_ONE_MINUS_SRC1_ALPHA";
      case 0x000088fc: return "GL_MAX_DUAL_SOURCE_DRAW_BUFFERS";
      case 0x000088fd: return "GL_VERTEX_ATTRIB_ARRAY_INTEGER";
      case 0x000088fe: return "GL_VERTEX_ATTRIB_ARRAY_DIVISOR";
      case 0x000088ff: return "GL_MAX_ARRAY_TEXTURE_LAYERS";
      case 0x00008904: return "GL_MIN_PROGRAM_TEXEL_OFFSET";
      case 0x00008905: return "GL_MAX_PROGRAM_TEXEL_OFFSET";
      case 0x00008906: return "GL_PROGRAM_ATTRIB_COMPONENTS_NV";
      case 0x00008907: return "GL_PROGRAM_RESULT_COMPONENTS_NV";
      case 0x00008908: return "GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV";
      case 0x00008909: return "GL_MAX_PROGRAM_RESULT_COMPONENTS_NV";
      case 0x0000890e: return "GL_CG_VERTEX_SHADER_EXT";
      case 0x0000890f: return "GL_CG_FRAGMENT_SHADER_EXT";
      case 0x00008910: return "GL_STENCIL_TEST_TWO_SIDE_EXT";
      case 0x00008911: return "GL_ACTIVE_STENCIL_FACE_EXT";
      case 0x00008912: return "GL_MIRROR_CLAMP_TO_BORDER_EXT";
      case 0x00008914: return "GL_SAMPLES_PASSED";
      case 0x00008916: return "GL_GEOMETRY_VERTICES_OUT";
      case 0x00008917: return "GL_GEOMETRY_INPUT_TYPE";
      case 0x00008918: return "GL_GEOMETRY_OUTPUT_TYPE";
      case 0x00008919: return "GL_SAMPLER_BINDING";
      case 0x0000891a: return "GL_CLAMP_VERTEX_COLOR";
      case 0x0000891b: return "GL_CLAMP_FRAGMENT_COLOR";
      case 0x0000891c: return "GL_CLAMP_READ_COLOR";
      case 0x0000891d: return "GL_FIXED_ONLY";
      case 0x0000891e: return "GL_TESS_CONTROL_PROGRAM_NV";
      case 0x0000891f: return "GL_TESS_EVALUATION_PROGRAM_NV";
      case 0x00008920: return "GL_FRAGMENT_SHADER_ATI";
      case 0x00008921: return "GL_REG_0_ATI";
      case 0x00008922: return "GL_REG_1_ATI";
      case 0x00008923: return "GL_REG_2_ATI";
      case 0x00008924: return "GL_REG_3_ATI";
      case 0x00008925: return "GL_REG_4_ATI";
      case 0x00008926: return "GL_REG_5_ATI";
      case 0x00008941: return "GL_CON_0_ATI";
      case 0x00008942: return "GL_CON_1_ATI";
      case 0x00008943: return "GL_CON_2_ATI";
      case 0x00008944: return "GL_CON_3_ATI";
      case 0x00008945: return "GL_CON_4_ATI";
      case 0x00008946: return "GL_CON_5_ATI";
      case 0x00008947: return "GL_CON_6_ATI";
      case 0x00008948: return "GL_CON_7_ATI";
      case 0x00008961: return "GL_MOV_ATI";
      case 0x00008963: return "GL_ADD_ATI";
      case 0x00008964: return "GL_MUL_ATI";
      case 0x00008965: return "GL_SUB_ATI";
      case 0x00008966: return "GL_DOT3_ATI";
      case 0x00008967: return "GL_DOT4_ATI";
      case 0x00008968: return "GL_MAD_ATI";
      case 0x00008969: return "GL_LERP_ATI";
      case 0x0000896a: return "GL_CND_ATI";
      case 0x0000896b: return "GL_CND0_ATI";
      case 0x0000896c: return "GL_DOT2_ADD_ATI";
      case 0x0000896d: return "GL_SECONDARY_INTERPOLATOR_ATI";
      case 0x0000896e: return "GL_NUM_FRAGMENT_REGISTERS_ATI";
      case 0x0000896f: return "GL_NUM_FRAGMENT_CONSTANTS_ATI";
      case 0x00008970: return "GL_NUM_PASSES_ATI";
      case 0x00008971: return "GL_NUM_INSTRUCTIONS_PER_PASS_ATI";
      case 0x00008972: return "GL_NUM_INSTRUCTIONS_TOTAL_ATI";
      case 0x00008973: return "GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI";
      case 0x00008974: return "GL_NUM_LOOPBACK_COMPONENTS_ATI";
      case 0x00008975: return "GL_COLOR_ALPHA_PAIRING_ATI";
      case 0x00008976: return "GL_SWIZZLE_STR_ATI";
      case 0x00008977: return "GL_SWIZZLE_STQ_ATI";
      case 0x00008978: return "GL_SWIZZLE_STR_DR_ATI";
      case 0x00008979: return "GL_SWIZZLE_STQ_DQ_ATI";
      case 0x0000897a: return "GL_SWIZZLE_STRQ_ATI";
      case 0x0000897b: return "GL_SWIZZLE_STRQ_DQ_ATI";
      case 0x00008980: return "GL_INTERLACE_OML";
      case 0x00008981: return "GL_INTERLACE_READ_OML";
      case 0x00008982: return "GL_FORMAT_SUBSAMPLE_24_24_OML";
      case 0x00008983: return "GL_FORMAT_SUBSAMPLE_244_244_OML";
      case 0x00008984: return "GL_PACK_RESAMPLE_OML";
      case 0x00008985: return "GL_UNPACK_RESAMPLE_OML";
      case 0x00008986: return "GL_RESAMPLE_REPLICATE_OML";
      case 0x00008987: return "GL_RESAMPLE_ZERO_FILL_OML";
      case 0x00008988: return "GL_RESAMPLE_AVERAGE_OML";
      case 0x00008989: return "GL_RESAMPLE_DECIMATE_OML";
      case 0x0000898a: return "GL_POINT_SIZE_ARRAY_TYPE_OES";
      case 0x0000898b: return "GL_POINT_SIZE_ARRAY_STRIDE_OES";
      case 0x0000898c: return "GL_POINT_SIZE_ARRAY_POINTER_OES";
      case 0x00008a00: return "GL_VERTEX_ATTRIB_MAP1_APPLE";
      case 0x00008a01: return "GL_VERTEX_ATTRIB_MAP2_APPLE";
      case 0x00008a02: return "GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE";
      case 0x00008a03: return "GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE";
      case 0x00008a04: return "GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE";
      case 0x00008a05: return "GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE";
      case 0x00008a06: return "GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE";
      case 0x00008a07: return "GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE";
      case 0x00008a08: return "GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE";
      case 0x00008a09: return "GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE";
      case 0x00008a0a: return "GL_DRAW_PIXELS_APPLE";
      case 0x00008a0b: return "GL_FENCE_APPLE";
      case 0x00008a0c: return "GL_ELEMENT_ARRAY_APPLE";
      case 0x00008a0d: return "GL_ELEMENT_ARRAY_TYPE_APPLE";
      case 0x00008a0e: return "GL_ELEMENT_ARRAY_POINTER_APPLE";
      case 0x00008a0f: return "GL_COLOR_FLOAT_APPLE";
      case 0x00008a10: return "GL_MIN_PBUFFER_VIEWPORT_DIMS_APPLE";
      case 0x00008a11: return "GL_UNIFORM_BUFFER";
      case 0x00008a12: return "GL_BUFFER_SERIALIZED_MODIFY_APPLE";
      case 0x00008a13: return "GL_BUFFER_FLUSHING_UNMAP_APPLE";
      case 0x00008a14: return "GL_AUX_DEPTH_STENCIL_APPLE";
      case 0x00008a15: return "GL_PACK_ROW_BYTES_APPLE";
      case 0x00008a16: return "GL_UNPACK_ROW_BYTES_APPLE";
      case 0x00008a19: return "GL_RELEASED_APPLE";
      case 0x00008a1a: return "GL_VOLATILE_APPLE";
      case 0x00008a1b: return "GL_RETAINED_APPLE";
      case 0x00008a1c: return "GL_UNDEFINED_APPLE";
      case 0x00008a1d: return "GL_PURGEABLE_APPLE";
      case 0x00008a1f: return "GL_RGB_422_APPLE";
      case 0x00008a28: return "GL_UNIFORM_BUFFER_BINDING";
      case 0x00008a29: return "GL_UNIFORM_BUFFER_START";
      case 0x00008a2a: return "GL_UNIFORM_BUFFER_SIZE";
      case 0x00008a2b: return "GL_MAX_VERTEX_UNIFORM_BLOCKS";
      case 0x00008a2c: return "GL_MAX_GEOMETRY_UNIFORM_BLOCKS";
      case 0x00008a2d: return "GL_MAX_FRAGMENT_UNIFORM_BLOCKS";
      case 0x00008a2e: return "GL_MAX_COMBINED_UNIFORM_BLOCKS";
      case 0x00008a2f: return "GL_MAX_UNIFORM_BUFFER_BINDINGS";
      case 0x00008a30: return "GL_MAX_UNIFORM_BLOCK_SIZE";
      case 0x00008a31: return "GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS";
      case 0x00008a32: return "GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS";
      case 0x00008a33: return "GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS";
      case 0x00008a34: return "GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT";
      case 0x00008a35: return "GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH";
      case 0x00008a36: return "GL_ACTIVE_UNIFORM_BLOCKS";
      case 0x00008a37: return "GL_UNIFORM_TYPE";
      case 0x00008a38: return "GL_UNIFORM_SIZE";
      case 0x00008a39: return "GL_UNIFORM_NAME_LENGTH";
      case 0x00008a3a: return "GL_UNIFORM_BLOCK_INDEX";
      case 0x00008a3b: return "GL_UNIFORM_OFFSET";
      case 0x00008a3c: return "GL_UNIFORM_ARRAY_STRIDE";
      case 0x00008a3d: return "GL_UNIFORM_MATRIX_STRIDE";
      case 0x00008a3e: return "GL_UNIFORM_IS_ROW_MAJOR";
      case 0x00008a3f: return "GL_UNIFORM_BLOCK_BINDING";
      case 0x00008a40: return "GL_UNIFORM_BLOCK_DATA_SIZE";
      case 0x00008a41: return "GL_UNIFORM_BLOCK_NAME_LENGTH";
      case 0x00008a42: return "GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS";
      case 0x00008a43: return "GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES";
      case 0x00008a44: return "GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER";
      case 0x00008a45: return "GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER";
      case 0x00008a46: return "GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER";
      case 0x00008a48: return "GL_TEXTURE_SRGB_DECODE_EXT";
      case 0x00008a49: return "GL_DECODE_EXT";
      case 0x00008a4a: return "GL_SKIP_DECODE_EXT";
      case 0x00008a4f: return "GL_PROGRAM_PIPELINE_OBJECT_EXT";
      case 0x00008a52: return "GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT";
      case 0x00008a53: return "GL_SYNC_OBJECT_APPLE";
      case 0x00008b30: return "GL_FRAGMENT_SHADER";
      case 0x00008b31: return "GL_VERTEX_SHADER";
      case 0x00008b40: return "GL_PROGRAM_OBJECT_ARB";
      case 0x00008b48: return "GL_SHADER_OBJECT_ARB";
      case 0x00008b49: return "GL_MAX_FRAGMENT_UNIFORM_COMPONENTS";
      case 0x00008b4a: return "GL_MAX_VERTEX_UNIFORM_COMPONENTS";
      case 0x00008b4b: return "GL_MAX_VARYING_FLOATS";
      case 0x00008b4c: return "GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS";
      case 0x00008b4d: return "GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS";
      case 0x00008b4e: return "GL_OBJECT_TYPE_ARB";
      case 0x00008b4f: return "GL_SHADER_TYPE";
      case 0x00008b50: return "GL_FLOAT_VEC2";
      case 0x00008b51: return "GL_FLOAT_VEC3";
      case 0x00008b52: return "GL_FLOAT_VEC4";
      case 0x00008b53: return "GL_INT_VEC2";
      case 0x00008b54: return "GL_INT_VEC3";
      case 0x00008b55: return "GL_INT_VEC4";
      case 0x00008b56: return "GL_BOOL";
      case 0x00008b57: return "GL_BOOL_VEC2";
      case 0x00008b58: return "GL_BOOL_VEC3";
      case 0x00008b59: return "GL_BOOL_VEC4";
      case 0x00008b5a: return "GL_FLOAT_MAT2";
      case 0x00008b5b: return "GL_FLOAT_MAT3";
      case 0x00008b5c: return "GL_FLOAT_MAT4";
      case 0x00008b5d: return "GL_SAMPLER_1D";
      case 0x00008b5e: return "GL_SAMPLER_2D";
      case 0x00008b5f: return "GL_SAMPLER_3D";
      case 0x00008b60: return "GL_SAMPLER_CUBE";
      case 0x00008b61: return "GL_SAMPLER_1D_SHADOW";
      case 0x00008b62: return "GL_SAMPLER_2D_SHADOW";
      case 0x00008b63: return "GL_SAMPLER_2D_RECT";
      case 0x00008b64: return "GL_SAMPLER_2D_RECT_SHADOW";
      case 0x00008b65: return "GL_FLOAT_MAT2x3";
      case 0x00008b66: return "GL_FLOAT_MAT2x4";
      case 0x00008b67: return "GL_FLOAT_MAT3x2";
      case 0x00008b68: return "GL_FLOAT_MAT3x4";
      case 0x00008b69: return "GL_FLOAT_MAT4x2";
      case 0x00008b6a: return "GL_FLOAT_MAT4x3";
      case 0x00008b80: return "GL_DELETE_STATUS";
      case 0x00008b81: return "GL_COMPILE_STATUS";
      case 0x00008b82: return "GL_LINK_STATUS";
      case 0x00008b83: return "GL_VALIDATE_STATUS";
      case 0x00008b84: return "GL_INFO_LOG_LENGTH";
      case 0x00008b85: return "GL_ATTACHED_SHADERS";
      case 0x00008b86: return "GL_ACTIVE_UNIFORMS";
      case 0x00008b87: return "GL_ACTIVE_UNIFORM_MAX_LENGTH";
      case 0x00008b88: return "GL_SHADER_SOURCE_LENGTH";
      case 0x00008b89: return "GL_ACTIVE_ATTRIBUTES";
      case 0x00008b8a: return "GL_ACTIVE_ATTRIBUTE_MAX_LENGTH";
      case 0x00008b8b: return "GL_FRAGMENT_SHADER_DERIVATIVE_HINT";
      case 0x00008b8c: return "GL_SHADING_LANGUAGE_VERSION";
      case 0x00008b8d: return "GL_CURRENT_PROGRAM";
      case 0x00008b90: return "GL_PALETTE4_RGB8_OES";
      case 0x00008b91: return "GL_PALETTE4_RGBA8_OES";
      case 0x00008b92: return "GL_PALETTE4_R5_G6_B5_OES";
      case 0x00008b93: return "GL_PALETTE4_RGBA4_OES";
      case 0x00008b94: return "GL_PALETTE4_RGB5_A1_OES";
      case 0x00008b95: return "GL_PALETTE8_RGB8_OES";
      case 0x00008b96: return "GL_PALETTE8_RGBA8_OES";
      case 0x00008b97: return "GL_PALETTE8_R5_G6_B5_OES";
      case 0x00008b98: return "GL_PALETTE8_RGBA4_OES";
      case 0x00008b99: return "GL_PALETTE8_RGB5_A1_OES";
      case 0x00008b9a: return "GL_IMPLEMENTATION_COLOR_READ_TYPE";
      case 0x00008b9b: return "GL_IMPLEMENTATION_COLOR_READ_FORMAT";
      case 0x00008b9c: return "GL_POINT_SIZE_ARRAY_OES";
      case 0x00008b9d: return "GL_TEXTURE_CROP_RECT_OES";
      case 0x00008b9e: return "GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES";
      case 0x00008b9f: return "GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES";
      case 0x00008bc0: return "GL_COUNTER_TYPE_AMD";
      case 0x00008bc1: return "GL_COUNTER_RANGE_AMD";
      case 0x00008bc2: return "GL_UNSIGNED_INT64_AMD";
      case 0x00008bc3: return "GL_PERCENTAGE_AMD";
      case 0x00008bc4: return "GL_PERFMON_RESULT_AVAILABLE_AMD";
      case 0x00008bc5: return "GL_PERFMON_RESULT_SIZE_AMD";
      case 0x00008bc6: return "GL_PERFMON_RESULT_AMD";
      case 0x00008bd2: return "GL_TEXTURE_WIDTH_QCOM";
      case 0x00008bd3: return "GL_TEXTURE_HEIGHT_QCOM";
      case 0x00008bd4: return "GL_TEXTURE_DEPTH_QCOM";
      case 0x00008bd5: return "GL_TEXTURE_INTERNAL_FORMAT_QCOM";
      case 0x00008bd6: return "GL_TEXTURE_FORMAT_QCOM";
      case 0x00008bd7: return "GL_TEXTURE_TYPE_QCOM";
      case 0x00008bd8: return "GL_TEXTURE_IMAGE_VALID_QCOM";
      case 0x00008bd9: return "GL_TEXTURE_NUM_LEVELS_QCOM";
      case 0x00008bda: return "GL_TEXTURE_TARGET_QCOM";
      case 0x00008bdb: return "GL_TEXTURE_OBJECT_VALID_QCOM";
      case 0x00008bdc: return "GL_STATE_RESTORE";
      case 0x00008c00: return "GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG";
      case 0x00008c01: return "GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG";
      case 0x00008c02: return "GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG";
      case 0x00008c03: return "GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG";
      case 0x00008c04: return "GL_MODULATE_COLOR_IMG";
      case 0x00008c05: return "GL_RECIP_ADD_SIGNED_ALPHA_IMG";
      case 0x00008c06: return "GL_TEXTURE_ALPHA_MODULATE_IMG";
      case 0x00008c07: return "GL_FACTOR_ALPHA_MODULATE_IMG";
      case 0x00008c08: return "GL_FRAGMENT_ALPHA_MODULATE_IMG";
      case 0x00008c09: return "GL_ADD_BLEND_IMG";
      case 0x00008c0a: return "GL_SGX_BINARY_IMG";
      case 0x00008c10: return "GL_TEXTURE_RED_TYPE";
      case 0x00008c11: return "GL_TEXTURE_GREEN_TYPE";
      case 0x00008c12: return "GL_TEXTURE_BLUE_TYPE";
      case 0x00008c13: return "GL_TEXTURE_ALPHA_TYPE";
      case 0x00008c14: return "GL_TEXTURE_LUMINANCE_TYPE";
      case 0x00008c15: return "GL_TEXTURE_INTENSITY_TYPE";
      case 0x00008c16: return "GL_TEXTURE_DEPTH_TYPE";
      case 0x00008c17: return "GL_UNSIGNED_NORMALIZED";
      case 0x00008c18: return "GL_TEXTURE_1D_ARRAY";
      case 0x00008c19: return "GL_PROXY_TEXTURE_1D_ARRAY";
      case 0x00008c1a: return "GL_TEXTURE_2D_ARRAY";
      case 0x00008c1b: return "GL_PROXY_TEXTURE_2D_ARRAY";
      case 0x00008c1c: return "GL_TEXTURE_BINDING_1D_ARRAY";
      case 0x00008c1d: return "GL_TEXTURE_BINDING_2D_ARRAY";
      case 0x00008c26: return "GL_GEOMETRY_PROGRAM_NV";
      case 0x00008c27: return "GL_MAX_PROGRAM_OUTPUT_VERTICES_NV";
      case 0x00008c28: return "GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV";
      case 0x00008c29: return "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS";
      case 0x00008c2a: return "GL_TEXTURE_BUFFER";
      case 0x00008c2b: return "GL_MAX_TEXTURE_BUFFER_SIZE";
      case 0x00008c2c: return "GL_TEXTURE_BINDING_BUFFER";
      case 0x00008c2d: return "GL_TEXTURE_BUFFER_DATA_STORE_BINDING";
      case 0x00008c2e: return "GL_TEXTURE_BUFFER_FORMAT";
      case 0x00008c2f: return "GL_ANY_SAMPLES_PASSED";
      case 0x00008c36: return "GL_SAMPLE_SHADING";
      case 0x00008c37: return "GL_MIN_SAMPLE_SHADING_VALUE";
      case 0x00008c3a: return "GL_R11F_G11F_B10F";
      case 0x00008c3b: return "GL_UNSIGNED_INT_10F_11F_11F_REV";
      case 0x00008c3c: return "GL_RGBA_SIGNED_COMPONENTS_EXT";
      case 0x00008c3d: return "GL_RGB9_E5";
      case 0x00008c3e: return "GL_UNSIGNED_INT_5_9_9_9_REV";
      case 0x00008c3f: return "GL_TEXTURE_SHARED_SIZE";
      case 0x00008c40: return "GL_SRGB";
      case 0x00008c41: return "GL_SRGB8";
      case 0x00008c42: return "GL_SRGB_ALPHA";
      case 0x00008c43: return "GL_SRGB8_ALPHA8";
      case 0x00008c44: return "GL_SLUMINANCE_ALPHA";
      case 0x00008c45: return "GL_SLUMINANCE8_ALPHA8";
      case 0x00008c46: return "GL_SLUMINANCE";
      case 0x00008c47: return "GL_SLUMINANCE8";
      case 0x00008c48: return "GL_COMPRESSED_SRGB";
      case 0x00008c49: return "GL_COMPRESSED_SRGB_ALPHA";
      case 0x00008c4a: return "GL_COMPRESSED_SLUMINANCE";
      case 0x00008c4b: return "GL_COMPRESSED_SLUMINANCE_ALPHA";
      case 0x00008c4c: return "GL_COMPRESSED_SRGB_S3TC_DXT1_EXT";
      case 0x00008c4d: return "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT";
      case 0x00008c4e: return "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT";
      case 0x00008c4f: return "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT";
      case 0x00008c70: return "GL_COMPRESSED_LUMINANCE_LATC1_EXT";
      case 0x00008c71: return "GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT";
      case 0x00008c72: return "GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT";
      case 0x00008c73: return "GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT";
      case 0x00008c74: return "GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV";
      case 0x00008c75: return "GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV";
      case 0x00008c76: return "GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH";
      case 0x00008c77: return "GL_BACK_PRIMARY_COLOR_NV";
      case 0x00008c78: return "GL_BACK_SECONDARY_COLOR_NV";
      case 0x00008c79: return "GL_TEXTURE_COORD_NV";
      case 0x00008c7a: return "GL_CLIP_DISTANCE_NV";
      case 0x00008c7b: return "GL_VERTEX_ID_NV";
      case 0x00008c7c: return "GL_PRIMITIVE_ID_NV";
      case 0x00008c7d: return "GL_GENERIC_ATTRIB_NV";
      case 0x00008c7e: return "GL_TRANSFORM_FEEDBACK_ATTRIBS_NV";
      case 0x00008c7f: return "GL_TRANSFORM_FEEDBACK_BUFFER_MODE";
      case 0x00008c80: return "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS";
      case 0x00008c81: return "GL_ACTIVE_VARYINGS_NV";
      case 0x00008c82: return "GL_ACTIVE_VARYING_MAX_LENGTH_NV";
      case 0x00008c83: return "GL_TRANSFORM_FEEDBACK_VARYINGS";
      case 0x00008c84: return "GL_TRANSFORM_FEEDBACK_BUFFER_START";
      case 0x00008c85: return "GL_TRANSFORM_FEEDBACK_BUFFER_SIZE";
      case 0x00008c86: return "GL_TRANSFORM_FEEDBACK_RECORD_NV";
      case 0x00008c87: return "GL_PRIMITIVES_GENERATED";
      case 0x00008c88: return "GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN";
      case 0x00008c89: return "GL_RASTERIZER_DISCARD";
      case 0x00008c8a: return "GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS";
      case 0x00008c8b: return "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS";
      case 0x00008c8c: return "GL_INTERLEAVED_ATTRIBS";
      case 0x00008c8d: return "GL_SEPARATE_ATTRIBS";
      case 0x00008c8e: return "GL_TRANSFORM_FEEDBACK_BUFFER";
      case 0x00008c8f: return "GL_TRANSFORM_FEEDBACK_BUFFER_BINDING";
      case 0x00008c92: return "GL_ATC_RGB_AMD";
      case 0x00008c93: return "GL_ATC_RGBA_EXPLICIT_ALPHA_AMD";
      case 0x00008ca0: return "GL_POINT_SPRITE_COORD_ORIGIN";
      case 0x00008ca1: return "GL_LOWER_LEFT";
      case 0x00008ca2: return "GL_UPPER_LEFT";
      case 0x00008ca3: return "GL_STENCIL_BACK_REF";
      case 0x00008ca4: return "GL_STENCIL_BACK_VALUE_MASK";
      case 0x00008ca5: return "GL_STENCIL_BACK_WRITEMASK";
      case 0x00008ca6: return "GL_DRAW_FRAMEBUFFER_BINDING";
      case 0x00008ca7: return "GL_RENDERBUFFER_BINDING";
      case 0x00008ca8: return "GL_READ_FRAMEBUFFER";
      case 0x00008ca9: return "GL_DRAW_FRAMEBUFFER";
      case 0x00008caa: return "GL_READ_FRAMEBUFFER_BINDING";
      case 0x00008cab: return "GL_RENDERBUFFER_SAMPLES";
      case 0x00008cac: return "GL_DEPTH_COMPONENT32F";
      case 0x00008cad: return "GL_DEPTH32F_STENCIL8";
      case 0x00008cd0: return "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE";
      case 0x00008cd1: return "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME";
      case 0x00008cd2: return "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL";
      case 0x00008cd3: return "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE";
      case 0x00008cd4: return "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER";
      case 0x00008cd5: return "GL_FRAMEBUFFER_COMPLETE";
      case 0x00008cd6: return "GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT";
      case 0x00008cd7: return "GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";
      case 0x00008cd9: return "GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT";
      case 0x00008cda: return "GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT";
      case 0x00008cdb: return "GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER";
      case 0x00008cdc: return "GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER";
      case 0x00008cdd: return "GL_FRAMEBUFFER_UNSUPPORTED";
      case 0x00008cdf: return "GL_MAX_COLOR_ATTACHMENTS";
      case 0x00008ce0: return "GL_COLOR_ATTACHMENT0";
      case 0x00008ce1: return "GL_COLOR_ATTACHMENT1";
      case 0x00008ce2: return "GL_COLOR_ATTACHMENT2";
      case 0x00008ce3: return "GL_COLOR_ATTACHMENT3";
      case 0x00008ce4: return "GL_COLOR_ATTACHMENT4";
      case 0x00008ce5: return "GL_COLOR_ATTACHMENT5";
      case 0x00008ce6: return "GL_COLOR_ATTACHMENT6";
      case 0x00008ce7: return "GL_COLOR_ATTACHMENT7";
      case 0x00008ce8: return "GL_COLOR_ATTACHMENT8";
      case 0x00008ce9: return "GL_COLOR_ATTACHMENT9";
      case 0x00008cea: return "GL_COLOR_ATTACHMENT10";
      case 0x00008ceb: return "GL_COLOR_ATTACHMENT11";
      case 0x00008cec: return "GL_COLOR_ATTACHMENT12";
      case 0x00008ced: return "GL_COLOR_ATTACHMENT13";
      case 0x00008cee: return "GL_COLOR_ATTACHMENT14";
      case 0x00008cef: return "GL_COLOR_ATTACHMENT15";
      case 0x00008d00: return "GL_DEPTH_ATTACHMENT";
      case 0x00008d20: return "GL_STENCIL_ATTACHMENT";
      case 0x00008d40: return "GL_FRAMEBUFFER";
      case 0x00008d41: return "GL_RENDERBUFFER";
      case 0x00008d42: return "GL_RENDERBUFFER_WIDTH";
      case 0x00008d43: return "GL_RENDERBUFFER_HEIGHT";
      case 0x00008d44: return "GL_RENDERBUFFER_INTERNAL_FORMAT";
      case 0x00008d46: return "GL_STENCIL_INDEX1";
      case 0x00008d47: return "GL_STENCIL_INDEX4";
      case 0x00008d48: return "GL_STENCIL_INDEX8";
      case 0x00008d49: return "GL_STENCIL_INDEX16";
      case 0x00008d50: return "GL_RENDERBUFFER_RED_SIZE";
      case 0x00008d51: return "GL_RENDERBUFFER_GREEN_SIZE";
      case 0x00008d52: return "GL_RENDERBUFFER_BLUE_SIZE";
      case 0x00008d53: return "GL_RENDERBUFFER_ALPHA_SIZE";
      case 0x00008d54: return "GL_RENDERBUFFER_DEPTH_SIZE";
      case 0x00008d55: return "GL_RENDERBUFFER_STENCIL_SIZE";
      case 0x00008d56: return "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE";
      case 0x00008d57: return "GL_MAX_SAMPLES";
      case 0x00008d60: return "GL_TEXTURE_GEN_STR_OES";
      case 0x00008d61: return "GL_HALF_FLOAT_OES";
      case 0x00008d62: return "GL_RGB565";
      case 0x00008d64: return "GL_ETC1_RGB8_OES";
      case 0x00008d69: return "GL_PRIMITIVE_RESTART_FIXED_INDEX";
      case 0x00008d6a: return "GL_ANY_SAMPLES_PASSED_CONSERVATIVE";
      case 0x00008d6b: return "GL_MAX_ELEMENT_INDEX";
      case 0x00008d6c: return "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT";
      case 0x00008d70: return "GL_RGBA32UI";
      case 0x00008d71: return "GL_RGB32UI";
      case 0x00008d72: return "GL_ALPHA32UI_EXT";
      case 0x00008d73: return "GL_INTENSITY32UI_EXT";
      case 0x00008d74: return "GL_LUMINANCE32UI_EXT";
      case 0x00008d75: return "GL_LUMINANCE_ALPHA32UI_EXT";
      case 0x00008d76: return "GL_RGBA16UI";
      case 0x00008d77: return "GL_RGB16UI";
      case 0x00008d78: return "GL_ALPHA16UI_EXT";
      case 0x00008d79: return "GL_INTENSITY16UI_EXT";
      case 0x00008d7a: return "GL_LUMINANCE16UI_EXT";
      case 0x00008d7b: return "GL_LUMINANCE_ALPHA16UI_EXT";
      case 0x00008d7c: return "GL_RGBA8UI";
      case 0x00008d7d: return "GL_RGB8UI";
      case 0x00008d7e: return "GL_ALPHA8UI_EXT";
      case 0x00008d7f: return "GL_INTENSITY8UI_EXT";
      case 0x00008d80: return "GL_LUMINANCE8UI_EXT";
      case 0x00008d81: return "GL_LUMINANCE_ALPHA8UI_EXT";
      case 0x00008d82: return "GL_RGBA32I";
      case 0x00008d83: return "GL_RGB32I";
      case 0x00008d84: return "GL_ALPHA32I_EXT";
      case 0x00008d85: return "GL_INTENSITY32I_EXT";
      case 0x00008d86: return "GL_LUMINANCE32I_EXT";
      case 0x00008d87: return "GL_LUMINANCE_ALPHA32I_EXT";
      case 0x00008d88: return "GL_RGBA16I";
      case 0x00008d89: return "GL_RGB16I";
      case 0x00008d8a: return "GL_ALPHA16I_EXT";
      case 0x00008d8b: return "GL_INTENSITY16I_EXT";
      case 0x00008d8c: return "GL_LUMINANCE16I_EXT";
      case 0x00008d8d: return "GL_LUMINANCE_ALPHA16I_EXT";
      case 0x00008d8e: return "GL_RGBA8I";
      case 0x00008d8f: return "GL_RGB8I";
      case 0x00008d90: return "GL_ALPHA8I_EXT";
      case 0x00008d91: return "GL_INTENSITY8I_EXT";
      case 0x00008d92: return "GL_LUMINANCE8I_EXT";
      case 0x00008d93: return "GL_LUMINANCE_ALPHA8I_EXT";
      case 0x00008d94: return "GL_RED_INTEGER";
      case 0x00008d95: return "GL_GREEN_INTEGER";
      case 0x00008d96: return "GL_BLUE_INTEGER";
      case 0x00008d97: return "GL_ALPHA_INTEGER";
      case 0x00008d98: return "GL_RGB_INTEGER";
      case 0x00008d99: return "GL_RGBA_INTEGER";
      case 0x00008d9a: return "GL_BGR_INTEGER";
      case 0x00008d9b: return "GL_BGRA_INTEGER";
      case 0x00008d9c: return "GL_LUMINANCE_INTEGER_EXT";
      case 0x00008d9d: return "GL_LUMINANCE_ALPHA_INTEGER_EXT";
      case 0x00008d9e: return "GL_RGBA_INTEGER_MODE_EXT";
      case 0x00008d9f: return "GL_INT_2_10_10_10_REV";
      case 0x00008da0: return "GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV";
      case 0x00008da1: return "GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV";
      case 0x00008da2: return "GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV";
      case 0x00008da3: return "GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV";
      case 0x00008da4: return "GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV";
      case 0x00008da5: return "GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV";
      case 0x00008da6: return "GL_MAX_PROGRAM_GENERIC_RESULTS_NV";
      case 0x00008da7: return "GL_FRAMEBUFFER_ATTACHMENT_LAYERED";
      case 0x00008da8: return "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS";
      case 0x00008da9: return "GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB";
      case 0x00008dab: return "GL_DEPTH_COMPONENT32F_NV";
      case 0x00008dac: return "GL_DEPTH32F_STENCIL8_NV";
      case 0x00008dad: return "GL_FLOAT_32_UNSIGNED_INT_24_8_REV";
      case 0x00008dae: return "GL_SHADER_INCLUDE_ARB";
      case 0x00008daf: return "GL_DEPTH_BUFFER_FLOAT_MODE_NV";
      case 0x00008db9: return "GL_FRAMEBUFFER_SRGB";
      case 0x00008dba: return "GL_FRAMEBUFFER_SRGB_CAPABLE_EXT";
      case 0x00008dbb: return "GL_COMPRESSED_RED_RGTC1";
      case 0x00008dbc: return "GL_COMPRESSED_SIGNED_RED_RGTC1";
      case 0x00008dbd: return "GL_COMPRESSED_RG_RGTC2";
      case 0x00008dbe: return "GL_COMPRESSED_SIGNED_RG_RGTC2";
      case 0x00008dc0: return "GL_SAMPLER_1D_ARRAY";
      case 0x00008dc1: return "GL_SAMPLER_2D_ARRAY";
      case 0x00008dc2: return "GL_SAMPLER_BUFFER";
      case 0x00008dc3: return "GL_SAMPLER_1D_ARRAY_SHADOW";
      case 0x00008dc4: return "GL_SAMPLER_2D_ARRAY_SHADOW";
      case 0x00008dc5: return "GL_SAMPLER_CUBE_SHADOW";
      case 0x00008dc6: return "GL_UNSIGNED_INT_VEC2";
      case 0x00008dc7: return "GL_UNSIGNED_INT_VEC3";
      case 0x00008dc8: return "GL_UNSIGNED_INT_VEC4";
      case 0x00008dc9: return "GL_INT_SAMPLER_1D";
      case 0x00008dca: return "GL_INT_SAMPLER_2D";
      case 0x00008dcb: return "GL_INT_SAMPLER_3D";
      case 0x00008dcc: return "GL_INT_SAMPLER_CUBE";
      case 0x00008dcd: return "GL_INT_SAMPLER_2D_RECT";
      case 0x00008dce: return "GL_INT_SAMPLER_1D_ARRAY";
      case 0x00008dcf: return "GL_INT_SAMPLER_2D_ARRAY";
      case 0x00008dd0: return "GL_INT_SAMPLER_BUFFER";
      case 0x00008dd1: return "GL_UNSIGNED_INT_SAMPLER_1D";
      case 0x00008dd2: return "GL_UNSIGNED_INT_SAMPLER_2D";
      case 0x00008dd3: return "GL_UNSIGNED_INT_SAMPLER_3D";
      case 0x00008dd4: return "GL_UNSIGNED_INT_SAMPLER_CUBE";
      case 0x00008dd5: return "GL_UNSIGNED_INT_SAMPLER_2D_RECT";
      case 0x00008dd6: return "GL_UNSIGNED_INT_SAMPLER_1D_ARRAY";
      case 0x00008dd7: return "GL_UNSIGNED_INT_SAMPLER_2D_ARRAY";
      case 0x00008dd8: return "GL_UNSIGNED_INT_SAMPLER_BUFFER";
      case 0x00008dd9: return "GL_GEOMETRY_SHADER";
      case 0x00008dda: return "GL_GEOMETRY_VERTICES_OUT_ARB";
      case 0x00008ddb: return "GL_GEOMETRY_INPUT_TYPE_ARB";
      case 0x00008ddc: return "GL_GEOMETRY_OUTPUT_TYPE_ARB";
      case 0x00008ddd: return "GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB";
      case 0x00008dde: return "GL_MAX_VERTEX_VARYING_COMPONENTS_ARB";
      case 0x00008ddf: return "GL_MAX_GEOMETRY_UNIFORM_COMPONENTS";
      case 0x00008de0: return "GL_MAX_GEOMETRY_OUTPUT_VERTICES";
      case 0x00008de1: return "GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS";
      case 0x00008de2: return "GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT";
      case 0x00008de3: return "GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT";
      case 0x00008de4: return "GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT";
      case 0x00008de5: return "GL_ACTIVE_SUBROUTINES";
      case 0x00008de6: return "GL_ACTIVE_SUBROUTINE_UNIFORMS";
      case 0x00008de7: return "GL_MAX_SUBROUTINES";
      case 0x00008de8: return "GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS";
      case 0x00008de9: return "GL_NAMED_STRING_LENGTH_ARB";
      case 0x00008dea: return "GL_NAMED_STRING_TYPE_ARB";
      case 0x00008ded: return "GL_MAX_BINDABLE_UNIFORM_SIZE_EXT";
      case 0x00008dee: return "GL_UNIFORM_BUFFER_EXT";
      case 0x00008def: return "GL_UNIFORM_BUFFER_BINDING_EXT";
      case 0x00008df0: return "GL_LOW_FLOAT";
      case 0x00008df1: return "GL_MEDIUM_FLOAT";
      case 0x00008df2: return "GL_HIGH_FLOAT";
      case 0x00008df3: return "GL_LOW_INT";
      case 0x00008df4: return "GL_MEDIUM_INT";
      case 0x00008df5: return "GL_HIGH_INT";
      case 0x00008df6: return "GL_UNSIGNED_INT_10_10_10_2_OES";
      case 0x00008df7: return "GL_INT_10_10_10_2_OES";
      case 0x00008df8: return "GL_SHADER_BINARY_FORMATS";
      case 0x00008df9: return "GL_NUM_SHADER_BINARY_FORMATS";
      case 0x00008dfa: return "GL_SHADER_COMPILER";
      case 0x00008dfb: return "GL_MAX_VERTEX_UNIFORM_VECTORS";
      case 0x00008dfc: return "GL_MAX_VARYING_VECTORS";
      case 0x00008dfd: return "GL_MAX_FRAGMENT_UNIFORM_VECTORS";
      case 0x00008e10: return "GL_RENDERBUFFER_COLOR_SAMPLES_NV";
      case 0x00008e11: return "GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV";
      case 0x00008e12: return "GL_MULTISAMPLE_COVERAGE_MODES_NV";
      case 0x00008e13: return "GL_QUERY_WAIT";
      case 0x00008e14: return "GL_QUERY_NO_WAIT";
      case 0x00008e15: return "GL_QUERY_BY_REGION_WAIT";
      case 0x00008e16: return "GL_QUERY_BY_REGION_NO_WAIT";
      case 0x00008e1e: return "GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS";
      case 0x00008e1f: return "GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS";
      case 0x00008e20: return "GL_COLOR_SAMPLES_NV";
      case 0x00008e22: return "GL_TRANSFORM_FEEDBACK";
      case 0x00008e23: return "GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED";
      case 0x00008e24: return "GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE";
      case 0x00008e25: return "GL_TRANSFORM_FEEDBACK_BINDING";
      case 0x00008e26: return "GL_FRAME_NV";
      case 0x00008e27: return "GL_FIELDS_NV";
      case 0x00008e28: return "GL_TIMESTAMP";
      case 0x00008e29: return "GL_NUM_FILL_STREAMS_NV";
      case 0x00008e2a: return "GL_PRESENT_TIME_NV";
      case 0x00008e2b: return "GL_PRESENT_DURATION_NV";
      case 0x00008e2c: return "GL_DEPTH_COMPONENT16_NONLINEAR_NV";
      case 0x00008e2d: return "GL_PROGRAM_MATRIX_EXT";
      case 0x00008e2e: return "GL_TRANSPOSE_PROGRAM_MATRIX_EXT";
      case 0x00008e2f: return "GL_PROGRAM_MATRIX_STACK_DEPTH_EXT";
      case 0x00008e42: return "GL_TEXTURE_SWIZZLE_R";
      case 0x00008e43: return "GL_TEXTURE_SWIZZLE_G";
      case 0x00008e44: return "GL_TEXTURE_SWIZZLE_B";
      case 0x00008e45: return "GL_TEXTURE_SWIZZLE_A";
      case 0x00008e46: return "GL_TEXTURE_SWIZZLE_RGBA";
      case 0x00008e47: return "GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS";
      case 0x00008e48: return "GL_ACTIVE_SUBROUTINE_MAX_LENGTH";
      case 0x00008e49: return "GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH";
      case 0x00008e4a: return "GL_NUM_COMPATIBLE_SUBROUTINES";
      case 0x00008e4b: return "GL_COMPATIBLE_SUBROUTINES";
      case 0x00008e4c: return "GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION";
      case 0x00008e4d: return "GL_FIRST_VERTEX_CONVENTION";
      case 0x00008e4e: return "GL_LAST_VERTEX_CONVENTION";
      case 0x00008e4f: return "GL_PROVOKING_VERTEX";
      case 0x00008e50: return "GL_SAMPLE_POSITION";
      case 0x00008e51: return "GL_SAMPLE_MASK";
      case 0x00008e52: return "GL_SAMPLE_MASK_VALUE";
      case 0x00008e53: return "GL_TEXTURE_BINDING_RENDERBUFFER_NV";
      case 0x00008e54: return "GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV";
      case 0x00008e55: return "GL_TEXTURE_RENDERBUFFER_NV";
      case 0x00008e56: return "GL_SAMPLER_RENDERBUFFER_NV";
      case 0x00008e57: return "GL_INT_SAMPLER_RENDERBUFFER_NV";
      case 0x00008e58: return "GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV";
      case 0x00008e59: return "GL_MAX_SAMPLE_MASK_WORDS";
      case 0x00008e5a: return "GL_MAX_GEOMETRY_SHADER_INVOCATIONS";
      case 0x00008e5b: return "GL_MIN_FRAGMENT_INTERPOLATION_OFFSET";
      case 0x00008e5c: return "GL_MAX_FRAGMENT_INTERPOLATION_OFFSET";
      case 0x00008e5d: return "GL_FRAGMENT_INTERPOLATION_OFFSET_BITS";
      case 0x00008e5e: return "GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET";
      case 0x00008e5f: return "GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET";
      case 0x00008e70: return "GL_MAX_TRANSFORM_FEEDBACK_BUFFERS";
      case 0x00008e71: return "GL_MAX_VERTEX_STREAMS";
      case 0x00008e72: return "GL_PATCH_VERTICES";
      case 0x00008e73: return "GL_PATCH_DEFAULT_INNER_LEVEL";
      case 0x00008e74: return "GL_PATCH_DEFAULT_OUTER_LEVEL";
      case 0x00008e75: return "GL_TESS_CONTROL_OUTPUT_VERTICES";
      case 0x00008e76: return "GL_TESS_GEN_MODE";
      case 0x00008e77: return "GL_TESS_GEN_SPACING";
      case 0x00008e78: return "GL_TESS_GEN_VERTEX_ORDER";
      case 0x00008e79: return "GL_TESS_GEN_POINT_MODE";
      case 0x00008e7a: return "GL_ISOLINES";
      case 0x00008e7b: return "GL_FRACTIONAL_ODD";
      case 0x00008e7c: return "GL_FRACTIONAL_EVEN";
      case 0x00008e7d: return "GL_MAX_PATCH_VERTICES";
      case 0x00008e7e: return "GL_MAX_TESS_GEN_LEVEL";
      case 0x00008e7f: return "GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS";
      case 0x00008e80: return "GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS";
      case 0x00008e81: return "GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS";
      case 0x00008e82: return "GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS";
      case 0x00008e83: return "GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS";
      case 0x00008e84: return "GL_MAX_TESS_PATCH_COMPONENTS";
      case 0x00008e85: return "GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS";
      case 0x00008e86: return "GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS";
      case 0x00008e87: return "GL_TESS_EVALUATION_SHADER";
      case 0x00008e88: return "GL_TESS_CONTROL_SHADER";
      case 0x00008e89: return "GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS";
      case 0x00008e8a: return "GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS";
      case 0x00008e8c: return "GL_COMPRESSED_RGBA_BPTC_UNORM";
      case 0x00008e8d: return "GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM";
      case 0x00008e8e: return "GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT";
      case 0x00008e8f: return "GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT";
      case 0x00008ed0: return "GL_COVERAGE_COMPONENT_NV";
      case 0x00008ed1: return "GL_COVERAGE_COMPONENT4_NV";
      case 0x00008ed2: return "GL_COVERAGE_ATTACHMENT_NV";
      case 0x00008ed3: return "GL_COVERAGE_BUFFERS_NV";
      case 0x00008ed5: return "GL_COVERAGE_ALL_FRAGMENTS_NV";
      case 0x00008ed6: return "GL_COVERAGE_EDGE_FRAGMENTS_NV";
      case 0x00008ed7: return "GL_COVERAGE_AUTOMATIC_NV";
      case 0x00008f1d: return "GL_BUFFER_GPU_ADDRESS_NV";
      case 0x00008f1e: return "GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV";
      case 0x00008f1f: return "GL_ELEMENT_ARRAY_UNIFIED_NV";
      case 0x00008f20: return "GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV";
      case 0x00008f21: return "GL_VERTEX_ARRAY_ADDRESS_NV";
      case 0x00008f22: return "GL_NORMAL_ARRAY_ADDRESS_NV";
      case 0x00008f23: return "GL_COLOR_ARRAY_ADDRESS_NV";
      case 0x00008f24: return "GL_INDEX_ARRAY_ADDRESS_NV";
      case 0x00008f25: return "GL_TEXTURE_COORD_ARRAY_ADDRESS_NV";
      case 0x00008f26: return "GL_EDGE_FLAG_ARRAY_ADDRESS_NV";
      case 0x00008f27: return "GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV";
      case 0x00008f28: return "GL_FOG_COORD_ARRAY_ADDRESS_NV";
      case 0x00008f29: return "GL_ELEMENT_ARRAY_ADDRESS_NV";
      case 0x00008f2a: return "GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV";
      case 0x00008f2b: return "GL_VERTEX_ARRAY_LENGTH_NV";
      case 0x00008f2c: return "GL_NORMAL_ARRAY_LENGTH_NV";
      case 0x00008f2d: return "GL_COLOR_ARRAY_LENGTH_NV";
      case 0x00008f2e: return "GL_INDEX_ARRAY_LENGTH_NV";
      case 0x00008f2f: return "GL_TEXTURE_COORD_ARRAY_LENGTH_NV";
      case 0x00008f30: return "GL_EDGE_FLAG_ARRAY_LENGTH_NV";
      case 0x00008f31: return "GL_SECONDARY_COLOR_ARRAY_LENGTH_NV";
      case 0x00008f32: return "GL_FOG_COORD_ARRAY_LENGTH_NV";
      case 0x00008f33: return "GL_ELEMENT_ARRAY_LENGTH_NV";
      case 0x00008f34: return "GL_GPU_ADDRESS_NV";
      case 0x00008f35: return "GL_MAX_SHADER_BUFFER_ADDRESS_NV";
      case 0x00008f36: return "GL_COPY_READ_BUFFER";
      case 0x00008f37: return "GL_COPY_WRITE_BUFFER";
      case 0x00008f38: return "GL_MAX_IMAGE_UNITS";
      case 0x00008f39: return "GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS";
      case 0x00008f3a: return "GL_IMAGE_BINDING_NAME";
      case 0x00008f3b: return "GL_IMAGE_BINDING_LEVEL";
      case 0x00008f3c: return "GL_IMAGE_BINDING_LAYERED";
      case 0x00008f3d: return "GL_IMAGE_BINDING_LAYER";
      case 0x00008f3e: return "GL_IMAGE_BINDING_ACCESS";
      case 0x00008f3f: return "GL_DRAW_INDIRECT_BUFFER";
      case 0x00008f40: return "GL_DRAW_INDIRECT_UNIFIED_NV";
      case 0x00008f41: return "GL_DRAW_INDIRECT_ADDRESS_NV";
      case 0x00008f42: return "GL_DRAW_INDIRECT_LENGTH_NV";
      case 0x00008f43: return "GL_DRAW_INDIRECT_BUFFER_BINDING";
      case 0x00008f46: return "GL_DOUBLE_MAT2";
      case 0x00008f47: return "GL_DOUBLE_MAT3";
      case 0x00008f48: return "GL_DOUBLE_MAT4";
      case 0x00008f49: return "GL_DOUBLE_MAT2x3";
      case 0x00008f4a: return "GL_DOUBLE_MAT2x4";
      case 0x00008f4b: return "GL_DOUBLE_MAT3x2";
      case 0x00008f4c: return "GL_DOUBLE_MAT3x4";
      case 0x00008f4d: return "GL_DOUBLE_MAT4x2";
      case 0x00008f4e: return "GL_DOUBLE_MAT4x3";
      case 0x00008f60: return "GL_MALI_SHADER_BINARY_ARM";
      case 0x00008f61: return "GL_MALI_PROGRAM_BINARY_ARM";
      case 0x00008f90: return "GL_RED_SNORM";
      case 0x00008f91: return "GL_RG_SNORM";
      case 0x00008f92: return "GL_RGB_SNORM";
      case 0x00008f93: return "GL_RGBA_SNORM";
      case 0x00008f94: return "GL_R8_SNORM";
      case 0x00008f95: return "GL_RG8_SNORM";
      case 0x00008f96: return "GL_RGB8_SNORM";
      case 0x00008f97: return "GL_RGBA8_SNORM";
      case 0x00008f98: return "GL_R16_SNORM";
      case 0x00008f99: return "GL_RG16_SNORM";
      case 0x00008f9a: return "GL_RGB16_SNORM";
      case 0x00008f9b: return "GL_RGBA16_SNORM";
      case 0x00008f9c: return "GL_SIGNED_NORMALIZED";
      case 0x00008f9d: return "GL_PRIMITIVE_RESTART";
      case 0x00008f9e: return "GL_PRIMITIVE_RESTART_INDEX";
      case 0x00008f9f: return "GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS";
      case 0x00008fa0: return "GL_PERFMON_GLOBAL_MODE_QCOM";
      case 0x00008fb0: return "GL_BINNING_CONTROL_HINT_QCOM";
      case 0x00008fb1: return "GL_CPU_OPTIMIZED_QCOM";
      case 0x00008fb2: return "GL_GPU_OPTIMIZED_QCOM";
      case 0x00008fb3: return "GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM";
      case 0x00008fc4: return "GL_SHADER_BINARY_VIV";
      case 0x00008fe0: return "GL_INT8_NV";
      case 0x00008fe1: return "GL_INT8_VEC2_NV";
      case 0x00008fe2: return "GL_INT8_VEC3_NV";
      case 0x00008fe3: return "GL_INT8_VEC4_NV";
      case 0x00008fe4: return "GL_INT16_NV";
      case 0x00008fe5: return "GL_INT16_VEC2_NV";
      case 0x00008fe6: return "GL_INT16_VEC3_NV";
      case 0x00008fe7: return "GL_INT16_VEC4_NV";
      case 0x00008fe9: return "GL_INT64_VEC2_NV";
      case 0x00008fea: return "GL_INT64_VEC3_NV";
      case 0x00008feb: return "GL_INT64_VEC4_NV";
      case 0x00008fec: return "GL_UNSIGNED_INT8_NV";
      case 0x00008fed: return "GL_UNSIGNED_INT8_VEC2_NV";
      case 0x00008fee: return "GL_UNSIGNED_INT8_VEC3_NV";
      case 0x00008fef: return "GL_UNSIGNED_INT8_VEC4_NV";
      case 0x00008ff0: return "GL_UNSIGNED_INT16_NV";
      case 0x00008ff1: return "GL_UNSIGNED_INT16_VEC2_NV";
      case 0x00008ff2: return "GL_UNSIGNED_INT16_VEC3_NV";
      case 0x00008ff3: return "GL_UNSIGNED_INT16_VEC4_NV";
      case 0x00008ff5: return "GL_UNSIGNED_INT64_VEC2_NV";
      case 0x00008ff6: return "GL_UNSIGNED_INT64_VEC3_NV";
      case 0x00008ff7: return "GL_UNSIGNED_INT64_VEC4_NV";
      case 0x00008ff8: return "GL_FLOAT16_NV";
      case 0x00008ff9: return "GL_FLOAT16_VEC2_NV";
      case 0x00008ffa: return "GL_FLOAT16_VEC3_NV";
      case 0x00008ffb: return "GL_FLOAT16_VEC4_NV";
      case 0x00008ffc: return "GL_DOUBLE_VEC2";
      case 0x00008ffd: return "GL_DOUBLE_VEC3";
      case 0x00008ffe: return "GL_DOUBLE_VEC4";
      case 0x00009001: return "GL_SAMPLER_BUFFER_AMD";
      case 0x00009002: return "GL_INT_SAMPLER_BUFFER_AMD";
      case 0x00009003: return "GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD";
      case 0x00009004: return "GL_TESSELLATION_MODE_AMD";
      case 0x00009005: return "GL_TESSELLATION_FACTOR_AMD";
      case 0x00009006: return "GL_DISCRETE_AMD";
      case 0x00009007: return "GL_CONTINUOUS_AMD";
      case 0x00009009: return "GL_TEXTURE_CUBE_MAP_ARRAY";
      case 0x0000900a: return "GL_TEXTURE_BINDING_CUBE_MAP_ARRAY";
      case 0x0000900b: return "GL_PROXY_TEXTURE_CUBE_MAP_ARRAY";
      case 0x0000900c: return "GL_SAMPLER_CUBE_MAP_ARRAY";
      case 0x0000900d: return "GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW";
      case 0x0000900e: return "GL_INT_SAMPLER_CUBE_MAP_ARRAY";
      case 0x0000900f: return "GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY";
      case 0x00009010: return "GL_ALPHA_SNORM";
      case 0x00009011: return "GL_LUMINANCE_SNORM";
      case 0x00009012: return "GL_LUMINANCE_ALPHA_SNORM";
      case 0x00009013: return "GL_INTENSITY_SNORM";
      case 0x00009014: return "GL_ALPHA8_SNORM";
      case 0x00009015: return "GL_LUMINANCE8_SNORM";
      case 0x00009016: return "GL_LUMINANCE8_ALPHA8_SNORM";
      case 0x00009017: return "GL_INTENSITY8_SNORM";
      case 0x00009018: return "GL_ALPHA16_SNORM";
      case 0x00009019: return "GL_LUMINANCE16_SNORM";
      case 0x0000901a: return "GL_LUMINANCE16_ALPHA16_SNORM";
      case 0x0000901b: return "GL_INTENSITY16_SNORM";
      case 0x0000901c: return "GL_FACTOR_MIN_AMD";
      case 0x0000901d: return "GL_FACTOR_MAX_AMD";
      case 0x0000901e: return "GL_DEPTH_CLAMP_NEAR_AMD";
      case 0x0000901f: return "GL_DEPTH_CLAMP_FAR_AMD";
      case 0x00009020: return "GL_VIDEO_BUFFER_NV";
      case 0x00009021: return "GL_VIDEO_BUFFER_BINDING_NV";
      case 0x00009022: return "GL_FIELD_UPPER_NV";
      case 0x00009023: return "GL_FIELD_LOWER_NV";
      case 0x00009024: return "GL_NUM_VIDEO_CAPTURE_STREAMS_NV";
      case 0x00009025: return "GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV";
      case 0x00009026: return "GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV";
      case 0x00009027: return "GL_LAST_VIDEO_CAPTURE_STATUS_NV";
      case 0x00009028: return "GL_VIDEO_BUFFER_PITCH_NV";
      case 0x00009029: return "GL_VIDEO_COLOR_CONVERSION_MATRIX_NV";
      case 0x0000902a: return "GL_VIDEO_COLOR_CONVERSION_MAX_NV";
      case 0x0000902b: return "GL_VIDEO_COLOR_CONVERSION_MIN_NV";
      case 0x0000902c: return "GL_VIDEO_COLOR_CONVERSION_OFFSET_NV";
      case 0x0000902d: return "GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV";
      case 0x0000902e: return "GL_PARTIAL_SUCCESS_NV";
      case 0x0000902f: return "GL_SUCCESS_NV";
      case 0x00009030: return "GL_FAILURE_NV";
      case 0x00009031: return "GL_YCBYCR8_422_NV";
      case 0x00009032: return "GL_YCBAYCR8A_4224_NV";
      case 0x00009033: return "GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV";
      case 0x00009034: return "GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV";
      case 0x00009035: return "GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV";
      case 0x00009036: return "GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV";
      case 0x00009037: return "GL_Z4Y12Z4CB12Z4CR12_444_NV";
      case 0x00009038: return "GL_VIDEO_CAPTURE_FRAME_WIDTH_NV";
      case 0x00009039: return "GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV";
      case 0x0000903a: return "GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV";
      case 0x0000903b: return "GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV";
      case 0x0000903c: return "GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV";
      case 0x00009045: return "GL_TEXTURE_COVERAGE_SAMPLES_NV";
      case 0x00009046: return "GL_TEXTURE_COLOR_SAMPLES_NV";
      case 0x00009047: return "GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX";
      case 0x00009048: return "GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX";
      case 0x00009049: return "GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX";
      case 0x0000904a: return "GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX";
      case 0x0000904b: return "GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX";
      case 0x0000904c: return "GL_IMAGE_1D";
      case 0x0000904d: return "GL_IMAGE_2D";
      case 0x0000904e: return "GL_IMAGE_3D";
      case 0x0000904f: return "GL_IMAGE_2D_RECT";
      case 0x00009050: return "GL_IMAGE_CUBE";
      case 0x00009051: return "GL_IMAGE_BUFFER";
      case 0x00009052: return "GL_IMAGE_1D_ARRAY";
      case 0x00009053: return "GL_IMAGE_2D_ARRAY";
      case 0x00009054: return "GL_IMAGE_CUBE_MAP_ARRAY";
      case 0x00009055: return "GL_IMAGE_2D_MULTISAMPLE";
      case 0x00009056: return "GL_IMAGE_2D_MULTISAMPLE_ARRAY";
      case 0x00009057: return "GL_INT_IMAGE_1D";
      case 0x00009058: return "GL_INT_IMAGE_2D";
      case 0x00009059: return "GL_INT_IMAGE_3D";
      case 0x0000905a: return "GL_INT_IMAGE_2D_RECT";
      case 0x0000905b: return "GL_INT_IMAGE_CUBE";
      case 0x0000905c: return "GL_INT_IMAGE_BUFFER";
      case 0x0000905d: return "GL_INT_IMAGE_1D_ARRAY";
      case 0x0000905e: return "GL_INT_IMAGE_2D_ARRAY";
      case 0x0000905f: return "GL_INT_IMAGE_CUBE_MAP_ARRAY";
      case 0x00009060: return "GL_INT_IMAGE_2D_MULTISAMPLE";
      case 0x00009061: return "GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY";
      case 0x00009062: return "GL_UNSIGNED_INT_IMAGE_1D";
      case 0x00009063: return "GL_UNSIGNED_INT_IMAGE_2D";
      case 0x00009064: return "GL_UNSIGNED_INT_IMAGE_3D";
      case 0x00009065: return "GL_UNSIGNED_INT_IMAGE_2D_RECT";
      case 0x00009066: return "GL_UNSIGNED_INT_IMAGE_CUBE";
      case 0x00009067: return "GL_UNSIGNED_INT_IMAGE_BUFFER";
      case 0x00009068: return "GL_UNSIGNED_INT_IMAGE_1D_ARRAY";
      case 0x00009069: return "GL_UNSIGNED_INT_IMAGE_2D_ARRAY";
      case 0x0000906a: return "GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY";
      case 0x0000906b: return "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE";
      case 0x0000906c: return "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY";
      case 0x0000906d: return "GL_MAX_IMAGE_SAMPLES";
      case 0x0000906e: return "GL_IMAGE_BINDING_FORMAT";
      case 0x0000906f: return "GL_RGB10_A2UI";
      case 0x00009070: return "GL_PATH_FORMAT_SVG_NV";
      case 0x00009071: return "GL_PATH_FORMAT_PS_NV";
      case 0x00009072: return "GL_STANDARD_FONT_NAME_NV";
      case 0x00009073: return "GL_SYSTEM_FONT_NAME_NV";
      case 0x00009074: return "GL_FILE_NAME_NV";
      case 0x00009075: return "GL_PATH_STROKE_WIDTH_NV";
      case 0x00009076: return "GL_PATH_END_CAPS_NV";
      case 0x00009077: return "GL_PATH_INITIAL_END_CAP_NV";
      case 0x00009078: return "GL_PATH_TERMINAL_END_CAP_NV";
      case 0x00009079: return "GL_PATH_JOIN_STYLE_NV";
      case 0x0000907a: return "GL_PATH_MITER_LIMIT_NV";
      case 0x0000907b: return "GL_PATH_DASH_CAPS_NV";
      case 0x0000907c: return "GL_PATH_INITIAL_DASH_CAP_NV";
      case 0x0000907d: return "GL_PATH_TERMINAL_DASH_CAP_NV";
      case 0x0000907e: return "GL_PATH_DASH_OFFSET_NV";
      case 0x0000907f: return "GL_PATH_CLIENT_LENGTH_NV";
      case 0x00009080: return "GL_PATH_FILL_MODE_NV";
      case 0x00009081: return "GL_PATH_FILL_MASK_NV";
      case 0x00009082: return "GL_PATH_FILL_COVER_MODE_NV";
      case 0x00009083: return "GL_PATH_STROKE_COVER_MODE_NV";
      case 0x00009084: return "GL_PATH_STROKE_MASK_NV";
      case 0x00009088: return "GL_COUNT_UP_NV";
      case 0x00009089: return "GL_COUNT_DOWN_NV";
      case 0x0000908a: return "GL_PATH_OBJECT_BOUNDING_BOX_NV";
      case 0x0000908b: return "GL_CONVEX_HULL_NV";
      case 0x0000908d: return "GL_BOUNDING_BOX_NV";
      case 0x0000908e: return "GL_TRANSLATE_X_NV";
      case 0x0000908f: return "GL_TRANSLATE_Y_NV";
      case 0x00009090: return "GL_TRANSLATE_2D_NV";
      case 0x00009091: return "GL_TRANSLATE_3D_NV";
      case 0x00009092: return "GL_AFFINE_2D_NV";
      case 0x00009094: return "GL_AFFINE_3D_NV";
      case 0x00009096: return "GL_TRANSPOSE_AFFINE_2D_NV";
      case 0x00009098: return "GL_TRANSPOSE_AFFINE_3D_NV";
      case 0x0000909a: return "GL_UTF8_NV";
      case 0x0000909b: return "GL_UTF16_NV";
      case 0x0000909c: return "GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV";
      case 0x0000909d: return "GL_PATH_COMMAND_COUNT_NV";
      case 0x0000909e: return "GL_PATH_COORD_COUNT_NV";
      case 0x0000909f: return "GL_PATH_DASH_ARRAY_COUNT_NV";
      case 0x000090a0: return "GL_PATH_COMPUTED_LENGTH_NV";
      case 0x000090a1: return "GL_PATH_FILL_BOUNDING_BOX_NV";
      case 0x000090a2: return "GL_PATH_STROKE_BOUNDING_BOX_NV";
      case 0x000090a3: return "GL_SQUARE_NV";
      case 0x000090a4: return "GL_ROUND_NV";
      case 0x000090a5: return "GL_TRIANGULAR_NV";
      case 0x000090a6: return "GL_BEVEL_NV";
      case 0x000090a7: return "GL_MITER_REVERT_NV";
      case 0x000090a8: return "GL_MITER_TRUNCATE_NV";
      case 0x000090a9: return "GL_SKIP_MISSING_GLYPH_NV";
      case 0x000090aa: return "GL_USE_MISSING_GLYPH_NV";
      case 0x000090ab: return "GL_PATH_ERROR_POSITION_NV";
      case 0x000090ac: return "GL_PATH_FOG_GEN_MODE_NV";
      case 0x000090ad: return "GL_ACCUM_ADJACENT_PAIRS_NV";
      case 0x000090ae: return "GL_ADJACENT_PAIRS_NV";
      case 0x000090af: return "GL_FIRST_TO_REST_NV";
      case 0x000090b0: return "GL_PATH_GEN_MODE_NV";
      case 0x000090b1: return "GL_PATH_GEN_COEFF_NV";
      case 0x000090b2: return "GL_PATH_GEN_COLOR_FORMAT_NV";
      case 0x000090b3: return "GL_PATH_GEN_COMPONENTS_NV";
      case 0x000090b4: return "GL_PATH_DASH_OFFSET_RESET_NV";
      case 0x000090b5: return "GL_MOVE_TO_RESETS_NV";
      case 0x000090b6: return "GL_MOVE_TO_CONTINUES_NV";
      case 0x000090b7: return "GL_PATH_STENCIL_FUNC_NV";
      case 0x000090b8: return "GL_PATH_STENCIL_REF_NV";
      case 0x000090b9: return "GL_PATH_STENCIL_VALUE_MASK_NV";
      case 0x000090ba: return "GL_SCALED_RESOLVE_FASTEST_EXT";
      case 0x000090bb: return "GL_SCALED_RESOLVE_NICEST_EXT";
      case 0x000090bc: return "GL_MIN_MAP_BUFFER_ALIGNMENT";
      case 0x000090bd: return "GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV";
      case 0x000090be: return "GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV";
      case 0x000090bf: return "GL_PATH_COVER_DEPTH_FUNC_NV";
      case 0x000090c7: return "GL_IMAGE_FORMAT_COMPATIBILITY_TYPE";
      case 0x000090c8: return "GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE";
      case 0x000090c9: return "GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS";
      case 0x000090ca: return "GL_MAX_VERTEX_IMAGE_UNIFORMS";
      case 0x000090cb: return "GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS";
      case 0x000090cc: return "GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS";
      case 0x000090cd: return "GL_MAX_GEOMETRY_IMAGE_UNIFORMS";
      case 0x000090ce: return "GL_MAX_FRAGMENT_IMAGE_UNIFORMS";
      case 0x000090cf: return "GL_MAX_COMBINED_IMAGE_UNIFORMS";
      case 0x000090d0: return "GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV";
      case 0x000090d1: return "GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV";
      case 0x000090d2: return "GL_SHADER_STORAGE_BUFFER";
      case 0x000090d3: return "GL_SHADER_STORAGE_BUFFER_BINDING";
      case 0x000090d4: return "GL_SHADER_STORAGE_BUFFER_START";
      case 0x000090d5: return "GL_SHADER_STORAGE_BUFFER_SIZE";
      case 0x000090d6: return "GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS";
      case 0x000090d7: return "GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS";
      case 0x000090d8: return "GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS";
      case 0x000090d9: return "GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS";
      case 0x000090da: return "GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS";
      case 0x000090db: return "GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS";
      case 0x000090dc: return "GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS";
      case 0x000090dd: return "GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS";
      case 0x000090de: return "GL_MAX_SHADER_STORAGE_BLOCK_SIZE";
      case 0x000090df: return "GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT";
      case 0x000090e1: return "GL_SYNC_X11_FENCE_EXT";
      case 0x000090ea: return "GL_DEPTH_STENCIL_TEXTURE_MODE";
      case 0x000090eb: return "GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS";
      case 0x000090ec: return "GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER";
      case 0x000090ed: return "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER";
      case 0x000090ee: return "GL_DISPATCH_INDIRECT_BUFFER";
      case 0x000090ef: return "GL_DISPATCH_INDIRECT_BUFFER_BINDING";
      case 0x000090f0: return "GL_COLOR_ATTACHMENT_EXT";
      case 0x000090f1: return "GL_MULTIVIEW_EXT";
      case 0x000090f2: return "GL_MAX_MULTIVIEW_BUFFERS_EXT";
      case 0x000090f3: return "GL_CONTEXT_ROBUST_ACCESS_EXT";
      case 0x000090fb: return "GL_COMPUTE_PROGRAM_NV";
      case 0x000090fc: return "GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV";
      case 0x00009100: return "GL_TEXTURE_2D_MULTISAMPLE";
      case 0x00009101: return "GL_PROXY_TEXTURE_2D_MULTISAMPLE";
      case 0x00009102: return "GL_TEXTURE_2D_MULTISAMPLE_ARRAY";
      case 0x00009103: return "GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY";
      case 0x00009104: return "GL_TEXTURE_BINDING_2D_MULTISAMPLE";
      case 0x00009105: return "GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY";
      case 0x00009106: return "GL_TEXTURE_SAMPLES";
      case 0x00009107: return "GL_TEXTURE_FIXED_SAMPLE_LOCATIONS";
      case 0x00009108: return "GL_SAMPLER_2D_MULTISAMPLE";
      case 0x00009109: return "GL_INT_SAMPLER_2D_MULTISAMPLE";
      case 0x0000910a: return "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE";
      case 0x0000910b: return "GL_SAMPLER_2D_MULTISAMPLE_ARRAY";
      case 0x0000910c: return "GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY";
      case 0x0000910d: return "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY";
      case 0x0000910e: return "GL_MAX_COLOR_TEXTURE_SAMPLES";
      case 0x0000910f: return "GL_MAX_DEPTH_TEXTURE_SAMPLES";
      case 0x00009110: return "GL_MAX_INTEGER_SAMPLES";
      case 0x00009111: return "GL_MAX_SERVER_WAIT_TIMEOUT";
      case 0x00009112: return "GL_OBJECT_TYPE";
      case 0x00009113: return "GL_SYNC_CONDITION";
      case 0x00009114: return "GL_SYNC_STATUS";
      case 0x00009115: return "GL_SYNC_FLAGS";
      case 0x00009116: return "GL_SYNC_FENCE";
      case 0x00009117: return "GL_SYNC_GPU_COMMANDS_COMPLETE";
      case 0x00009118: return "GL_UNSIGNALED";
      case 0x00009119: return "GL_SIGNALED";
      case 0x0000911a: return "GL_ALREADY_SIGNALED";
      case 0x0000911b: return "GL_TIMEOUT_EXPIRED";
      case 0x0000911c: return "GL_CONDITION_SATISFIED";
      case 0x0000911d: return "GL_WAIT_FAILED";
      case 0x0000911f: return "GL_BUFFER_ACCESS_FLAGS";
      case 0x00009120: return "GL_BUFFER_MAP_LENGTH";
      case 0x00009121: return "GL_BUFFER_MAP_OFFSET";
      case 0x00009122: return "GL_MAX_VERTEX_OUTPUT_COMPONENTS";
      case 0x00009123: return "GL_MAX_GEOMETRY_INPUT_COMPONENTS";
      case 0x00009124: return "GL_MAX_GEOMETRY_OUTPUT_COMPONENTS";
      case 0x00009125: return "GL_MAX_FRAGMENT_INPUT_COMPONENTS";
      case 0x00009126: return "GL_CONTEXT_PROFILE_MASK";
      case 0x00009127: return "GL_UNPACK_COMPRESSED_BLOCK_WIDTH";
      case 0x00009128: return "GL_UNPACK_COMPRESSED_BLOCK_HEIGHT";
      case 0x00009129: return "GL_UNPACK_COMPRESSED_BLOCK_DEPTH";
      case 0x0000912a: return "GL_UNPACK_COMPRESSED_BLOCK_SIZE";
      case 0x0000912b: return "GL_PACK_COMPRESSED_BLOCK_WIDTH";
      case 0x0000912c: return "GL_PACK_COMPRESSED_BLOCK_HEIGHT";
      case 0x0000912d: return "GL_PACK_COMPRESSED_BLOCK_DEPTH";
      case 0x0000912e: return "GL_PACK_COMPRESSED_BLOCK_SIZE";
      case 0x0000912f: return "GL_TEXTURE_IMMUTABLE_FORMAT";
      case 0x00009130: return "GL_SGX_PROGRAM_BINARY_IMG";
      case 0x00009133: return "GL_RENDERBUFFER_SAMPLES_IMG";
      case 0x00009134: return "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG";
      case 0x00009135: return "GL_MAX_SAMPLES_IMG";
      case 0x00009136: return "GL_TEXTURE_SAMPLES_IMG";
      case 0x00009143: return "GL_MAX_DEBUG_MESSAGE_LENGTH";
      case 0x00009144: return "GL_MAX_DEBUG_LOGGED_MESSAGES";
      case 0x00009145: return "GL_DEBUG_LOGGED_MESSAGES";
      case 0x00009146: return "GL_DEBUG_SEVERITY_HIGH";
      case 0x00009147: return "GL_DEBUG_SEVERITY_MEDIUM";
      case 0x00009148: return "GL_DEBUG_SEVERITY_LOW";
      case 0x00009149: return "GL_DEBUG_CATEGORY_API_ERROR_AMD";
      case 0x0000914a: return "GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD";
      case 0x0000914b: return "GL_DEBUG_CATEGORY_DEPRECATION_AMD";
      case 0x0000914c: return "GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD";
      case 0x0000914d: return "GL_DEBUG_CATEGORY_PERFORMANCE_AMD";
      case 0x0000914e: return "GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD";
      case 0x0000914f: return "GL_DEBUG_CATEGORY_APPLICATION_AMD";
      case 0x00009150: return "GL_DEBUG_CATEGORY_OTHER_AMD";
      case 0x00009151: return "GL_DATA_BUFFER_AMD";
      case 0x00009152: return "GL_PERFORMANCE_MONITOR_AMD";
      case 0x00009153: return "GL_QUERY_OBJECT_AMD";
      case 0x00009154: return "GL_VERTEX_ARRAY_OBJECT_AMD";
      case 0x00009155: return "GL_SAMPLER_OBJECT_AMD";
      case 0x00009160: return "GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD";
      case 0x00009192: return "GL_QUERY_BUFFER_AMD";
      case 0x00009193: return "GL_QUERY_BUFFER_BINDING_AMD";
      case 0x00009194: return "GL_QUERY_RESULT_NO_WAIT_AMD";
      case 0x0000919d: return "GL_TEXTURE_BUFFER_OFFSET";
      case 0x0000919e: return "GL_TEXTURE_BUFFER_SIZE";
      case 0x0000919f: return "GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT";
      case 0x000091b9: return "GL_COMPUTE_SHADER";
      case 0x000091bb: return "GL_MAX_COMPUTE_UNIFORM_BLOCKS";
      case 0x000091bc: return "GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS";
      case 0x000091bd: return "GL_MAX_COMPUTE_IMAGE_UNIFORMS";
      case 0x000091be: return "GL_MAX_COMPUTE_WORK_GROUP_COUNT";
      case 0x000091bf: return "GL_MAX_COMPUTE_WORK_GROUP_SIZE";
      case 0x00009250: return "GL_SHADER_BINARY_DMP";
      case 0x00009260: return "GL_GCCSO_SHADER_BINARY_FJ";
      case 0x00009270: return "GL_COMPRESSED_R11_EAC";
      case 0x00009271: return "GL_COMPRESSED_SIGNED_R11_EAC";
      case 0x00009272: return "GL_COMPRESSED_RG11_EAC";
      case 0x00009273: return "GL_COMPRESSED_SIGNED_RG11_EAC";
      case 0x00009274: return "GL_COMPRESSED_RGB8_ETC2";
      case 0x00009275: return "GL_COMPRESSED_SRGB8_ETC2";
      case 0x00009276: return "GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2";
      case 0x00009277: return "GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2";
      case 0x00009278: return "GL_COMPRESSED_RGBA8_ETC2_EAC";
      case 0x00009279: return "GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC";
      case 0x000092c0: return "GL_ATOMIC_COUNTER_BUFFER";
      case 0x000092c1: return "GL_ATOMIC_COUNTER_BUFFER_BINDING";
      case 0x000092c2: return "GL_ATOMIC_COUNTER_BUFFER_START";
      case 0x000092c3: return "GL_ATOMIC_COUNTER_BUFFER_SIZE";
      case 0x000092c4: return "GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE";
      case 0x000092c5: return "GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS";
      case 0x000092c6: return "GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES";
      case 0x000092c7: return "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER";
      case 0x000092c8: return "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER";
      case 0x000092c9: return "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER";
      case 0x000092ca: return "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER";
      case 0x000092cb: return "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER";
      case 0x000092cc: return "GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS";
      case 0x000092cd: return "GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS";
      case 0x000092ce: return "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS";
      case 0x000092cf: return "GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS";
      case 0x000092d0: return "GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS";
      case 0x000092d1: return "GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS";
      case 0x000092d2: return "GL_MAX_VERTEX_ATOMIC_COUNTERS";
      case 0x000092d3: return "GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS";
      case 0x000092d4: return "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS";
      case 0x000092d5: return "GL_MAX_GEOMETRY_ATOMIC_COUNTERS";
      case 0x000092d6: return "GL_MAX_FRAGMENT_ATOMIC_COUNTERS";
      case 0x000092d7: return "GL_MAX_COMBINED_ATOMIC_COUNTERS";
      case 0x000092d8: return "GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE";
      case 0x000092d9: return "GL_ACTIVE_ATOMIC_COUNTER_BUFFERS";
      case 0x000092da: return "GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX";
      case 0x000092db: return "GL_UNSIGNED_INT_ATOMIC_COUNTER";
      case 0x000092dc: return "GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS";
      case 0x000092e0: return "GL_DEBUG_OUTPUT";
      case 0x000092e1: return "GL_UNIFORM";
      case 0x000092e2: return "GL_UNIFORM_BLOCK";
      case 0x000092e3: return "GL_PROGRAM_INPUT";
      case 0x000092e4: return "GL_PROGRAM_OUTPUT";
      case 0x000092e5: return "GL_BUFFER_VARIABLE";
      case 0x000092e6: return "GL_SHADER_STORAGE_BLOCK";
      case 0x000092e7: return "GL_IS_PER_PATCH";
      case 0x000092e8: return "GL_VERTEX_SUBROUTINE";
      case 0x000092e9: return "GL_TESS_CONTROL_SUBROUTINE";
      case 0x000092ea: return "GL_TESS_EVALUATION_SUBROUTINE";
      case 0x000092eb: return "GL_GEOMETRY_SUBROUTINE";
      case 0x000092ec: return "GL_FRAGMENT_SUBROUTINE";
      case 0x000092ed: return "GL_COMPUTE_SUBROUTINE";
      case 0x000092ee: return "GL_VERTEX_SUBROUTINE_UNIFORM";
      case 0x000092ef: return "GL_TESS_CONTROL_SUBROUTINE_UNIFORM";
      case 0x000092f0: return "GL_TESS_EVALUATION_SUBROUTINE_UNIFORM";
      case 0x000092f1: return "GL_GEOMETRY_SUBROUTINE_UNIFORM";
      case 0x000092f2: return "GL_FRAGMENT_SUBROUTINE_UNIFORM";
      case 0x000092f3: return "GL_COMPUTE_SUBROUTINE_UNIFORM";
      case 0x000092f4: return "GL_TRANSFORM_FEEDBACK_VARYING";
      case 0x000092f5: return "GL_ACTIVE_RESOURCES";
      case 0x000092f6: return "GL_MAX_NAME_LENGTH";
      case 0x000092f7: return "GL_MAX_NUM_ACTIVE_VARIABLES";
      case 0x000092f8: return "GL_MAX_NUM_COMPATIBLE_SUBROUTINES";
      case 0x000092f9: return "GL_NAME_LENGTH";
      case 0x000092fa: return "GL_TYPE";
      case 0x000092fb: return "GL_ARRAY_SIZE";
      case 0x000092fc: return "GL_OFFSET";
      case 0x000092fd: return "GL_BLOCK_INDEX";
      case 0x000092fe: return "GL_ARRAY_STRIDE";
      case 0x000092ff: return "GL_MATRIX_STRIDE";
      case 0x00009300: return "GL_IS_ROW_MAJOR";
      case 0x00009301: return "GL_ATOMIC_COUNTER_BUFFER_INDEX";
      case 0x00009302: return "GL_BUFFER_BINDING";
      case 0x00009303: return "GL_BUFFER_DATA_SIZE";
      case 0x00009304: return "GL_NUM_ACTIVE_VARIABLES";
      case 0x00009305: return "GL_ACTIVE_VARIABLES";
      case 0x00009306: return "GL_REFERENCED_BY_VERTEX_SHADER";
      case 0x00009307: return "GL_REFERENCED_BY_TESS_CONTROL_SHADER";
      case 0x00009308: return "GL_REFERENCED_BY_TESS_EVALUATION_SHADER";
      case 0x00009309: return "GL_REFERENCED_BY_GEOMETRY_SHADER";
      case 0x0000930a: return "GL_REFERENCED_BY_FRAGMENT_SHADER";
      case 0x0000930b: return "GL_REFERENCED_BY_COMPUTE_SHADER";
      case 0x0000930c: return "GL_TOP_LEVEL_ARRAY_SIZE";
      case 0x0000930d: return "GL_TOP_LEVEL_ARRAY_STRIDE";
      case 0x0000930e: return "GL_LOCATION";
      case 0x0000930f: return "GL_LOCATION_INDEX";
      case 0x00009310: return "GL_FRAMEBUFFER_DEFAULT_WIDTH";
      case 0x00009311: return "GL_FRAMEBUFFER_DEFAULT_HEIGHT";
      case 0x00009312: return "GL_FRAMEBUFFER_DEFAULT_LAYERS";
      case 0x00009313: return "GL_FRAMEBUFFER_DEFAULT_SAMPLES";
      case 0x00009314: return "GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS";
      case 0x00009315: return "GL_MAX_FRAMEBUFFER_WIDTH";
      case 0x00009316: return "GL_MAX_FRAMEBUFFER_HEIGHT";
      case 0x00009317: return "GL_MAX_FRAMEBUFFER_LAYERS";
      case 0x00009318: return "GL_MAX_FRAMEBUFFER_SAMPLES";
      case 0x00009319: return "GL_LOG_ERROR_REGAL";
      case 0x0000931a: return "GL_LOG_WARNING_REGAL";
      case 0x0000931b: return "GL_LOG_INFO_REGAL";
      case 0x0000931c: return "GL_LOG_APP_REGAL";
      case 0x0000931d: return "GL_LOG_DRIVER_REGAL";
      case 0x0000931e: return "GL_LOG_INTERNAL_REGAL";
      case 0x0000931f: return "GL_LOG_DEBUG_REGAL";
      case 0x00009320: return "GL_LOG_STATUS_REGAL";
      case 0x00009321: return "GL_LOG_HTTP_REGAL";
      case 0x00009322: return "GL_ERROR_REGAL";
      case 0x00009323: return "GL_DEBUG_REGAL";
      case 0x00009324: return "GL_LOG_REGAL";
      case 0x00009325: return "GL_EMULATION_REGAL";
      case 0x00009326: return "GL_DRIVER_REGAL";
      case 0x00009380: return "GL_NUM_SAMPLE_COUNTS";
      case 0x000093a0: return "GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE";
      case 0x000093a1: return "GL_BGRA8_EXT";
      case 0x000093a2: return "GL_TEXTURE_USAGE_ANGLE";
      case 0x000093a3: return "GL_FRAMEBUFFER_ATTACHMENT_ANGLE";
      case 0x000093a4: return "GL_PACK_REVERSE_ROW_ORDER_ANGLE";
      case 0x000093b0: return "GL_COMPRESSED_RGBA_ASTC_4x4_KHR";
      case 0x000093b1: return "GL_COMPRESSED_RGBA_ASTC_5x4_KHR";
      case 0x000093b2: return "GL_COMPRESSED_RGBA_ASTC_5x5_KHR";
      case 0x000093b3: return "GL_COMPRESSED_RGBA_ASTC_6x5_KHR";
      case 0x000093b4: return "GL_COMPRESSED_RGBA_ASTC_6x6_KHR";
      case 0x000093b5: return "GL_COMPRESSED_RGBA_ASTC_8x5_KHR";
      case 0x000093b6: return "GL_COMPRESSED_RGBA_ASTC_8x6_KHR";
      case 0x000093b7: return "GL_COMPRESSED_RGBA_ASTC_8x8_KHR";
      case 0x000093b8: return "GL_COMPRESSED_RGBA_ASTC_10x5_KHR";
      case 0x000093b9: return "GL_COMPRESSED_RGBA_ASTC_10x6_KHR";
      case 0x000093ba: return "GL_COMPRESSED_RGBA_ASTC_10x8_KHR";
      case 0x000093bb: return "GL_COMPRESSED_RGBA_ASTC_10x10_KHR";
      case 0x000093bc: return "GL_COMPRESSED_RGBA_ASTC_12x10_KHR";
      case 0x000093bd: return "GL_COMPRESSED_RGBA_ASTC_12x12_KHR";
      case 0x000093d0: return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR";
      case 0x000093d1: return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR";
      case 0x000093d2: return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR";
      case 0x000093d3: return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR";
      case 0x000093d4: return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR";
      case 0x000093d5: return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR";
      case 0x000093d6: return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR";
      case 0x000093d7: return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR";
      case 0x000093d8: return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR";
      case 0x000093d9: return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR";
      case 0x000093da: return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR";
      case 0x000093db: return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR";
      case 0x000093dc: return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR";
      case 0x000093dd: return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR";
      case 0x00010000: return "GL_STENCIL_BUFFER_BIT0_QCOM";
      case 0x00019262: return "GL_RASTER_POSITION_UNCLIPPED_IBM";
      case 0x0001928a: return "GL_CULL_VERTEX_IBM";
      case 0x00019294: return "GL_ALL_STATIC_DATA_IBM";
      case 0x00019295: return "GL_STATIC_VERTEX_ARRAY_IBM";
      case 0x0001929e: return "GL_VERTEX_ARRAY_LIST_IBM";
      case 0x0001929f: return "GL_NORMAL_ARRAY_LIST_IBM";
      case 0x000192a0: return "GL_COLOR_ARRAY_LIST_IBM";
      case 0x000192a1: return "GL_INDEX_ARRAY_LIST_IBM";
      case 0x000192a2: return "GL_TEXTURE_COORD_ARRAY_LIST_IBM";
      case 0x000192a3: return "GL_EDGE_FLAG_ARRAY_LIST_IBM";
      case 0x000192a4: return "GL_FOG_COORDINATE_ARRAY_LIST_IBM";
      case 0x000192a5: return "GL_SECONDARY_COLOR_ARRAY_LIST_IBM";
      case 0x000192a8: return "GL_VERTEX_ARRAY_LIST_STRIDE_IBM";
      case 0x000192a9: return "GL_NORMAL_ARRAY_LIST_STRIDE_IBM";
      case 0x000192aa: return "GL_COLOR_ARRAY_LIST_STRIDE_IBM";
      case 0x000192ab: return "GL_INDEX_ARRAY_LIST_STRIDE_IBM";
      case 0x000192ac: return "GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM";
      case 0x000192ad: return "GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM";
      case 0x000192ae: return "GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM";
      case 0x000192af: return "GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM";
      case 0x0001a1f8: return "GL_PREFER_DOUBLEBUFFER_HINT_PGI";
      case 0x0001a1fd: return "GL_CONSERVE_MEMORY_HINT_PGI";
      case 0x0001a1fe: return "GL_RECLAIM_MEMORY_HINT_PGI";
      case 0x0001a202: return "GL_NATIVE_GRAPHICS_HANDLE_PGI";
      case 0x0001a203: return "GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI";
      case 0x0001a204: return "GL_NATIVE_GRAPHICS_END_HINT_PGI";
      case 0x0001a20c: return "GL_ALWAYS_FAST_HINT_PGI";
      case 0x0001a20d: return "GL_ALWAYS_SOFT_HINT_PGI";
      case 0x0001a20e: return "GL_ALLOW_DRAW_OBJ_HINT_PGI";
      case 0x0001a20f: return "GL_ALLOW_DRAW_WIN_HINT_PGI";
      case 0x0001a210: return "GL_ALLOW_DRAW_FRG_HINT_PGI";
      case 0x0001a211: return "GL_ALLOW_DRAW_MEM_HINT_PGI";
      case 0x0001a216: return "GL_STRICT_DEPTHFUNC_HINT_PGI";
      case 0x0001a217: return "GL_STRICT_LIGHTING_HINT_PGI";
      case 0x0001a218: return "GL_STRICT_SCISSOR_HINT_PGI";
      case 0x0001a219: return "GL_FULL_STIPPLE_HINT_PGI";
      case 0x0001a220: return "GL_CLIP_NEAR_HINT_PGI";
      case 0x0001a221: return "GL_CLIP_FAR_HINT_PGI";
      case 0x0001a222: return "GL_WIDE_LINE_HINT_PGI";
      case 0x0001a223: return "GL_BACK_NORMALS_HINT_PGI";
      case 0x0001a22a: return "GL_VERTEX_DATA_HINT_PGI";
      case 0x0001a22b: return "GL_VERTEX_CONSISTENT_HINT_PGI";
      case 0x0001a22c: return "GL_MATERIAL_SIDE_HINT_PGI";
      case 0x0001a22d: return "GL_MAX_VERTEX_HINT_PGI";
      case 0x00020000: return "GL_STENCIL_BUFFER_BIT1_QCOM";
      case 0x00040000: return "GL_STENCIL_BUFFER_BIT2_QCOM";
      case 0x00080000: return "GL_STENCIL_BUFFER_BIT3_QCOM";
      case 0x000fffff: return "GL_ALL_ATTRIB_BITS";
      case 0x00100000: return "GL_STENCIL_BUFFER_BIT4_QCOM";
      case 0x00200000: return "GL_STENCIL_BUFFER_BIT5_QCOM";
      case 0x00400000: return "GL_STENCIL_BUFFER_BIT6_QCOM";
      case 0x00800000: return "GL_STENCIL_BUFFER_BIT7_QCOM";
      case 0x01000000: return "GL_MULTISAMPLE_BUFFER_BIT0_QCOM";
      case 0x02000000: return "GL_MULTISAMPLE_BUFFER_BIT1_QCOM";
      case 0x04000000: return "GL_MULTISAMPLE_BUFFER_BIT2_QCOM";
      case 0x08000000: return "GL_MULTISAMPLE_BUFFER_BIT3_QCOM";
      case 0x10000000: return "GL_MULTISAMPLE_BUFFER_BIT4_QCOM";
      case 0x20000000: return "GL_MULTISAMPLE_BIT_3DFX";
      case 0x40000000: return "GL_MULTISAMPLE_BUFFER_BIT6_QCOM";
      case 0x80000000: return "GL_MULTISAMPLE_BUFFER_BIT7_QCOM";
      case 0xffffffff: return "GL_INVALID_INDEX";
      default: break;
    }
  return "unknown_gl_enum";
  }

  const char * GLerrorToString( GLenum e ) {
    switch( e ) {
      case GL_INVALID_ENUM: return "invalid enumerant";
      case GL_INVALID_OPERATION: return "invalid operation";
      case GL_INVALID_VALUE: return "invalid value";
      case GL_NO_ERROR: return "no error";
      case GL_OUT_OF_MEMORY: return "out of memory";
      case GL_TABLE_TOO_LARGE: return "table too large";
      case GL_INVALID_FRAMEBUFFER_OPERATION_EXT: return "invalid framebuffer operation";
      case GL_STACK_OVERFLOW: return "stack overflow";
      case GL_STACK_UNDERFLOW: return "stack underflow";
      default: break;
    }
  return NULL;
  }

#if REGAL_SYS_GLX
  const char * GLXenumToString(int v) {
    switch( v ) {
      case 0x00000000: return "GLX_SYNC_FRAME_SGIX";
      case 0x00000001: return "GLX_3DFX_WINDOW_MODE_MESA";
      case 0x00000002: return "GLX_3DFX_FULLSCREEN_MODE_MESA";
      case 0x00000003: return "GLX_EXTENSIONS";
      case 0x00000004: return "GLX_BAD_VISUAL";
      case 0x00000005: return "GLX_BAD_CONTEXT";
      case 0x00000006: return "GLX_BAD_VALUE";
      case 0x00000007: return "GLX_AUX_BUFFERS";
      case 0x00000008: return "GLX_RED_SIZE";
      case 0x00000009: return "GLX_GREEN_SIZE";
      case 0x0000000a: return "GLX_BLUE_SIZE";
      case 0x0000000b: return "GLX_ALPHA_SIZE";
      case 0x0000000c: return "GLX_DEPTH_SIZE";
      case 0x0000000d: return "GLX_STENCIL_SIZE";
      case 0x0000000e: return "GLX_ACCUM_RED_SIZE";
      case 0x0000000f: return "GLX_ACCUM_GREEN_SIZE";
      case 0x00000010: return "GLX_ACCUM_BLUE_SIZE";
      case 0x00000011: return "GLX_ACCUM_ALPHA_SIZE";
      case 0x00000020: return "GLX_CONFIG_CAVEAT";
      case 0x00000022: return "GLX_X_VISUAL_TYPE";
      case 0x00000023: return "GLX_TRANSPARENT_TYPE";
      case 0x00000024: return "GLX_TRANSPARENT_INDEX_VALUE";
      case 0x00000025: return "GLX_TRANSPARENT_RED_VALUE";
      case 0x00000026: return "GLX_TRANSPARENT_GREEN_VALUE";
      case 0x00000027: return "GLX_TRANSPARENT_BLUE_VALUE";
      case 0x00000028: return "GLX_TRANSPARENT_ALPHA_VALUE";
      case 0x00000040: return "GLX_STENCIL_BUFFER_BIT";
      case 0x00000050: return "GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX";
      case 0x0000005b: return "GLX_BAD_HYPERPIPE_CONFIG_SGIX";
      case 0x0000005c: return "GLX_BAD_HYPERPIPE_SGIX";
      case 0x00000080: return "GLX_ACCUM_BUFFER_BIT";
      case 0x00000100: return "GLX_RGBA_FLOAT_ATI_BIT";
      case 0x00001f00: return "GLX_GPU_VENDOR_AMD";
      case 0x00001f01: return "GLX_GPU_RENDERER_STRING_AMD";
      case 0x00001f02: return "GLX_GPU_OPENGL_VERSION_STRING_AMD";
      case 0x00002091: return "GLX_CONTEXT_MAJOR_VERSION_ARB";
      case 0x00002092: return "GLX_CONTEXT_MINOR_VERSION_ARB";
      case 0x00002094: return "GLX_CONTEXT_FLAGS_ARB";
      case 0x00002095: return "GLX_CONTEXT_ALLOW_BUFFER_BYTE_ORDER_MISMATCH_ARB";
      case 0x000020b0: return "GLX_FLOAT_COMPONENTS_NV";
      case 0x000020b1: return "GLX_RGBA_UNSIGNED_FLOAT_TYPE_EXT";
      case 0x000020b2: return "GLX_FRAMEBUFFER_SRGB_CAPABLE_ARB";
      case 0x000020b3: return "GLX_COLOR_SAMPLES_NV";
      case 0x000020b9: return "GLX_RGBA_FLOAT_TYPE";
      case 0x000020c3: return "GLX_VIDEO_OUT_COLOR_NV";
      case 0x000020c4: return "GLX_VIDEO_OUT_ALPHA_NV";
      case 0x000020c5: return "GLX_VIDEO_OUT_DEPTH_NV";
      case 0x000020c6: return "GLX_VIDEO_OUT_COLOR_AND_ALPHA_NV";
      case 0x000020c7: return "GLX_VIDEO_OUT_COLOR_AND_DEPTH_NV";
      case 0x000020c8: return "GLX_VIDEO_OUT_FRAME_NV";
      case 0x000020c9: return "GLX_VIDEO_OUT_FIELD_1_NV";
      case 0x000020ca: return "GLX_VIDEO_OUT_FIELD_2_NV";
      case 0x000020cb: return "GLX_VIDEO_OUT_STACKED_FIELDS_1_2_NV";
      case 0x000020cc: return "GLX_VIDEO_OUT_STACKED_FIELDS_2_1_NV";
      case 0x000020cd: return "GLX_DEVICE_ID_NV";
      case 0x000020ce: return "GLX_UNIQUE_ID_NV";
      case 0x000020cf: return "GLX_NUM_VIDEO_CAPTURE_SLOTS_NV";
      case 0x000020d0: return "GLX_BIND_TO_TEXTURE_RGB_EXT";
      case 0x000020d1: return "GLX_BIND_TO_TEXTURE_RGBA_EXT";
      case 0x000020d2: return "GLX_BIND_TO_MIPMAP_TEXTURE_EXT";
      case 0x000020d3: return "GLX_BIND_TO_TEXTURE_TARGETS_EXT";
      case 0x000020d4: return "GLX_Y_INVERTED_EXT";
      case 0x000020d5: return "GLX_TEXTURE_FORMAT_EXT";
      case 0x000020d6: return "GLX_TEXTURE_TARGET_EXT";
      case 0x000020d7: return "GLX_MIPMAP_TEXTURE_EXT";
      case 0x000020d8: return "GLX_TEXTURE_FORMAT_NONE_EXT";
      case 0x000020d9: return "GLX_TEXTURE_FORMAT_RGB_EXT";
      case 0x000020da: return "GLX_TEXTURE_FORMAT_RGBA_EXT";
      case 0x000020db: return "GLX_TEXTURE_1D_EXT";
      case 0x000020dc: return "GLX_TEXTURE_2D_EXT";
      case 0x000020dd: return "GLX_TEXTURE_RECTANGLE_EXT";
      case 0x000020de: return "GLX_FRONT_LEFT_EXT";
      case 0x000020df: return "GLX_FRONT_RIGHT_EXT";
      case 0x000020e0: return "GLX_BACK_LEFT_EXT";
      case 0x000020e1: return "GLX_BACK_RIGHT_EXT";
      case 0x000020e2: return "GLX_AUX0_EXT";
      case 0x000020e3: return "GLX_AUX1_EXT";
      case 0x000020e4: return "GLX_AUX2_EXT";
      case 0x000020e5: return "GLX_AUX3_EXT";
      case 0x000020e6: return "GLX_AUX4_EXT";
      case 0x000020e7: return "GLX_AUX5_EXT";
      case 0x000020e8: return "GLX_AUX6_EXT";
      case 0x000020e9: return "GLX_AUX7_EXT";
      case 0x000020ea: return "GLX_AUX8_EXT";
      case 0x000020eb: return "GLX_AUX9_EXT";
      case 0x000020f0: return "GLX_NUM_VIDEO_SLOTS_NV";
      case 0x000020f1: return "GLX_SWAP_INTERVAL_EXT";
      case 0x000020f2: return "GLX_MAX_SWAP_INTERVAL_EXT";
      case 0x000020f3: return "GLX_LATE_SWAPS_TEAR_EXT";
      case 0x000021a2: return "GLX_GPU_FASTEST_TARGET_GPUS_AMD";
      case 0x000021a3: return "GLX_GPU_RAM_AMD";
      case 0x000021a4: return "GLX_GPU_CLOCK_AMD";
      case 0x000021a5: return "GLX_GPU_NUM_PIPES_AMD";
      case 0x000021a6: return "GLX_GPU_NUM_SIMD_AMD";
      case 0x000021a7: return "GLX_GPU_NUM_RB_AMD";
      case 0x000021a8: return "GLX_GPU_NUM_SPI_AMD";
      case 0x00008000: return "GLX_NONE";
      case 0x00008001: return "GLX_SLOW_CONFIG";
      case 0x00008002: return "GLX_TRUE_COLOR";
      case 0x00008003: return "GLX_DIRECT_COLOR";
      case 0x00008004: return "GLX_PSEUDO_COLOR";
      case 0x00008005: return "GLX_STATIC_COLOR";
      case 0x00008006: return "GLX_GRAY_SCALE";
      case 0x00008007: return "GLX_STATIC_GRAY";
      case 0x00008008: return "GLX_TRANSPARENT_RGB";
      case 0x00008009: return "GLX_TRANSPARENT_INDEX";
      case 0x0000800a: return "GLX_SHARE_CONTEXT_EXT";
      case 0x0000800b: return "GLX_VISUAL_ID";
      case 0x0000800c: return "GLX_SCREEN";
      case 0x0000800d: return "GLX_NON_CONFORMANT_CONFIG";
      case 0x00008010: return "GLX_DRAWABLE_TYPE";
      case 0x00008011: return "GLX_RENDER_TYPE";
      case 0x00008012: return "GLX_X_RENDERABLE";
      case 0x00008013: return "GLX_FBCONFIG_ID";
      case 0x00008014: return "GLX_RGBA_TYPE";
      case 0x00008015: return "GLX_COLOR_INDEX_TYPE";
      case 0x00008016: return "GLX_MAX_PBUFFER_WIDTH";
      case 0x00008017: return "GLX_MAX_PBUFFER_HEIGHT";
      case 0x00008018: return "GLX_MAX_PBUFFER_PIXELS";
      case 0x00008019: return "GLX_OPTIMAL_PBUFFER_WIDTH_SGIX";
      case 0x0000801a: return "GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX";
      case 0x0000801b: return "GLX_PRESERVED_CONTENTS";
      case 0x0000801c: return "GLX_LARGEST_PBUFFER";
      case 0x0000801d: return "GLX_WIDTH";
      case 0x0000801e: return "GLX_HEIGHT";
      case 0x0000801f: return "GLX_EVENT_MASK";
      case 0x00008020: return "GLX_DAMAGED";
      case 0x00008021: return "GLX_SAVED";
      case 0x00008022: return "GLX_WINDOW";
      case 0x00008023: return "GLX_PBUFFER";
      case 0x00008025: return "GLX_BLENDED_RGBA_SGIS";
      case 0x00008026: return "GLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS";
      case 0x00008027: return "GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS";
      case 0x00008028: return "GLX_VISUAL_SELECT_GROUP_SGIX";
      case 0x00008030: return "GLX_HYPERPIPE_ID_SGIX";
      case 0x00008040: return "GLX_PBUFFER_HEIGHT";
      case 0x00008041: return "GLX_PBUFFER_WIDTH";
      case 0x00008050: return "GLX_SAMPLE_BUFFERS_3DFX";
      case 0x00008051: return "GLX_SAMPLES_3DFX";
      case 0x00008060: return "GLX_SWAP_METHOD_OML";
      case 0x00008061: return "GLX_SWAP_EXCHANGE_OML";
      case 0x00008062: return "GLX_SWAP_COPY_OML";
      case 0x00008063: return "GLX_SWAP_UNDEFINED_OML";
      case 0x00008171: return "GLX_VIDEO_RESIZE_SUN";
      case 0x00008180: return "GLX_EXCHANGE_COMPLETE_INTEL";
      case 0x00008181: return "GLX_COPY_COMPLETE_INTEL";
      case 0x00008182: return "GLX_FLIP_COMPLETE_INTEL";
      case 0x00008252: return "GLX_LOSE_CONTEXT_ON_RESET_ARB";
      case 0x00008256: return "GLX_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB";
      case 0x00008261: return "GLX_NO_RESET_NOTIFICATION_ARB";
      case 0x000085cd: return "GL_VIDEO_RESIZE_COMPENSATION_SUN";
      case 0x00009126: return "GLX_CONTEXT_PROFILE_MASK_ARB";
      case 0x00009800: return "GLX_BIND_TO_TEXTURE_RGB_ATI";
      case 0x00009801: return "GLX_BIND_TO_TEXTURE_RGBA_ATI";
      case 0x00009802: return "GLX_TEXTURE_FORMAT_ATI";
      case 0x00009803: return "GLX_TEXTURE_TARGET_ATI";
      case 0x00009804: return "GLX_MIPMAP_TEXTURE_ATI";
      case 0x00009805: return "GLX_TEXTURE_RGB_ATI";
      case 0x00009806: return "GLX_TEXTURE_RGBA_ATI";
      case 0x00009807: return "GLX_NO_TEXTURE_ATI";
      case 0x00009808: return "GLX_TEXTURE_CUBE_MAP_ATI";
      case 0x00009809: return "GLX_TEXTURE_1D_ATI";
      case 0x0000980a: return "GLX_TEXTURE_2D_ATI";
      case 0x0000980b: return "GLX_MIPMAP_LEVEL_ATI";
      case 0x0000980c: return "GLX_CUBE_MAP_FACE_ATI";
      case 0x0000980d: return "GLX_TEXTURE_CUBE_MAP_POSITIVE_X_ATI";
      case 0x0000980e: return "GLX_TEXTURE_CUBE_MAP_NEGATIVE_X_ATI";
      case 0x0000980f: return "GLX_TEXTURE_CUBE_MAP_POSITIVE_Y_ATI";
      case 0x00009810: return "GLX_TEXTURE_CUBE_MAP_NEGATIVE_Y_ATI";
      case 0x00009811: return "GLX_TEXTURE_CUBE_MAP_POSITIVE_Z_ATI";
      case 0x00009812: return "GLX_TEXTURE_CUBE_MAP_NEGATIVE_Z_ATI";
      case 0x00009813: return "GLX_FRONT_LEFT_ATI";
      case 0x00009814: return "GLX_FRONT_RIGHT_ATI";
      case 0x00009815: return "GLX_BACK_LEFT_ATI";
      case 0x00009816: return "GLX_BACK_RIGHT_ATI";
      case 0x00009817: return "GLX_AUX0_ATI";
      case 0x00009818: return "GLX_AUX1_ATI";
      case 0x00009819: return "GLX_AUX2_ATI";
      case 0x0000981a: return "GLX_AUX3_ATI";
      case 0x0000981b: return "GLX_AUX4_ATI";
      case 0x0000981c: return "GLX_AUX5_ATI";
      case 0x0000981d: return "GLX_AUX6_ATI";
      case 0x0000981e: return "GLX_AUX7_ATI";
      case 0x0000981f: return "GLX_AUX8_ATI";
      case 0x00009820: return "GLX_AUX9_ATI";
      case 0x00009821: return "GLX_BIND_TO_TEXTURE_LUMINANCE_ATI";
      case 0x00009822: return "GLX_BIND_TO_TEXTURE_INTENSITY_ATI";
      case 0x000186a0: return "GLX_SAMPLE_BUFFERS";
      case 0x000186a1: return "GLX_SAMPLES";
      case 0x04000000: return "GLX_BUFFER_SWAP_COMPLETE_INTEL_MASK";
      case 0x08000000: return "GLX_PBUFFER_CLOBBER_MASK";
      case 0xffffffff: return "GLX_DONT_CARE";
      default: break;
    }
    return "unknown_glx_enum";
  }
#endif // REGAL_SYS_GLX

#if REGAL_SYS_EGL
  const char * EGLenumToString(int v) {
    switch( v ) {
      case 0x00000000: return "EGL_FALSE";
      case 0x00000001: return "EGL_TRUE";
      case 0x00000002: return "EGL_DRM_BUFFER_USE_SHARE_MESA";
      case 0x00000004: return "EGL_CONTEXT_OPENGL_ROBUST_ACCESS_BIT_KHR";
      case 0x00000008: return "EGL_OPENGL_BIT";
      case 0x00000020: return "EGL_VG_COLORSPACE_LINEAR_BIT_KHR";
      case 0x00000040: return "EGL_OPENGL_ES3_BIT_KHR";
      case 0x00000080: return "EGL_LOCK_SURFACE_BIT_KHR";
      case 0x00000100: return "EGL_OPTIMAL_FORMAT_BIT_KHR";
      case 0x00000200: return "EGL_MULTISAMPLE_RESOLVE_BOX_BIT";
      case 0x00000400: return "EGL_SWAP_BEHAVIOR_PRESERVED_BIT";
      case 0x00000800: return "EGL_STREAM_BIT_KHR";
      case 0x00002710: return "EGL_DISPLAY_SCALING";
      case 0x00003000: return "EGL_SUCCESS";
      case 0x00003001: return "EGL_NOT_INITIALIZED";
      case 0x00003002: return "EGL_BAD_ACCESS";
      case 0x00003003: return "EGL_BAD_ALLOC";
      case 0x00003004: return "EGL_BAD_ATTRIBUTE";
      case 0x00003005: return "EGL_BAD_CONFIG";
      case 0x00003006: return "EGL_BAD_CONTEXT";
      case 0x00003007: return "EGL_BAD_CURRENT_SURFACE";
      case 0x00003008: return "EGL_BAD_DISPLAY";
      case 0x00003009: return "EGL_BAD_MATCH";
      case 0x0000300a: return "EGL_BAD_NATIVE_PIXMAP";
      case 0x0000300b: return "EGL_BAD_NATIVE_WINDOW";
      case 0x0000300c: return "EGL_BAD_PARAMETER";
      case 0x0000300d: return "EGL_BAD_SURFACE";
      case 0x0000300e: return "EGL_CONTEXT_LOST";
      case 0x00003020: return "EGL_BUFFER_SIZE";
      case 0x00003021: return "EGL_ALPHA_SIZE";
      case 0x00003022: return "EGL_BLUE_SIZE";
      case 0x00003023: return "EGL_GREEN_SIZE";
      case 0x00003024: return "EGL_RED_SIZE";
      case 0x00003025: return "EGL_DEPTH_SIZE";
      case 0x00003026: return "EGL_STENCIL_SIZE";
      case 0x00003027: return "EGL_CONFIG_CAVEAT";
      case 0x00003028: return "EGL_CONFIG_ID";
      case 0x00003029: return "EGL_LEVEL";
      case 0x0000302a: return "EGL_MAX_PBUFFER_HEIGHT";
      case 0x0000302b: return "EGL_MAX_PBUFFER_PIXELS";
      case 0x0000302c: return "EGL_MAX_PBUFFER_WIDTH";
      case 0x0000302d: return "EGL_NATIVE_RENDERABLE";
      case 0x0000302e: return "EGL_NATIVE_VISUAL_ID";
      case 0x0000302f: return "EGL_NATIVE_VISUAL_TYPE";
      case 0x00003031: return "EGL_SAMPLES";
      case 0x00003032: return "EGL_SAMPLE_BUFFERS";
      case 0x00003033: return "EGL_SURFACE_TYPE";
      case 0x00003034: return "EGL_TRANSPARENT_TYPE";
      case 0x00003035: return "EGL_TRANSPARENT_BLUE_VALUE";
      case 0x00003036: return "EGL_TRANSPARENT_GREEN_VALUE";
      case 0x00003037: return "EGL_TRANSPARENT_RED_VALUE";
      case 0x00003038: return "EGL_NONE";
      case 0x00003039: return "EGL_BIND_TO_TEXTURE_RGB";
      case 0x0000303a: return "EGL_BIND_TO_TEXTURE_RGBA";
      case 0x0000303b: return "EGL_MIN_SWAP_INTERVAL";
      case 0x0000303c: return "EGL_MAX_SWAP_INTERVAL";
      case 0x0000303d: return "EGL_LUMINANCE_SIZE";
      case 0x0000303e: return "EGL_ALPHA_MASK_SIZE";
      case 0x0000303f: return "EGL_COLOR_BUFFER_TYPE";
      case 0x00003040: return "EGL_RENDERABLE_TYPE";
      case 0x00003041: return "EGL_MATCH_NATIVE_PIXMAP";
      case 0x00003042: return "EGL_CONFORMANT";
      case 0x00003043: return "EGL_MATCH_FORMAT_KHR";
      case 0x00003050: return "EGL_SLOW_CONFIG";
      case 0x00003051: return "EGL_NON_CONFORMANT_CONFIG";
      case 0x00003052: return "EGL_TRANSPARENT_RGB";
      case 0x00003053: return "EGL_VENDOR";
      case 0x00003054: return "EGL_VERSION";
      case 0x00003055: return "EGL_EXTENSIONS";
      case 0x00003056: return "EGL_HEIGHT";
      case 0x00003057: return "EGL_WIDTH";
      case 0x00003058: return "EGL_LARGEST_PBUFFER";
      case 0x00003059: return "EGL_DRAW";
      case 0x0000305a: return "EGL_READ";
      case 0x0000305b: return "EGL_CORE_NATIVE_ENGINE";
      case 0x0000305c: return "EGL_NO_TEXTURE";
      case 0x0000305d: return "EGL_TEXTURE_RGB";
      case 0x0000305e: return "EGL_TEXTURE_RGBA";
      case 0x0000305f: return "EGL_TEXTURE_2D";
      case 0x00003080: return "EGL_TEXTURE_FORMAT";
      case 0x00003081: return "EGL_TEXTURE_TARGET";
      case 0x00003082: return "EGL_MIPMAP_TEXTURE";
      case 0x00003083: return "EGL_MIPMAP_LEVEL";
      case 0x00003084: return "EGL_BACK_BUFFER";
      case 0x00003085: return "EGL_SINGLE_BUFFER";
      case 0x00003086: return "EGL_RENDER_BUFFER";
      case 0x00003087: return "EGL_VG_COLORSPACE";
      case 0x00003088: return "EGL_VG_ALPHA_FORMAT";
      case 0x00003089: return "EGL_VG_COLORSPACE_sRGB";
      case 0x0000308a: return "EGL_VG_COLORSPACE_LINEAR";
      case 0x0000308b: return "EGL_VG_ALPHA_FORMAT_NONPRE";
      case 0x0000308c: return "EGL_VG_ALPHA_FORMAT_PRE";
      case 0x0000308d: return "EGL_CLIENT_APIS";
      case 0x0000308e: return "EGL_RGB_BUFFER";
      case 0x0000308f: return "EGL_LUMINANCE_BUFFER";
      case 0x00003090: return "EGL_HORIZONTAL_RESOLUTION";
      case 0x00003091: return "EGL_VERTICAL_RESOLUTION";
      case 0x00003092: return "EGL_PIXEL_ASPECT_RATIO";
      case 0x00003093: return "EGL_SWAP_BEHAVIOR";
      case 0x00003094: return "EGL_BUFFER_PRESERVED";
      case 0x00003095: return "EGL_BUFFER_DESTROYED";
      case 0x00003096: return "EGL_OPENVG_IMAGE";
      case 0x00003097: return "EGL_CONTEXT_CLIENT_TYPE";
      case 0x00003098: return "EGL_CONTEXT_CLIENT_VERSION";
      case 0x00003099: return "EGL_MULTISAMPLE_RESOLVE";
      case 0x0000309a: return "EGL_MULTISAMPLE_RESOLVE_DEFAULT";
      case 0x0000309b: return "EGL_MULTISAMPLE_RESOLVE_BOX";
      case 0x000030a0: return "EGL_OPENGL_ES_API";
      case 0x000030a1: return "EGL_OPENVG_API";
      case 0x000030a2: return "EGL_OPENGL_API";
      case 0x000030b0: return "EGL_NATIVE_PIXMAP_KHR";
      case 0x000030b1: return "EGL_GL_TEXTURE_2D_KHR";
      case 0x000030b2: return "EGL_GL_TEXTURE_3D_KHR";
      case 0x000030b3: return "EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X_KHR";
      case 0x000030b4: return "EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X_KHR";
      case 0x000030b5: return "EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y_KHR";
      case 0x000030b6: return "EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_KHR";
      case 0x000030b7: return "EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z_KHR";
      case 0x000030b8: return "EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_KHR";
      case 0x000030b9: return "EGL_GL_RENDERBUFFER_KHR";
      case 0x000030ba: return "EGL_VG_PARENT_IMAGE_KHR";
      case 0x000030bc: return "EGL_GL_TEXTURE_LEVEL_KHR";
      case 0x000030bd: return "EGL_GL_TEXTURE_ZOFFSET_KHR";
      case 0x000030be: return "EGL_POST_SUB_BUFFER_SUPPORTED_NV";
      case 0x000030bf: return "EGL_CONTEXT_OPENGL_ROBUST_ACCESS_EXT";
      case 0x000030c0: return "EGL_FORMAT_RGB_565_EXACT_KHR";
      case 0x000030c1: return "EGL_FORMAT_RGB_565_KHR";
      case 0x000030c2: return "EGL_FORMAT_RGBA_8888_EXACT_KHR";
      case 0x000030c3: return "EGL_FORMAT_RGBA_8888_KHR";
      case 0x000030c4: return "EGL_MAP_PRESERVE_PIXELS_KHR";
      case 0x000030c5: return "EGL_LOCK_USAGE_HINT_KHR";
      case 0x000030c6: return "EGL_BITMAP_POINTER_KHR";
      case 0x000030c7: return "EGL_BITMAP_PITCH_KHR";
      case 0x000030c8: return "EGL_BITMAP_ORIGIN_KHR";
      case 0x000030c9: return "EGL_BITMAP_PIXEL_RED_OFFSET_KHR";
      case 0x000030ca: return "EGL_BITMAP_PIXEL_GREEN_OFFSET_KHR";
      case 0x000030cb: return "EGL_BITMAP_PIXEL_BLUE_OFFSET_KHR";
      case 0x000030cc: return "EGL_BITMAP_PIXEL_ALPHA_OFFSET_KHR";
      case 0x000030cd: return "EGL_BITMAP_PIXEL_LUMINANCE_OFFSET_KHR";
      case 0x000030ce: return "EGL_LOWER_LEFT_KHR";
      case 0x000030cf: return "EGL_UPPER_LEFT_KHR";
      case 0x000030d2: return "EGL_IMAGE_PRESERVED_KHR";
      case 0x000030e0: return "EGL_COVERAGE_BUFFERS_NV";
      case 0x000030e1: return "EGL_COVERAGE_SAMPLES_NV";
      case 0x000030e2: return "EGL_DEPTH_ENCODING_NV";
      case 0x000030e3: return "EGL_DEPTH_ENCODING_NONLINEAR_NV";
      case 0x000030e6: return "EGL_SYNC_PRIOR_COMMANDS_COMPLETE_NV";
      case 0x000030e7: return "EGL_SYNC_STATUS_NV";
      case 0x000030e8: return "EGL_SIGNALED_NV";
      case 0x000030e9: return "EGL_UNSIGNALED_NV";
      case 0x000030ea: return "EGL_ALREADY_SIGNALED_NV";
      case 0x000030eb: return "EGL_TIMEOUT_EXPIRED_NV";
      case 0x000030ec: return "EGL_CONDITION_SATISFIED_NV";
      case 0x000030ed: return "EGL_SYNC_TYPE_NV";
      case 0x000030ee: return "EGL_SYNC_CONDITION_NV";
      case 0x000030ef: return "EGL_SYNC_FENCE_NV";
      case 0x000030f0: return "EGL_SYNC_PRIOR_COMMANDS_COMPLETE_KHR";
      case 0x000030f1: return "EGL_SYNC_STATUS_KHR";
      case 0x000030f2: return "EGL_SIGNALED_KHR";
      case 0x000030f3: return "EGL_UNSIGNALED_KHR";
      case 0x000030f5: return "EGL_TIMEOUT_EXPIRED_KHR";
      case 0x000030f6: return "EGL_CONDITION_SATISFIED_KHR";
      case 0x000030f7: return "EGL_SYNC_TYPE_KHR";
      case 0x000030f8: return "EGL_SYNC_CONDITION_KHR";
      case 0x000030f9: return "EGL_SYNC_FENCE_KHR";
      case 0x000030fa: return "EGL_SYNC_REUSABLE_KHR";
      case 0x000030fb: return "EGL_CONTEXT_MINOR_VERSION_KHR";
      case 0x000030fc: return "EGL_CONTEXT_FLAGS_KHR";
      case 0x000030fd: return "EGL_CONTEXT_OPENGL_PROFILE_MASK_KHR";
      case 0x00003100: return "EGL_CONTEXT_PRIORITY_LEVEL_IMG";
      case 0x00003101: return "EGL_CONTEXT_PRIORITY_HIGH_IMG";
      case 0x00003102: return "EGL_CONTEXT_PRIORITY_MEDIUM_IMG";
      case 0x00003103: return "EGL_CONTEXT_PRIORITY_LOW_IMG";
      case 0x00003110: return "EGL_BITMAP_PIXEL_SIZE_KHR";
      case 0x00003131: return "EGL_COVERAGE_SAMPLE_RESOLVE_NV";
      case 0x00003132: return "EGL_COVERAGE_SAMPLE_RESOLVE_DEFAULT_NV";
      case 0x00003133: return "EGL_COVERAGE_SAMPLE_RESOLVE_NONE_NV";
      case 0x00003134: return "EGL_MULTIVIEW_VIEW_COUNT_EXT";
      case 0x00003138: return "EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_EXT";
      case 0x000031bd: return "EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_KHR";
      case 0x000031be: return "EGL_NO_RESET_NOTIFICATION_KHR";
      case 0x000031bf: return "EGL_LOSE_CONTEXT_ON_RESET_KHR";
      case 0x000031d0: return "EGL_DRM_BUFFER_FORMAT_MESA";
      case 0x000031d1: return "EGL_DRM_BUFFER_USE_MESA";
      case 0x000031d2: return "EGL_DRM_BUFFER_FORMAT_ARGB32_MESA";
      case 0x000031d3: return "EGL_DRM_BUFFER_MESA";
      case 0x000031d4: return "EGL_DRM_BUFFER_STRIDE_MESA";
      case 0x000031fc: return "EGL_STREAM_FIFO_LENGTH_KHR";
      case 0x000031fd: return "EGL_STREAM_TIME_NOW_KHR";
      case 0x000031fe: return "EGL_STREAM_TIME_CONSUMER_KHR";
      case 0x000031ff: return "EGL_STREAM_TIME_PRODUCER_KHR";
      case 0x00003200: return "EGL_D3D_TEXTURE_2D_SHARE_HANDLE_ANGLE";
      case 0x00003210: return "EGL_CONSUMER_LATENCY_USEC_KHR";
      case 0x00003212: return "EGL_PRODUCER_FRAME_KHR";
      case 0x00003213: return "EGL_CONSUMER_FRAME_KHR";
      case 0x00003214: return "EGL_STREAM_STATE_KHR";
      case 0x00003215: return "EGL_STREAM_STATE_CREATED_KHR";
      case 0x00003216: return "EGL_STREAM_STATE_CONNECTING_KHR";
      case 0x00003217: return "EGL_STREAM_STATE_EMPTY_KHR";
      case 0x00003218: return "EGL_STREAM_STATE_NEW_FRAME_AVAILABLE_KHR";
      case 0x00003219: return "EGL_STREAM_STATE_OLD_FRAME_AVAILABLE_KHR";
      case 0x0000321a: return "EGL_STREAM_STATE_DISCONNECTED_KHR";
      case 0x0000321b: return "EGL_BAD_STREAM_KHR";
      case 0x0000321c: return "EGL_BAD_STATE_KHR";
      case 0x0000321e: return "EGL_CONSUMER_ACQUIRE_TIMEOUT_USEC_KHR";
      case 0x00008000: return "GL_COVERAGE_BUFFER_BIT_NV";
      case 0x00008e2c: return "GL_DEPTH_COMPONENT16_NONLINEAR_NV";
      case 0x00008ed0: return "GL_COVERAGE_COMPONENT_NV";
      case 0x00008ed1: return "GL_COVERAGE_COMPONENT4_NV";
      case 0x00008ed2: return "GL_COVERAGE_ATTACHMENT_NV";
      case 0x00008ed3: return "GL_COVERAGE_BUFFERS_NV";
      case 0x00008ed5: return "GL_COVERAGE_ALL_FRAGMENTS_NV";
      case 0x00008ed6: return "GL_COVERAGE_EDGE_FRAGMENTS_NV";
      case 0x00008ed7: return "GL_COVERAGE_AUTOMATIC_NV";
      case 0x00008f70: return "EGL_COLOR_FORMAT_HI";
      case 0x00008f71: return "EGL_COLOR_RGB_HI";
      case 0x00008f72: return "EGL_COLOR_RGBA_HI";
      case 0x00008f73: return "EGL_COLOR_ARGB_HI";
      default: break;
    }
    return "unknown_egl_enum";
  }
#endif // REGAL_SYS_EGL

}

REGAL_NAMESPACE_END
